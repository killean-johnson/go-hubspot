/*
Public App Crm Cards

Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package public_app_crm_cards

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CardAuditResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardAuditResponse{}

// CardAuditResponse struct for CardAuditResponse
type CardAuditResponse struct {
	ActionType string `json:"actionType"`
	ObjectTypeId int32 `json:"objectTypeId"`
	AuthSource string `json:"authSource"`
	ChangedAt int64 `json:"changedAt"`
	ApplicationId int32 `json:"applicationId"`
	InitiatingUserId int32 `json:"initiatingUserId"`
}

type _CardAuditResponse CardAuditResponse

// NewCardAuditResponse instantiates a new CardAuditResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardAuditResponse(actionType string, objectTypeId int32, authSource string, changedAt int64, applicationId int32, initiatingUserId int32) *CardAuditResponse {
	this := CardAuditResponse{}
	this.ActionType = actionType
	this.ObjectTypeId = objectTypeId
	this.AuthSource = authSource
	this.ChangedAt = changedAt
	this.ApplicationId = applicationId
	this.InitiatingUserId = initiatingUserId
	return &this
}

// NewCardAuditResponseWithDefaults instantiates a new CardAuditResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardAuditResponseWithDefaults() *CardAuditResponse {
	this := CardAuditResponse{}
	return &this
}

// GetActionType returns the ActionType field value
func (o *CardAuditResponse) GetActionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value
// and a boolean to check if the value has been set.
func (o *CardAuditResponse) GetActionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionType, true
}

// SetActionType sets field value
func (o *CardAuditResponse) SetActionType(v string) {
	o.ActionType = v
}

// GetObjectTypeId returns the ObjectTypeId field value
func (o *CardAuditResponse) GetObjectTypeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ObjectTypeId
}

// GetObjectTypeIdOk returns a tuple with the ObjectTypeId field value
// and a boolean to check if the value has been set.
func (o *CardAuditResponse) GetObjectTypeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectTypeId, true
}

// SetObjectTypeId sets field value
func (o *CardAuditResponse) SetObjectTypeId(v int32) {
	o.ObjectTypeId = v
}

// GetAuthSource returns the AuthSource field value
func (o *CardAuditResponse) GetAuthSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthSource
}

// GetAuthSourceOk returns a tuple with the AuthSource field value
// and a boolean to check if the value has been set.
func (o *CardAuditResponse) GetAuthSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthSource, true
}

// SetAuthSource sets field value
func (o *CardAuditResponse) SetAuthSource(v string) {
	o.AuthSource = v
}

// GetChangedAt returns the ChangedAt field value
func (o *CardAuditResponse) GetChangedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ChangedAt
}

// GetChangedAtOk returns a tuple with the ChangedAt field value
// and a boolean to check if the value has been set.
func (o *CardAuditResponse) GetChangedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChangedAt, true
}

// SetChangedAt sets field value
func (o *CardAuditResponse) SetChangedAt(v int64) {
	o.ChangedAt = v
}

// GetApplicationId returns the ApplicationId field value
func (o *CardAuditResponse) GetApplicationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *CardAuditResponse) GetApplicationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *CardAuditResponse) SetApplicationId(v int32) {
	o.ApplicationId = v
}

// GetInitiatingUserId returns the InitiatingUserId field value
func (o *CardAuditResponse) GetInitiatingUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InitiatingUserId
}

// GetInitiatingUserIdOk returns a tuple with the InitiatingUserId field value
// and a boolean to check if the value has been set.
func (o *CardAuditResponse) GetInitiatingUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitiatingUserId, true
}

// SetInitiatingUserId sets field value
func (o *CardAuditResponse) SetInitiatingUserId(v int32) {
	o.InitiatingUserId = v
}

func (o CardAuditResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardAuditResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["actionType"] = o.ActionType
	toSerialize["objectTypeId"] = o.ObjectTypeId
	toSerialize["authSource"] = o.AuthSource
	toSerialize["changedAt"] = o.ChangedAt
	toSerialize["applicationId"] = o.ApplicationId
	toSerialize["initiatingUserId"] = o.InitiatingUserId
	return toSerialize, nil
}

func (o *CardAuditResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"actionType",
		"objectTypeId",
		"authSource",
		"changedAt",
		"applicationId",
		"initiatingUserId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCardAuditResponse := _CardAuditResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCardAuditResponse)

	if err != nil {
		return err
	}

	*o = CardAuditResponse(varCardAuditResponse)

	return err
}

type NullableCardAuditResponse struct {
	value *CardAuditResponse
	isSet bool
}

func (v NullableCardAuditResponse) Get() *CardAuditResponse {
	return v.value
}

func (v *NullableCardAuditResponse) Set(val *CardAuditResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCardAuditResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCardAuditResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardAuditResponse(val *CardAuditResponse) *NullableCardAuditResponse {
	return &NullableCardAuditResponse{value: val, isSet: true}
}

func (v NullableCardAuditResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardAuditResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


