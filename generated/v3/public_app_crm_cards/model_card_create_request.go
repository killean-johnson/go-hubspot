/*
Public App Crm Cards

Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package public_app_crm_cards

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CardCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardCreateRequest{}

// CardCreateRequest State of card definition to be created
type CardCreateRequest struct {
	Fetch CardFetchBody `json:"fetch"`
	Display CardDisplayBody `json:"display"`
	// The top-level title for this card. Displayed to users in the CRM UI.
	Title string `json:"title"`
	Actions CardActions `json:"actions"`
}

type _CardCreateRequest CardCreateRequest

// NewCardCreateRequest instantiates a new CardCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardCreateRequest(fetch CardFetchBody, display CardDisplayBody, title string, actions CardActions) *CardCreateRequest {
	this := CardCreateRequest{}
	this.Fetch = fetch
	this.Display = display
	this.Title = title
	this.Actions = actions
	return &this
}

// NewCardCreateRequestWithDefaults instantiates a new CardCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardCreateRequestWithDefaults() *CardCreateRequest {
	this := CardCreateRequest{}
	return &this
}

// GetFetch returns the Fetch field value
func (o *CardCreateRequest) GetFetch() CardFetchBody {
	if o == nil {
		var ret CardFetchBody
		return ret
	}

	return o.Fetch
}

// GetFetchOk returns a tuple with the Fetch field value
// and a boolean to check if the value has been set.
func (o *CardCreateRequest) GetFetchOk() (*CardFetchBody, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fetch, true
}

// SetFetch sets field value
func (o *CardCreateRequest) SetFetch(v CardFetchBody) {
	o.Fetch = v
}

// GetDisplay returns the Display field value
func (o *CardCreateRequest) GetDisplay() CardDisplayBody {
	if o == nil {
		var ret CardDisplayBody
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *CardCreateRequest) GetDisplayOk() (*CardDisplayBody, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *CardCreateRequest) SetDisplay(v CardDisplayBody) {
	o.Display = v
}

// GetTitle returns the Title field value
func (o *CardCreateRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CardCreateRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CardCreateRequest) SetTitle(v string) {
	o.Title = v
}

// GetActions returns the Actions field value
func (o *CardCreateRequest) GetActions() CardActions {
	if o == nil {
		var ret CardActions
		return ret
	}

	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value
// and a boolean to check if the value has been set.
func (o *CardCreateRequest) GetActionsOk() (*CardActions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Actions, true
}

// SetActions sets field value
func (o *CardCreateRequest) SetActions(v CardActions) {
	o.Actions = v
}

func (o CardCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fetch"] = o.Fetch
	toSerialize["display"] = o.Display
	toSerialize["title"] = o.Title
	toSerialize["actions"] = o.Actions
	return toSerialize, nil
}

func (o *CardCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fetch",
		"display",
		"title",
		"actions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCardCreateRequest := _CardCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCardCreateRequest)

	if err != nil {
		return err
	}

	*o = CardCreateRequest(varCardCreateRequest)

	return err
}

type NullableCardCreateRequest struct {
	value *CardCreateRequest
	isSet bool
}

func (v NullableCardCreateRequest) Get() *CardCreateRequest {
	return v.value
}

func (v *NullableCardCreateRequest) Set(val *CardCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCardCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCardCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardCreateRequest(val *CardCreateRequest) *NullableCardCreateRequest {
	return &NullableCardCreateRequest{value: val, isSet: true}
}

func (v NullableCardCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


