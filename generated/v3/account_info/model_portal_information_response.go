/*
Account Account Info

Get information about a HubSpot account and its API usage.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package account_info

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PortalInformationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortalInformationResponse{}

// PortalInformationResponse struct for PortalInformationResponse
type PortalInformationResponse struct {
	AdditionalCurrencies []string `json:"additionalCurrencies"`
	UtcOffset string `json:"utcOffset"`
	CompanyCurrency string `json:"companyCurrency"`
	PortalId int32 `json:"portalId"`
	AccountType string `json:"accountType"`
	UiDomain string `json:"uiDomain"`
	TimeZone string `json:"timeZone"`
	DataHostingLocation string `json:"dataHostingLocation"`
	UtcOffsetMilliseconds int64 `json:"utcOffsetMilliseconds"`
}

type _PortalInformationResponse PortalInformationResponse

// NewPortalInformationResponse instantiates a new PortalInformationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortalInformationResponse(additionalCurrencies []string, utcOffset string, companyCurrency string, portalId int32, accountType string, uiDomain string, timeZone string, dataHostingLocation string, utcOffsetMilliseconds int64) *PortalInformationResponse {
	this := PortalInformationResponse{}
	this.AdditionalCurrencies = additionalCurrencies
	this.UtcOffset = utcOffset
	this.CompanyCurrency = companyCurrency
	this.PortalId = portalId
	this.AccountType = accountType
	this.UiDomain = uiDomain
	this.TimeZone = timeZone
	this.DataHostingLocation = dataHostingLocation
	this.UtcOffsetMilliseconds = utcOffsetMilliseconds
	return &this
}

// NewPortalInformationResponseWithDefaults instantiates a new PortalInformationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortalInformationResponseWithDefaults() *PortalInformationResponse {
	this := PortalInformationResponse{}
	return &this
}

// GetAdditionalCurrencies returns the AdditionalCurrencies field value
func (o *PortalInformationResponse) GetAdditionalCurrencies() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AdditionalCurrencies
}

// GetAdditionalCurrenciesOk returns a tuple with the AdditionalCurrencies field value
// and a boolean to check if the value has been set.
func (o *PortalInformationResponse) GetAdditionalCurrenciesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdditionalCurrencies, true
}

// SetAdditionalCurrencies sets field value
func (o *PortalInformationResponse) SetAdditionalCurrencies(v []string) {
	o.AdditionalCurrencies = v
}

// GetUtcOffset returns the UtcOffset field value
func (o *PortalInformationResponse) GetUtcOffset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UtcOffset
}

// GetUtcOffsetOk returns a tuple with the UtcOffset field value
// and a boolean to check if the value has been set.
func (o *PortalInformationResponse) GetUtcOffsetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UtcOffset, true
}

// SetUtcOffset sets field value
func (o *PortalInformationResponse) SetUtcOffset(v string) {
	o.UtcOffset = v
}

// GetCompanyCurrency returns the CompanyCurrency field value
func (o *PortalInformationResponse) GetCompanyCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyCurrency
}

// GetCompanyCurrencyOk returns a tuple with the CompanyCurrency field value
// and a boolean to check if the value has been set.
func (o *PortalInformationResponse) GetCompanyCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyCurrency, true
}

// SetCompanyCurrency sets field value
func (o *PortalInformationResponse) SetCompanyCurrency(v string) {
	o.CompanyCurrency = v
}

// GetPortalId returns the PortalId field value
func (o *PortalInformationResponse) GetPortalId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PortalId
}

// GetPortalIdOk returns a tuple with the PortalId field value
// and a boolean to check if the value has been set.
func (o *PortalInformationResponse) GetPortalIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortalId, true
}

// SetPortalId sets field value
func (o *PortalInformationResponse) SetPortalId(v int32) {
	o.PortalId = v
}

// GetAccountType returns the AccountType field value
func (o *PortalInformationResponse) GetAccountType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *PortalInformationResponse) GetAccountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *PortalInformationResponse) SetAccountType(v string) {
	o.AccountType = v
}

// GetUiDomain returns the UiDomain field value
func (o *PortalInformationResponse) GetUiDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UiDomain
}

// GetUiDomainOk returns a tuple with the UiDomain field value
// and a boolean to check if the value has been set.
func (o *PortalInformationResponse) GetUiDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UiDomain, true
}

// SetUiDomain sets field value
func (o *PortalInformationResponse) SetUiDomain(v string) {
	o.UiDomain = v
}

// GetTimeZone returns the TimeZone field value
func (o *PortalInformationResponse) GetTimeZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value
// and a boolean to check if the value has been set.
func (o *PortalInformationResponse) GetTimeZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeZone, true
}

// SetTimeZone sets field value
func (o *PortalInformationResponse) SetTimeZone(v string) {
	o.TimeZone = v
}

// GetDataHostingLocation returns the DataHostingLocation field value
func (o *PortalInformationResponse) GetDataHostingLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataHostingLocation
}

// GetDataHostingLocationOk returns a tuple with the DataHostingLocation field value
// and a boolean to check if the value has been set.
func (o *PortalInformationResponse) GetDataHostingLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataHostingLocation, true
}

// SetDataHostingLocation sets field value
func (o *PortalInformationResponse) SetDataHostingLocation(v string) {
	o.DataHostingLocation = v
}

// GetUtcOffsetMilliseconds returns the UtcOffsetMilliseconds field value
func (o *PortalInformationResponse) GetUtcOffsetMilliseconds() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UtcOffsetMilliseconds
}

// GetUtcOffsetMillisecondsOk returns a tuple with the UtcOffsetMilliseconds field value
// and a boolean to check if the value has been set.
func (o *PortalInformationResponse) GetUtcOffsetMillisecondsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UtcOffsetMilliseconds, true
}

// SetUtcOffsetMilliseconds sets field value
func (o *PortalInformationResponse) SetUtcOffsetMilliseconds(v int64) {
	o.UtcOffsetMilliseconds = v
}

func (o PortalInformationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortalInformationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["additionalCurrencies"] = o.AdditionalCurrencies
	toSerialize["utcOffset"] = o.UtcOffset
	toSerialize["companyCurrency"] = o.CompanyCurrency
	toSerialize["portalId"] = o.PortalId
	toSerialize["accountType"] = o.AccountType
	toSerialize["uiDomain"] = o.UiDomain
	toSerialize["timeZone"] = o.TimeZone
	toSerialize["dataHostingLocation"] = o.DataHostingLocation
	toSerialize["utcOffsetMilliseconds"] = o.UtcOffsetMilliseconds
	return toSerialize, nil
}

func (o *PortalInformationResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"additionalCurrencies",
		"utcOffset",
		"companyCurrency",
		"portalId",
		"accountType",
		"uiDomain",
		"timeZone",
		"dataHostingLocation",
		"utcOffsetMilliseconds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPortalInformationResponse := _PortalInformationResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPortalInformationResponse)

	if err != nil {
		return err
	}

	*o = PortalInformationResponse(varPortalInformationResponse)

	return err
}

type NullablePortalInformationResponse struct {
	value *PortalInformationResponse
	isSet bool
}

func (v NullablePortalInformationResponse) Get() *PortalInformationResponse {
	return v.value
}

func (v *NullablePortalInformationResponse) Set(val *PortalInformationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePortalInformationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePortalInformationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortalInformationResponse(val *PortalInformationResponse) *NullablePortalInformationResponse {
	return &NullablePortalInformationResponse{value: val, isSet: true}
}

func (v NullablePortalInformationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortalInformationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


