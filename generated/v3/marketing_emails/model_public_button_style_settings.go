/*
Marketing Emails

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_emails

import (
	"encoding/json"
)

// checks if the PublicButtonStyleSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicButtonStyleSettings{}

// PublicButtonStyleSettings struct for PublicButtonStyleSettings
type PublicButtonStyleSettings struct {
	BackgroundColor map[string]interface{} `json:"backgroundColor,omitempty"`
	FontStyle *PublicFontStyle `json:"fontStyle,omitempty"`
	CornerRadius *int32 `json:"cornerRadius,omitempty"`
}

// NewPublicButtonStyleSettings instantiates a new PublicButtonStyleSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicButtonStyleSettings() *PublicButtonStyleSettings {
	this := PublicButtonStyleSettings{}
	return &this
}

// NewPublicButtonStyleSettingsWithDefaults instantiates a new PublicButtonStyleSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicButtonStyleSettingsWithDefaults() *PublicButtonStyleSettings {
	this := PublicButtonStyleSettings{}
	return &this
}

// GetBackgroundColor returns the BackgroundColor field value if set, zero value otherwise.
func (o *PublicButtonStyleSettings) GetBackgroundColor() map[string]interface{} {
	if o == nil || IsNil(o.BackgroundColor) {
		var ret map[string]interface{}
		return ret
	}
	return o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicButtonStyleSettings) GetBackgroundColorOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.BackgroundColor) {
		return map[string]interface{}{}, false
	}
	return o.BackgroundColor, true
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *PublicButtonStyleSettings) HasBackgroundColor() bool {
	if o != nil && !IsNil(o.BackgroundColor) {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given map[string]interface{} and assigns it to the BackgroundColor field.
func (o *PublicButtonStyleSettings) SetBackgroundColor(v map[string]interface{}) {
	o.BackgroundColor = v
}

// GetFontStyle returns the FontStyle field value if set, zero value otherwise.
func (o *PublicButtonStyleSettings) GetFontStyle() PublicFontStyle {
	if o == nil || IsNil(o.FontStyle) {
		var ret PublicFontStyle
		return ret
	}
	return *o.FontStyle
}

// GetFontStyleOk returns a tuple with the FontStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicButtonStyleSettings) GetFontStyleOk() (*PublicFontStyle, bool) {
	if o == nil || IsNil(o.FontStyle) {
		return nil, false
	}
	return o.FontStyle, true
}

// HasFontStyle returns a boolean if a field has been set.
func (o *PublicButtonStyleSettings) HasFontStyle() bool {
	if o != nil && !IsNil(o.FontStyle) {
		return true
	}

	return false
}

// SetFontStyle gets a reference to the given PublicFontStyle and assigns it to the FontStyle field.
func (o *PublicButtonStyleSettings) SetFontStyle(v PublicFontStyle) {
	o.FontStyle = &v
}

// GetCornerRadius returns the CornerRadius field value if set, zero value otherwise.
func (o *PublicButtonStyleSettings) GetCornerRadius() int32 {
	if o == nil || IsNil(o.CornerRadius) {
		var ret int32
		return ret
	}
	return *o.CornerRadius
}

// GetCornerRadiusOk returns a tuple with the CornerRadius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicButtonStyleSettings) GetCornerRadiusOk() (*int32, bool) {
	if o == nil || IsNil(o.CornerRadius) {
		return nil, false
	}
	return o.CornerRadius, true
}

// HasCornerRadius returns a boolean if a field has been set.
func (o *PublicButtonStyleSettings) HasCornerRadius() bool {
	if o != nil && !IsNil(o.CornerRadius) {
		return true
	}

	return false
}

// SetCornerRadius gets a reference to the given int32 and assigns it to the CornerRadius field.
func (o *PublicButtonStyleSettings) SetCornerRadius(v int32) {
	o.CornerRadius = &v
}

func (o PublicButtonStyleSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicButtonStyleSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackgroundColor) {
		toSerialize["backgroundColor"] = o.BackgroundColor
	}
	if !IsNil(o.FontStyle) {
		toSerialize["fontStyle"] = o.FontStyle
	}
	if !IsNil(o.CornerRadius) {
		toSerialize["cornerRadius"] = o.CornerRadius
	}
	return toSerialize, nil
}

type NullablePublicButtonStyleSettings struct {
	value *PublicButtonStyleSettings
	isSet bool
}

func (v NullablePublicButtonStyleSettings) Get() *PublicButtonStyleSettings {
	return v.value
}

func (v *NullablePublicButtonStyleSettings) Set(val *PublicButtonStyleSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicButtonStyleSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicButtonStyleSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicButtonStyleSettings(val *PublicButtonStyleSettings) *NullablePublicButtonStyleSettings {
	return &NullablePublicButtonStyleSettings{value: val, isSet: true}
}

func (v NullablePublicButtonStyleSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicButtonStyleSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


