/*
Marketing Emails

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_emails

import (
	"encoding/json"
)

// checks if the PublicEmailTestingDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicEmailTestingDetails{}

// PublicEmailTestingDetails AB testing related data. This property is only returned for AB type emails.
type PublicEmailTestingDetails struct {
	// Version of the email that should be sent if the results are inconclusive after the test period, master or variant.
	AbSamplingDefault *string `json:"abSamplingDefault,omitempty"`
	// Version of the email that should be sent if there are too few recipients to conduct an AB test.
	AbSampleSizeDefault *string `json:"abSampleSizeDefault,omitempty"`
	// Status of the AB test.
	AbStatus *string `json:"abStatus,omitempty"`
	// The size of your test group.
	AbTestPercentage *int32 `json:"abTestPercentage,omitempty"`
	// Time limit on gathering test results. After this time is up, the winning version will be sent to the remaining contacts.
	HoursToWait *int32 `json:"hoursToWait,omitempty"`
	// The ID of the AB test.
	TestId *string `json:"testId,omitempty"`
	// Metric to determine the version that will be sent to the remaining contacts.
	AbSuccessMetric *string `json:"abSuccessMetric,omitempty"`
}

// NewPublicEmailTestingDetails instantiates a new PublicEmailTestingDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicEmailTestingDetails() *PublicEmailTestingDetails {
	this := PublicEmailTestingDetails{}
	return &this
}

// NewPublicEmailTestingDetailsWithDefaults instantiates a new PublicEmailTestingDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicEmailTestingDetailsWithDefaults() *PublicEmailTestingDetails {
	this := PublicEmailTestingDetails{}
	return &this
}

// GetAbSamplingDefault returns the AbSamplingDefault field value if set, zero value otherwise.
func (o *PublicEmailTestingDetails) GetAbSamplingDefault() string {
	if o == nil || IsNil(o.AbSamplingDefault) {
		var ret string
		return ret
	}
	return *o.AbSamplingDefault
}

// GetAbSamplingDefaultOk returns a tuple with the AbSamplingDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailTestingDetails) GetAbSamplingDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.AbSamplingDefault) {
		return nil, false
	}
	return o.AbSamplingDefault, true
}

// HasAbSamplingDefault returns a boolean if a field has been set.
func (o *PublicEmailTestingDetails) HasAbSamplingDefault() bool {
	if o != nil && !IsNil(o.AbSamplingDefault) {
		return true
	}

	return false
}

// SetAbSamplingDefault gets a reference to the given string and assigns it to the AbSamplingDefault field.
func (o *PublicEmailTestingDetails) SetAbSamplingDefault(v string) {
	o.AbSamplingDefault = &v
}

// GetAbSampleSizeDefault returns the AbSampleSizeDefault field value if set, zero value otherwise.
func (o *PublicEmailTestingDetails) GetAbSampleSizeDefault() string {
	if o == nil || IsNil(o.AbSampleSizeDefault) {
		var ret string
		return ret
	}
	return *o.AbSampleSizeDefault
}

// GetAbSampleSizeDefaultOk returns a tuple with the AbSampleSizeDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailTestingDetails) GetAbSampleSizeDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.AbSampleSizeDefault) {
		return nil, false
	}
	return o.AbSampleSizeDefault, true
}

// HasAbSampleSizeDefault returns a boolean if a field has been set.
func (o *PublicEmailTestingDetails) HasAbSampleSizeDefault() bool {
	if o != nil && !IsNil(o.AbSampleSizeDefault) {
		return true
	}

	return false
}

// SetAbSampleSizeDefault gets a reference to the given string and assigns it to the AbSampleSizeDefault field.
func (o *PublicEmailTestingDetails) SetAbSampleSizeDefault(v string) {
	o.AbSampleSizeDefault = &v
}

// GetAbStatus returns the AbStatus field value if set, zero value otherwise.
func (o *PublicEmailTestingDetails) GetAbStatus() string {
	if o == nil || IsNil(o.AbStatus) {
		var ret string
		return ret
	}
	return *o.AbStatus
}

// GetAbStatusOk returns a tuple with the AbStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailTestingDetails) GetAbStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AbStatus) {
		return nil, false
	}
	return o.AbStatus, true
}

// HasAbStatus returns a boolean if a field has been set.
func (o *PublicEmailTestingDetails) HasAbStatus() bool {
	if o != nil && !IsNil(o.AbStatus) {
		return true
	}

	return false
}

// SetAbStatus gets a reference to the given string and assigns it to the AbStatus field.
func (o *PublicEmailTestingDetails) SetAbStatus(v string) {
	o.AbStatus = &v
}

// GetAbTestPercentage returns the AbTestPercentage field value if set, zero value otherwise.
func (o *PublicEmailTestingDetails) GetAbTestPercentage() int32 {
	if o == nil || IsNil(o.AbTestPercentage) {
		var ret int32
		return ret
	}
	return *o.AbTestPercentage
}

// GetAbTestPercentageOk returns a tuple with the AbTestPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailTestingDetails) GetAbTestPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.AbTestPercentage) {
		return nil, false
	}
	return o.AbTestPercentage, true
}

// HasAbTestPercentage returns a boolean if a field has been set.
func (o *PublicEmailTestingDetails) HasAbTestPercentage() bool {
	if o != nil && !IsNil(o.AbTestPercentage) {
		return true
	}

	return false
}

// SetAbTestPercentage gets a reference to the given int32 and assigns it to the AbTestPercentage field.
func (o *PublicEmailTestingDetails) SetAbTestPercentage(v int32) {
	o.AbTestPercentage = &v
}

// GetHoursToWait returns the HoursToWait field value if set, zero value otherwise.
func (o *PublicEmailTestingDetails) GetHoursToWait() int32 {
	if o == nil || IsNil(o.HoursToWait) {
		var ret int32
		return ret
	}
	return *o.HoursToWait
}

// GetHoursToWaitOk returns a tuple with the HoursToWait field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailTestingDetails) GetHoursToWaitOk() (*int32, bool) {
	if o == nil || IsNil(o.HoursToWait) {
		return nil, false
	}
	return o.HoursToWait, true
}

// HasHoursToWait returns a boolean if a field has been set.
func (o *PublicEmailTestingDetails) HasHoursToWait() bool {
	if o != nil && !IsNil(o.HoursToWait) {
		return true
	}

	return false
}

// SetHoursToWait gets a reference to the given int32 and assigns it to the HoursToWait field.
func (o *PublicEmailTestingDetails) SetHoursToWait(v int32) {
	o.HoursToWait = &v
}

// GetTestId returns the TestId field value if set, zero value otherwise.
func (o *PublicEmailTestingDetails) GetTestId() string {
	if o == nil || IsNil(o.TestId) {
		var ret string
		return ret
	}
	return *o.TestId
}

// GetTestIdOk returns a tuple with the TestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailTestingDetails) GetTestIdOk() (*string, bool) {
	if o == nil || IsNil(o.TestId) {
		return nil, false
	}
	return o.TestId, true
}

// HasTestId returns a boolean if a field has been set.
func (o *PublicEmailTestingDetails) HasTestId() bool {
	if o != nil && !IsNil(o.TestId) {
		return true
	}

	return false
}

// SetTestId gets a reference to the given string and assigns it to the TestId field.
func (o *PublicEmailTestingDetails) SetTestId(v string) {
	o.TestId = &v
}

// GetAbSuccessMetric returns the AbSuccessMetric field value if set, zero value otherwise.
func (o *PublicEmailTestingDetails) GetAbSuccessMetric() string {
	if o == nil || IsNil(o.AbSuccessMetric) {
		var ret string
		return ret
	}
	return *o.AbSuccessMetric
}

// GetAbSuccessMetricOk returns a tuple with the AbSuccessMetric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailTestingDetails) GetAbSuccessMetricOk() (*string, bool) {
	if o == nil || IsNil(o.AbSuccessMetric) {
		return nil, false
	}
	return o.AbSuccessMetric, true
}

// HasAbSuccessMetric returns a boolean if a field has been set.
func (o *PublicEmailTestingDetails) HasAbSuccessMetric() bool {
	if o != nil && !IsNil(o.AbSuccessMetric) {
		return true
	}

	return false
}

// SetAbSuccessMetric gets a reference to the given string and assigns it to the AbSuccessMetric field.
func (o *PublicEmailTestingDetails) SetAbSuccessMetric(v string) {
	o.AbSuccessMetric = &v
}

func (o PublicEmailTestingDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicEmailTestingDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AbSamplingDefault) {
		toSerialize["abSamplingDefault"] = o.AbSamplingDefault
	}
	if !IsNil(o.AbSampleSizeDefault) {
		toSerialize["abSampleSizeDefault"] = o.AbSampleSizeDefault
	}
	if !IsNil(o.AbStatus) {
		toSerialize["abStatus"] = o.AbStatus
	}
	if !IsNil(o.AbTestPercentage) {
		toSerialize["abTestPercentage"] = o.AbTestPercentage
	}
	if !IsNil(o.HoursToWait) {
		toSerialize["hoursToWait"] = o.HoursToWait
	}
	if !IsNil(o.TestId) {
		toSerialize["testId"] = o.TestId
	}
	if !IsNil(o.AbSuccessMetric) {
		toSerialize["abSuccessMetric"] = o.AbSuccessMetric
	}
	return toSerialize, nil
}

type NullablePublicEmailTestingDetails struct {
	value *PublicEmailTestingDetails
	isSet bool
}

func (v NullablePublicEmailTestingDetails) Get() *PublicEmailTestingDetails {
	return v.value
}

func (v *NullablePublicEmailTestingDetails) Set(val *PublicEmailTestingDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicEmailTestingDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicEmailTestingDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicEmailTestingDetails(val *PublicEmailTestingDetails) *NullablePublicEmailTestingDetails {
	return &NullablePublicEmailTestingDetails{value: val, isSet: true}
}

func (v NullablePublicEmailTestingDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicEmailTestingDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


