/*
Marketing Emails

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_emails

import (
	"encoding/json"
)

// checks if the PublicEmailSubscriptionDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicEmailSubscriptionDetails{}

// PublicEmailSubscriptionDetails Data structure representing the subscription fields of the email.
type PublicEmailSubscriptionDetails struct {
	// ID of the selected office location.
	OfficeLocationId *string `json:"officeLocationId,omitempty"`
	// 
	PreferencesGroupId *string `json:"preferencesGroupId,omitempty"`
	// ID of the subscription.
	SubscriptionId *string `json:"subscriptionId,omitempty"`
}

// NewPublicEmailSubscriptionDetails instantiates a new PublicEmailSubscriptionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicEmailSubscriptionDetails() *PublicEmailSubscriptionDetails {
	this := PublicEmailSubscriptionDetails{}
	return &this
}

// NewPublicEmailSubscriptionDetailsWithDefaults instantiates a new PublicEmailSubscriptionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicEmailSubscriptionDetailsWithDefaults() *PublicEmailSubscriptionDetails {
	this := PublicEmailSubscriptionDetails{}
	return &this
}

// GetOfficeLocationId returns the OfficeLocationId field value if set, zero value otherwise.
func (o *PublicEmailSubscriptionDetails) GetOfficeLocationId() string {
	if o == nil || IsNil(o.OfficeLocationId) {
		var ret string
		return ret
	}
	return *o.OfficeLocationId
}

// GetOfficeLocationIdOk returns a tuple with the OfficeLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailSubscriptionDetails) GetOfficeLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OfficeLocationId) {
		return nil, false
	}
	return o.OfficeLocationId, true
}

// HasOfficeLocationId returns a boolean if a field has been set.
func (o *PublicEmailSubscriptionDetails) HasOfficeLocationId() bool {
	if o != nil && !IsNil(o.OfficeLocationId) {
		return true
	}

	return false
}

// SetOfficeLocationId gets a reference to the given string and assigns it to the OfficeLocationId field.
func (o *PublicEmailSubscriptionDetails) SetOfficeLocationId(v string) {
	o.OfficeLocationId = &v
}

// GetPreferencesGroupId returns the PreferencesGroupId field value if set, zero value otherwise.
func (o *PublicEmailSubscriptionDetails) GetPreferencesGroupId() string {
	if o == nil || IsNil(o.PreferencesGroupId) {
		var ret string
		return ret
	}
	return *o.PreferencesGroupId
}

// GetPreferencesGroupIdOk returns a tuple with the PreferencesGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailSubscriptionDetails) GetPreferencesGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.PreferencesGroupId) {
		return nil, false
	}
	return o.PreferencesGroupId, true
}

// HasPreferencesGroupId returns a boolean if a field has been set.
func (o *PublicEmailSubscriptionDetails) HasPreferencesGroupId() bool {
	if o != nil && !IsNil(o.PreferencesGroupId) {
		return true
	}

	return false
}

// SetPreferencesGroupId gets a reference to the given string and assigns it to the PreferencesGroupId field.
func (o *PublicEmailSubscriptionDetails) SetPreferencesGroupId(v string) {
	o.PreferencesGroupId = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *PublicEmailSubscriptionDetails) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailSubscriptionDetails) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *PublicEmailSubscriptionDetails) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *PublicEmailSubscriptionDetails) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

func (o PublicEmailSubscriptionDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicEmailSubscriptionDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OfficeLocationId) {
		toSerialize["officeLocationId"] = o.OfficeLocationId
	}
	if !IsNil(o.PreferencesGroupId) {
		toSerialize["preferencesGroupId"] = o.PreferencesGroupId
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	return toSerialize, nil
}

type NullablePublicEmailSubscriptionDetails struct {
	value *PublicEmailSubscriptionDetails
	isSet bool
}

func (v NullablePublicEmailSubscriptionDetails) Get() *PublicEmailSubscriptionDetails {
	return v.value
}

func (v *NullablePublicEmailSubscriptionDetails) Set(val *PublicEmailSubscriptionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicEmailSubscriptionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicEmailSubscriptionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicEmailSubscriptionDetails(val *PublicEmailSubscriptionDetails) *NullablePublicEmailSubscriptionDetails {
	return &NullablePublicEmailSubscriptionDetails{value: val, isSet: true}
}

func (v NullablePublicEmailSubscriptionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicEmailSubscriptionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


