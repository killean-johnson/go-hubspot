/*
Events Events

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ExternalUnifiedEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalUnifiedEvent{}

// ExternalUnifiedEvent struct for ExternalUnifiedEvent
type ExternalUnifiedEvent struct {
	// An ISO 8601 timestamp when the event occurred.
	OccurredAt time.Time `json:"occurredAt"`
	// The format of the `eventType` string is `ae{appId}_{eventTypeLabel}`, `pe{portalId}_{eventTypeLabel}`, or just `e_{eventTypeLabel}` for HubSpot events.
	EventType string `json:"eventType"`
	// A unique identifier for the event.
	Id string `json:"id"`
	// The objectId of the object which did the event.
	ObjectId string `json:"objectId"`
	Properties *map[string]string `json:"properties,omitempty"`
	// The objectType for the object which did the event.
	ObjectType string `json:"objectType"`
}

type _ExternalUnifiedEvent ExternalUnifiedEvent

// NewExternalUnifiedEvent instantiates a new ExternalUnifiedEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalUnifiedEvent(occurredAt time.Time, eventType string, id string, objectId string, objectType string) *ExternalUnifiedEvent {
	this := ExternalUnifiedEvent{}
	this.OccurredAt = occurredAt
	this.EventType = eventType
	this.Id = id
	this.ObjectId = objectId
	this.ObjectType = objectType
	return &this
}

// NewExternalUnifiedEventWithDefaults instantiates a new ExternalUnifiedEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalUnifiedEventWithDefaults() *ExternalUnifiedEvent {
	this := ExternalUnifiedEvent{}
	return &this
}

// GetOccurredAt returns the OccurredAt field value
func (o *ExternalUnifiedEvent) GetOccurredAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.OccurredAt
}

// GetOccurredAtOk returns a tuple with the OccurredAt field value
// and a boolean to check if the value has been set.
func (o *ExternalUnifiedEvent) GetOccurredAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OccurredAt, true
}

// SetOccurredAt sets field value
func (o *ExternalUnifiedEvent) SetOccurredAt(v time.Time) {
	o.OccurredAt = v
}

// GetEventType returns the EventType field value
func (o *ExternalUnifiedEvent) GetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *ExternalUnifiedEvent) GetEventTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *ExternalUnifiedEvent) SetEventType(v string) {
	o.EventType = v
}

// GetId returns the Id field value
func (o *ExternalUnifiedEvent) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExternalUnifiedEvent) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExternalUnifiedEvent) SetId(v string) {
	o.Id = v
}

// GetObjectId returns the ObjectId field value
func (o *ExternalUnifiedEvent) GetObjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value
// and a boolean to check if the value has been set.
func (o *ExternalUnifiedEvent) GetObjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectId, true
}

// SetObjectId sets field value
func (o *ExternalUnifiedEvent) SetObjectId(v string) {
	o.ObjectId = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ExternalUnifiedEvent) GetProperties() map[string]string {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalUnifiedEvent) GetPropertiesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ExternalUnifiedEvent) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]string and assigns it to the Properties field.
func (o *ExternalUnifiedEvent) SetProperties(v map[string]string) {
	o.Properties = &v
}

// GetObjectType returns the ObjectType field value
func (o *ExternalUnifiedEvent) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *ExternalUnifiedEvent) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *ExternalUnifiedEvent) SetObjectType(v string) {
	o.ObjectType = v
}

func (o ExternalUnifiedEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalUnifiedEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["occurredAt"] = o.OccurredAt
	toSerialize["eventType"] = o.EventType
	toSerialize["id"] = o.Id
	toSerialize["objectId"] = o.ObjectId
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	toSerialize["objectType"] = o.ObjectType
	return toSerialize, nil
}

func (o *ExternalUnifiedEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"occurredAt",
		"eventType",
		"id",
		"objectId",
		"objectType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalUnifiedEvent := _ExternalUnifiedEvent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalUnifiedEvent)

	if err != nil {
		return err
	}

	*o = ExternalUnifiedEvent(varExternalUnifiedEvent)

	return err
}

type NullableExternalUnifiedEvent struct {
	value *ExternalUnifiedEvent
	isSet bool
}

func (v NullableExternalUnifiedEvent) Get() *ExternalUnifiedEvent {
	return v.value
}

func (v *NullableExternalUnifiedEvent) Set(val *ExternalUnifiedEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalUnifiedEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalUnifiedEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalUnifiedEvent(val *ExternalUnifiedEvent) *NullableExternalUnifiedEvent {
	return &NullableExternalUnifiedEvent{value: val, isSet: true}
}

func (v NullableExternalUnifiedEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalUnifiedEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


