/*
Lists

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lists

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MembershipChangeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipChangeRequest{}

// MembershipChangeRequest struct for MembershipChangeRequest
type MembershipChangeRequest struct {
	// 
	RecordIdsToRemove []string `json:"recordIdsToRemove"`
	// 
	RecordIdsToAdd []string `json:"recordIdsToAdd"`
}

type _MembershipChangeRequest MembershipChangeRequest

// NewMembershipChangeRequest instantiates a new MembershipChangeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipChangeRequest(recordIdsToRemove []string, recordIdsToAdd []string) *MembershipChangeRequest {
	this := MembershipChangeRequest{}
	this.RecordIdsToRemove = recordIdsToRemove
	this.RecordIdsToAdd = recordIdsToAdd
	return &this
}

// NewMembershipChangeRequestWithDefaults instantiates a new MembershipChangeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipChangeRequestWithDefaults() *MembershipChangeRequest {
	this := MembershipChangeRequest{}
	return &this
}

// GetRecordIdsToRemove returns the RecordIdsToRemove field value
func (o *MembershipChangeRequest) GetRecordIdsToRemove() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RecordIdsToRemove
}

// GetRecordIdsToRemoveOk returns a tuple with the RecordIdsToRemove field value
// and a boolean to check if the value has been set.
func (o *MembershipChangeRequest) GetRecordIdsToRemoveOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecordIdsToRemove, true
}

// SetRecordIdsToRemove sets field value
func (o *MembershipChangeRequest) SetRecordIdsToRemove(v []string) {
	o.RecordIdsToRemove = v
}

// GetRecordIdsToAdd returns the RecordIdsToAdd field value
func (o *MembershipChangeRequest) GetRecordIdsToAdd() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RecordIdsToAdd
}

// GetRecordIdsToAddOk returns a tuple with the RecordIdsToAdd field value
// and a boolean to check if the value has been set.
func (o *MembershipChangeRequest) GetRecordIdsToAddOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecordIdsToAdd, true
}

// SetRecordIdsToAdd sets field value
func (o *MembershipChangeRequest) SetRecordIdsToAdd(v []string) {
	o.RecordIdsToAdd = v
}

func (o MembershipChangeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipChangeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["recordIdsToRemove"] = o.RecordIdsToRemove
	toSerialize["recordIdsToAdd"] = o.RecordIdsToAdd
	return toSerialize, nil
}

func (o *MembershipChangeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recordIdsToRemove",
		"recordIdsToAdd",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMembershipChangeRequest := _MembershipChangeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMembershipChangeRequest)

	if err != nil {
		return err
	}

	*o = MembershipChangeRequest(varMembershipChangeRequest)

	return err
}

type NullableMembershipChangeRequest struct {
	value *MembershipChangeRequest
	isSet bool
}

func (v NullableMembershipChangeRequest) Get() *MembershipChangeRequest {
	return v.value
}

func (v *NullableMembershipChangeRequest) Set(val *MembershipChangeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipChangeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipChangeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipChangeRequest(val *MembershipChangeRequest) *NullableMembershipChangeRequest {
	return &NullableMembershipChangeRequest{value: val, isSet: true}
}

func (v NullableMembershipChangeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipChangeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


