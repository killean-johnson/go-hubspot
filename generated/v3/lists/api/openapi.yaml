openapi: 3.0.1
info:
  title: Lists
  version: v3
  x-hubspot-product-tier-requirements:
    marketing: STARTER
    cms: STARTER
  x-hubspot-api-use-case: "You want to bulk add contacts to a particular list, or\
    \ remove company records from a company list."
  x-hubspot-related-documentation:
  - name: Lists Guide
    url: https://developers.hubspot.com/docs/guides/api/crm/lists/overview
  x-hubspot-introduction: Use the lists API to manage list memberships for object
    lists.
servers:
- url: https://api.hubapi.com
tags:
- name: Lists
- name: Memberships
- name: Folders
- name: Mapping
paths:
  /crm/v3/lists/{listId}/update-list-name:
    put:
      description: Update the name of a list. The name must be globally unique relative
        to all other public lists in the portal.
      operationId: "put-/crm/v3/lists/{listId}/update-list-name_updateName"
      parameters:
      - description: The **ILS ID** of the list to update.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      - description: The name to update the list to.
        explode: true
        in: query
        name: listName
        required: false
        schema:
          type: string
        style: form
      - description: "A flag indicating whether or not the response object list definition\
          \ should include a filter branch definition. By default, object list definitions\
          \ will not have their filter branch definitions included in the response."
        explode: true
        in: query
        name: includeFilters
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUpdateResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Update List Name
      tags:
      - Lists
  /crm/v3/lists/{listId}/memberships/add-and-remove:
    put:
      description: |-
        Add and/or remove records that have already been created in the system to and/or from a list.

        This endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.
      operationId: "put-/crm/v3/lists/{listId}/memberships/add-and-remove_addAndRemove"
      parameters:
      - description: The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipChangeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipsUpdateResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Add and/or Remove Records from a List
      tags:
      - Memberships
  /crm/v3/lists/{listId}:
    delete:
      description: "Delete a list by **ILS list ID**. Lists deleted through this endpoint\
        \ can be restored up to 90-days following the delete. After 90-days, the list\
        \ is purged and can no longer be restored."
      operationId: "delete-/crm/v3/lists/{listId}_remove"
      parameters:
      - description: The **ILS ID** of the list to delete.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Delete a List
      tags:
      - Lists
    get:
      description: Fetch a single list by **ILS list ID**.
      operationId: "get-/crm/v3/lists/{listId}_getById"
      parameters:
      - description: The **ILS ID** of the list to fetch.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      - description: "A flag indicating whether or not the response object list definition\
          \ should include a filter branch definition. By default, object list definitions\
          \ will not have their filter branch definitions included in the response."
        explode: true
        in: query
        name: includeFilters
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFetchResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Fetch List by ID
      tags:
      - Lists
  /crm/v3/lists/{listId}/update-list-filters:
    put:
      description: "Update the filter branch definition of a `DYNAMIC` list. Once\
        \ updated, the list memberships will be re-evaluated and updated to match\
        \ the new definition."
      operationId: "put-/crm/v3/lists/{listId}/update-list-filters_updateListFilters"
      parameters:
      - description: The **ILS ID** of the list to update.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      - description: A flag indicating whether or not the memberships added to the
          list as a result of the filter change should be enrolled in workflows that
          are relevant to this list.
        explode: true
        in: query
        name: enrollObjectsInWorkflows
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFilterUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUpdateResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Update List Filter Definition
      tags:
      - Lists
  /crm/v3/lists/search:
    post:
      description: Search lists by list name or page through all lists by providing
        an empty `query` value.
      operationId: post-/crm/v3/lists/search_doSearch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSearchResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Search Lists
      tags:
      - Lists
  /crm/v3/lists/folders/move-list:
    put:
      description: "Given a list and a folder, the list will be moved to that folder."
      operationId: put-/crm/v3/lists/folders/move-list_moveList
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMoveRequest'
        required: true
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Moves a list to a given folder
      tags:
      - Folders
  /crm/v3/lists/{listId}/memberships/add:
    put:
      description: |-
        Add the records provided to the list. Records that do not exist or that are already members of the list are ignored.

        This endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.
      operationId: "put-/crm/v3/lists/{listId}/memberships/add_add"
      parameters:
      - description: The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipsUpdateResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Add Records to a List
      tags:
      - Memberships
  /crm/v3/lists/object-type-id/{objectTypeId}/name/{listName}:
    get:
      description: Fetch a single list by list name and object type.
      operationId: "get-/crm/v3/lists/object-type-id/{objectTypeId}/name/{listName}_getByName"
      parameters:
      - description: The name of the list to fetch. This is **not** case sensitive.
        explode: false
        in: path
        name: listName
        required: true
        schema:
          type: string
        style: simple
      - description: "The object type ID of the object types stored by the list to\
          \ fetch. For example, `0-1` for a `CONTACT` list."
        explode: false
        in: path
        name: objectTypeId
        required: true
        schema:
          type: string
        style: simple
      - description: "A flag indicating whether or not the response object list definition\
          \ should include a filter branch definition. By default, object list definitions\
          \ will not have their filter branch definitions included in the response."
        explode: true
        in: query
        name: includeFilters
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFetchResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Fetch List by Name
      tags:
      - Lists
  /crm/v3/lists/folders/{folderId}/move/{newParentFolderId}:
    put:
      description: This moves the folder from its current location to a new location.
        It updates the parent of this folder to the new Id given.
      operationId: "put-/crm/v3/lists/folders/{folderId}/move/{newParentFolderId}_move"
      parameters:
      - description: ""
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: newParentFolderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderFetchResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Moves a folder
      tags:
      - Folders
  /crm/v3/lists/idmapping:
    get:
      description: "This API allows translation of legacy list id to list id. This\
        \ is a temporary API allowed for mapping old id's to new id's and will expire\
        \ on May 30th, 2025."
      operationId: get-/crm/v3/lists/idmapping_translateLegacyListIdToListId
      parameters:
      - description: The legacy list id from lists v1 API.
        explode: true
        in: query
        name: legacyListId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicMigrationMapping'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Translate Legacy List Id to Modern List Id
      tags:
      - Mapping
    post:
      description: "This API allows translation of a batch of legacy list id's to\
        \ list id's. This allows for a maximum of 10,000 id's. This is a temporary\
        \ API allowed for mapping old id's to new id's and will expire on May 30th,\
        \ 2025."
      operationId: post-/crm/v3/lists/idmapping_translateLegacyListIdToListIdBatch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicBatchMigrationMapping'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Translate Legacy List Id to Modern List Id in Batch
      tags:
      - Mapping
  /crm/v3/lists/{listId}/restore:
    put:
      description: Restore a previously deleted list by **ILS list ID**. Deleted lists
        are eligible to be restored up-to 90-days after the list has been deleted.
      operationId: "put-/crm/v3/lists/{listId}/restore_restore"
      parameters:
      - description: The **ILS ID** of the list to restore.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Restore a List
      tags:
      - Lists
  /crm/v3/lists/folders/{folderId}/rename:
    put:
      description: Renames the given folderId with a new name.
      operationId: "put-/crm/v3/lists/folders/{folderId}/rename_rename"
      parameters:
      - description: ""
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: newFolderName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderFetchResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Rename a folder
      tags:
      - Folders
  /crm/v3/lists/{listId}/memberships/join-order:
    get:
      description: |-
        Fetch the memberships of a list in order sorted by the time the records were added to the list.

        The `recordId`s are sorted in *ascending* order if an `after` offset or no offset is provided. If only a `before` offset is provided, then the records are sorted in *descending* order.

        The `after` offset parameter will take precedence over the `before` offset in a case where both are provided.
      operationId: "get-/crm/v3/lists/{listId}/memberships/join-order_getPageOrderedByAddedToListDate"
      parameters:
      - description: The **ILS ID** of the list.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          The paging offset token for the page that comes `after` the previously requested records.

          If provided, then the records in the response will be the records following the offset, sorted in *ascending* order. Takes precedence over the `before` offset.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The paging offset token for the page that comes `before` the previously requested records.

          If provided, then the records in the response will be the records preceding the offset, sorted in *descending* order.
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: The number of records to return in the response. The maximum
          `limit` is 250.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCollectionResponseJoinTimeAndRecordId'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Fetch List Memberships Ordered by Added to List Date
      tags:
      - Memberships
  /crm/v3/lists/{listId}/memberships/add-from/{sourceListId}:
    put:
      description: |-
        Add all of the records from a *source list* (specified by the `sourceListId`) to a *destination list* (specified by the `listId`). Records that are already members of the *destination list* will be ignored. The *destination* and *source list* IDs must be different. The *destination* and *source lists* must contain records of the same type (e.g. contacts, companies, etc.).

        This endpoint only works for *destination lists* that have a `processingType` of `MANUAL` or `SNAPSHOT`. The *source list* can have any `processingType`.

        This endpoint only supports a `sourceListId` for lists with less than 100,000 memberships.
      operationId: "put-/crm/v3/lists/{listId}/memberships/add-from/{sourceListId}_addAllFromList"
      parameters:
      - description: "The **ILS ID** of the `MANUAL` or `SNAPSHOT` *destination list*,\
          \ which the *source list* records are added to."
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      - description: "The **ILS ID** of the *source list* to grab the records from,\
          \ which are then added to the *destination list*."
        explode: false
        in: path
        name: sourceListId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Add All Records from a Source List to a Destination List
      tags:
      - Memberships
  /crm/v3/lists/records/{objectTypeId}/{recordId}/memberships:
    get:
      description: For given record provide lists this record is member of.
      operationId: "get-/crm/v3/lists/records/{objectTypeId}/{recordId}/memberships_getLists"
      parameters:
      - description: Object type id of the record
        explode: false
        in: path
        name: objectTypeId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the record
        explode: false
        in: path
        name: recordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCollectionResponseRecordListMembershipNoPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Get lists record is member of
      tags:
      - Memberships
  /crm/v3/lists/:
    get:
      description: Fetch multiple lists in a single request by **ILS list ID**. The
        response will include the definitions of all lists that exist for the `listIds`
        provided.
      operationId: get-/crm/v3/lists/_getAll
      parameters:
      - description: The **ILS IDs** of the lists to fetch.
        explode: true
        in: query
        name: listIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A flag indicating whether or not the response object list definitions\
          \ should include a filter branch definition. By default, object list definitions\
          \ will not have their filter branch definitions included in the response."
        explode: true
        in: query
        name: includeFilters
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListsByIdResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Fetch Multiple Lists
      tags:
      - Lists
    post:
      description: Create a new list with the provided object list definition.
      operationId: post-/crm/v3/lists/_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreateResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - cms.membership.access_groups.write
      - oauth2:
        - cms.membership.access_groups.write
      - oauth2:
        - crm.lists.write
      - private_apps:
        - crm.lists.write
      summary: Create List
      tags:
      - Lists
  /crm/v3/lists/folders:
    get:
      description: Retrieves a folder and recursively includes all folders via the
        childNodes attribute.  The child lists field will be empty in all child nodes.
        Only the folder retrieved will include the child lists in that folder.
      operationId: get-/crm/v3/lists/folders_getAll
      parameters:
      - description: The Id of the folder to retrieve.
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          default: "0"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderFetchResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Retrieves a folder.
      tags:
      - Folders
    post:
      description: Creates a folder with the given information.
      operationId: post-/crm/v3/lists/folders_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFolderCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderCreateResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Creates a folder
      tags:
      - Folders
  /crm/v3/lists/folders/{folderId}:
    delete:
      description: Deletes the folder with the given Id.
      operationId: "delete-/crm/v3/lists/folders/{folderId}_remove"
      parameters:
      - description: ""
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Deletes a folder
      tags:
      - Folders
  /crm/v3/lists/{listId}/memberships:
    delete:
      description: |-
        Remove **all** of the records from a list. ***Note:*** *The list is not deleted.*

        This endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.

        This endpoint only supports lists that have less than 100,000 memberships.
      operationId: "delete-/crm/v3/lists/{listId}/memberships_removeAll"
      parameters:
      - description: The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Delete All Records from a List
      tags:
      - Memberships
    get:
      description: |-
        Fetch the memberships of a list in order sorted by the `recordId` of the records in the list.

        The `recordId`s are sorted in *ascending* order if an `after` offset or no offset is provided. If only a `before` offset is provided, then the records are sorted in *descending* order.

        The `after` offset parameter will take precedence over the `before` offset in a case where both are provided.
      operationId: "get-/crm/v3/lists/{listId}/memberships_getPage"
      parameters:
      - description: The **ILS ID** of the list.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          The paging offset token for the page that comes `after` the previously requested records.

          If provided, then the records in the response will be the records following the offset, sorted in *ascending* order. Takes precedence over the `before` offset.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The paging offset token for the page that comes `before` the previously requested records.

          If provided, then the records in the response will be the records preceding the offset, sorted in *descending* order.
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: The number of records to return in the response. The maximum
          `limit` is 250.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCollectionResponseJoinTimeAndRecordId'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Fetch List Memberships Ordered by ID
      tags:
      - Memberships
  /crm/v3/lists/{listId}/memberships/remove:
    put:
      description: |-
        Remove the records provided from the list. Records that do not exist or that are not members of the list are ignored.

        This endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.
      operationId: "put-/crm/v3/lists/{listId}/memberships/remove_remove"
      parameters:
      - description: The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipsUpdateResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - cms.membership.access_groups.write
        - crm.lists.read
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
      - private_apps:
        - cms.membership.access_groups.write
        - crm.lists.read
      summary: Remove Records from a List
      tags:
      - Memberships
components:
  responses:
    Error:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: An error occurred.
  schemas:
    PublicPropertyAssociationFilterBranch:
      properties:
        filterBranchType:
          default: PROPERTY_ASSOCIATION
          enum:
          - PROPERTY_ASSOCIATION
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        objectTypeId:
          type: string
        filterBranchOperator:
          type: string
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
        propertyWithObjectId:
          type: string
        operator:
          type: string
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      - objectTypeId
      - operator
      - propertyWithObjectId
      title: PROPERTY_ASSOCIATION
      type: object
    PublicNumberPropertyOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        operationType:
          default: NUMBER
          enum:
          - NUMBER
          type: string
        value:
          type: number
        operator:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - value
      title: NUMBER
      type: object
    PublicYearReference:
      properties:
        hour:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        referenceType:
          default: YEAR
          enum:
          - YEAR
          type: string
        day:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
      required:
      - day
      - month
      - referenceType
      title: YEAR
      type: object
    PublicInListFilterMetadata:
      properties:
        id:
          type: string
        inListType:
          type: string
      required:
      - id
      - inListType
      type: object
    ListFolderFetchResponse:
      example:
        folder:
          createdAt: 2000-01-23T04:56:07.000+00:00
          parentFolderId: 0
          childNodes:
          - null
          - null
          name: name
          id: 6
          childLists:
          - 1
          - 1
          updatedContentsAt: 2000-01-23T04:56:07.000+00:00
          userId: 5
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        folder:
          $ref: '#/components/schemas/PublicListFolder'
      required:
      - folder
      type: object
    PublicRangedDatePropertyOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        upperBound:
          format: int32
          type: integer
        requiresTimeZoneConversion:
          type: boolean
        operationType:
          default: RANGED_DATE
          enum:
          - RANGED_DATE
          type: string
        lowerBound:
          format: int32
          type: integer
        operator:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - lowerBound
      - operationType
      - operator
      - requiresTimeZoneConversion
      - upperBound
      title: RANGED_DATE
      type: object
    ListSearchRequest:
      example:
        listIds:
        - listIds
        - listIds
        offset: 0
        query: query
        count: 6
        processingTypes:
        - processingTypes
        - processingTypes
        additionalProperties:
        - additionalProperties
        - additionalProperties
        sort: sort
      properties:
        listIds:
          description: |-
            The `listIds` that will be used to filter results by `listId`. If values are provided, then the response will only include results that have a `listId` in this array.

            If no value is provided, or if an empty list is provided, then the results will not be filtered by `listId`.
          items:
            type: string
          type: array
        offset:
          description: Value used to paginate through lists. The `offset` provided
            in the response can be used in the next request to fetch the next page
            of results. Defaults to `0` if no offset is provided.
          format: int32
          type: integer
        query:
          description: "The `query` that will be used to search for lists by list\
            \ name. If no `query` is provided, then the results will include all lists."
          type: string
        count:
          description: The number of lists to include in the response. Defaults to
            `20` if no value is provided. The max `count` is `500`.
          format: int32
          type: integer
        processingTypes:
          description: |-
            The `processingTypes` that will be used to filter results by `processingType`. If values are provided, then the response will only include results that have a `processingType` in this array.

            If no value is provided, or if an empty list is provided, then results will not be filtered by `processingType`.

            Valid `processingTypes` are: `MANUAL`, `SNAPSHOT`, or `DYNAMIC`.
          items:
            type: string
          type: array
        additionalProperties:
          description: |-
            The property names of any additional list properties to include in the response. Properties that do not exist or that are empty for a particular list are not included in the response.

            By default, all requests will fetch the following properties for each list: `hs_list_size`, `hs_last_record_added_at`, `hs_last_record_removed_at`, `hs_folder_name`, and `hs_list_reference_count`.
          items:
            type: string
          type: array
        sort:
          type: string
      type: object
    ListSearchResponse:
      example:
        total: 0
        offset: 6
        lists:
        - processingType: processingType
          objectTypeId: objectTypeId
          updatedById: updatedById
          filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
          listId: listId
          createdAt: 2000-01-23T04:56:07.000+00:00
          processingStatus: processingStatus
          deletedAt: 2000-01-23T04:56:07.000+00:00
          listVersion: 1
          name: name
          additionalProperties:
            key: additionalProperties
          createdById: createdById
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - processingType: processingType
          objectTypeId: objectTypeId
          updatedById: updatedById
          filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
          listId: listId
          createdAt: 2000-01-23T04:56:07.000+00:00
          processingStatus: processingStatus
          deletedAt: 2000-01-23T04:56:07.000+00:00
          listVersion: 1
          name: name
          additionalProperties:
            key: additionalProperties
          createdById: createdById
          updatedAt: 2000-01-23T04:56:07.000+00:00
        hasMore: true
      properties:
        total:
          description: The total number of lists that match the search criteria.
          format: int32
          type: integer
        offset:
          description: Value to be passed in a future request to paginate through
            list search results.
          format: int32
          type: integer
        lists:
          description: The lists that matched the search criteria.
          items:
            $ref: '#/components/schemas/PublicObjectListSearchResult'
          type: array
        hasMore:
          description: Whether or not there are more results to page through.
          type: boolean
      required:
      - hasMore
      - lists
      - offset
      - total
      type: object
    PublicInListFilter:
      properties:
        listId:
          type: string
        metadata:
          $ref: '#/components/schemas/PublicInListFilterMetadata'
        filterType:
          default: IN_LIST
          enum:
          - IN_LIST
          type: string
        operator:
          type: string
      required:
      - filterType
      - listId
      - operator
      title: IN_LIST
      type: object
    PublicSurveyMonkeyValueFilter:
      properties:
        valueComparison:
          $ref: '#/components/schemas/PublicSurveyMonkeyValueFilter_valueComparison'
        surveyId:
          type: string
        surveyQuestion:
          type: string
        filterType:
          default: SURVEY_MONKEY_VALUE
          enum:
          - SURVEY_MONKEY_VALUE
          type: string
        surveyAnswerRowId:
          type: string
        surveyAnswerColId:
          type: string
        operator:
          type: string
      required:
      - filterType
      - operator
      - surveyId
      - surveyQuestion
      - valueComparison
      title: SURVEY_MONKEY_VALUE
      type: object
    PublicRelativeComparativeTimestampRefineBy:
      properties:
        comparison:
          type: string
        timeOffset:
          $ref: '#/components/schemas/PublicTimeOffset'
        type:
          default: RELATIVE_COMPARATIVE
          enum:
          - RELATIVE_COMPARATIVE
          type: string
      required:
      - comparison
      - timeOffset
      - type
      title: RELATIVE_COMPARATIVE
      type: object
    ListsByIdResponse:
      example:
        lists:
        - processingType: processingType
          objectTypeId: objectTypeId
          updatedById: updatedById
          filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
          listId: listId
          createdAt: 2000-01-23T04:56:07.000+00:00
          processingStatus: processingStatus
          deletedAt: 2000-01-23T04:56:07.000+00:00
          listVersion: 0
          size: 6
          name: name
          createdById: createdById
          filterBranch:
            filterBranchType: OR
            filterBranches:
            - null
            - null
            filterBranchOperator: filterBranchOperator
            filters:
            - property: property
              filterType: PROPERTY
              operation:
                includeObjectsWithNoValueSet: true
                operationType: BOOL
                value: true
                operator: operator
            - property: property
              filterType: PROPERTY
              operation:
                includeObjectsWithNoValueSet: true
                operationType: BOOL
                value: true
                operator: operator
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - processingType: processingType
          objectTypeId: objectTypeId
          updatedById: updatedById
          filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
          listId: listId
          createdAt: 2000-01-23T04:56:07.000+00:00
          processingStatus: processingStatus
          deletedAt: 2000-01-23T04:56:07.000+00:00
          listVersion: 0
          size: 6
          name: name
          createdById: createdById
          filterBranch:
            filterBranchType: OR
            filterBranches:
            - null
            - null
            filterBranchOperator: filterBranchOperator
            filters:
            - property: property
              filterType: PROPERTY
              operation:
                includeObjectsWithNoValueSet: true
                operationType: BOOL
                value: true
                operator: operator
            - property: property
              filterType: PROPERTY
              operation:
                includeObjectsWithNoValueSet: true
                operationType: BOOL
                value: true
                operator: operator
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        lists:
          description: The object list definitions.
          items:
            $ref: '#/components/schemas/PublicObjectList'
          type: array
      required:
      - lists
      type: object
    PublicCommunicationSubscriptionFilter:
      properties:
        subscriptionType:
          type: string
        subscriptionIds:
          items:
            type: string
          type: array
        channel:
          type: string
        acceptedOptStates:
          items:
            type: string
          type: array
        filterType:
          default: COMMUNICATION_SUBSCRIPTION
          enum:
          - COMMUNICATION_SUBSCRIPTION
          type: string
        businessUnitId:
          type: string
      required:
      - acceptedOptStates
      - channel
      - filterType
      - subscriptionIds
      - subscriptionType
      title: COMMUNICATION_SUBSCRIPTION
      type: object
    PublicObjectListSearchResult:
      example:
        processingType: processingType
        objectTypeId: objectTypeId
        updatedById: updatedById
        filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
        listId: listId
        createdAt: 2000-01-23T04:56:07.000+00:00
        processingStatus: processingStatus
        deletedAt: 2000-01-23T04:56:07.000+00:00
        listVersion: 1
        name: name
        additionalProperties:
          key: additionalProperties
        createdById: createdById
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        processingType:
          description: The processing type of the list.
          type: string
        objectTypeId:
          description: The object type of the list.
          type: string
        updatedById:
          description: The ID of the user that last updated the list.
          type: string
        filtersUpdatedAt:
          description: The time when the filters for this list were last updated.
          format: date-time
          type: string
        listId:
          description: The **ILS ID** of the list.
          type: string
        createdAt:
          description: The time when the list was created.
          format: date-time
          type: string
        processingStatus:
          description: The processing status of the list.
          type: string
        deletedAt:
          description: The time when the list was deleted.
          format: date-time
          type: string
        listVersion:
          description: The version of the list.
          format: int32
          type: integer
        name:
          description: The name of the list.
          type: string
        additionalProperties:
          additionalProperties:
            type: string
          description: The name and value of any additional properties that exist
            for this list and that were included in the search request.
          type: object
        createdById:
          description: The ID of the user that created the list.
          type: string
        updatedAt:
          description: The time the list was last updated.
          format: date-time
          type: string
      required:
      - additionalProperties
      - listId
      - listVersion
      - name
      - objectTypeId
      - processingStatus
      - processingType
      type: object
    PublicRelativeRangedTimestampRefineBy:
      properties:
        upperBoundOffset:
          $ref: '#/components/schemas/PublicTimeOffset'
        rangeType:
          type: string
        lowerBoundOffset:
          $ref: '#/components/schemas/PublicTimeOffset'
        type:
          default: RELATIVE_RANGED
          enum:
          - RELATIVE_RANGED
          type: string
      required:
      - lowerBoundOffset
      - rangeType
      - type
      - upperBoundOffset
      title: RELATIVE_RANGED
      type: object
    PublicIndexOffset:
      properties:
        milliseconds:
          format: int32
          type: integer
        hours:
          format: int32
          type: integer
        seconds:
          format: int32
          type: integer
        months:
          format: int32
          type: integer
        weeks:
          format: int32
          type: integer
        minutes:
          format: int32
          type: integer
        quarters:
          format: int32
          type: integer
        days:
          format: int32
          type: integer
        years:
          format: int32
          type: integer
      type: object
    PublicNotAllFilterBranch:
      properties:
        filterBranchType:
          default: NOT_ALL
          enum:
          - NOT_ALL
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filterBranchOperator:
          type: string
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      title: NOT_ALL
      type: object
    PublicBatchMigrationMapping:
      example:
        legacyListIdsToIdsMapping:
        - listId: listId
          legacyListId: legacyListId
        - listId: listId
          legacyListId: legacyListId
        missingLegacyListIds:
        - missingLegacyListIds
        - missingLegacyListIds
      properties:
        legacyListIdsToIdsMapping:
          items:
            $ref: '#/components/schemas/PublicMigrationMapping'
          type: array
        missingLegacyListIds:
          description: A list of legacy list ids that were passed in but not found.
            It will be empty if no id's are missing
          items:
            type: string
          type: array
      required:
      - legacyListIdsToIdsMapping
      - missingLegacyListIds
      type: object
    PublicFormSubmissionFilter:
      properties:
        formId:
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        pruningRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        filterType:
          default: FORM_SUBMISSION
          enum:
          - FORM_SUBMISSION
          type: string
        operator:
          enum:
          - FILLED_OUT
          - NOT_FILLED_OUT
          type: string
      required:
      - filterType
      - operator
      title: FORM_SUBMISSION
      type: object
    PublicRollingDateRangePropertyOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        requiresTimeZoneConversion:
          type: boolean
        operationType:
          default: ROLLING_DATE_RANGE
          enum:
          - ROLLING_DATE_RANGE
          type: string
        numberOfDays:
          format: int32
          type: integer
        operator:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - numberOfDays
      - operationType
      - operator
      - requiresTimeZoneConversion
      title: ROLLING_DATE_RANGE
      type: object
    ApiCollectionResponseJoinTimeAndRecordId:
      example:
        total: 0
        paging:
          next:
            link: link
            after: after
          prev:
            before: before
            link: link
        results:
        - recordId: recordId
          membershipTimestamp: 2000-01-23T04:56:07.000+00:00
        - recordId: recordId
          membershipTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          format: int64
          type: integer
        paging:
          $ref: '#/components/schemas/Paging'
        results:
          items:
            $ref: '#/components/schemas/JoinTimeAndRecordId'
          type: array
      required:
      - results
      type: object
    PublicAssociationFilterBranch:
      properties:
        filterBranchType:
          default: ASSOCIATION
          enum:
          - ASSOCIATION
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        objectTypeId:
          type: string
        filterBranchOperator:
          type: string
        associationTypeId:
          format: int32
          type: integer
        associationCategory:
          type: string
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
        operator:
          type: string
      required:
      - associationCategory
      - associationTypeId
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      - objectTypeId
      - operator
      title: ASSOCIATION
      type: object
    PublicQuarterReference:
      properties:
        hour:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        referenceType:
          default: QUARTER
          enum:
          - QUARTER
          type: string
        day:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
      required:
      - day
      - month
      - referenceType
      title: QUARTER
      type: object
    PublicEmailSubscriptionFilter:
      properties:
        subscriptionType:
          type: string
        subscriptionIds:
          items:
            type: string
          type: array
        filterType:
          default: EMAIL_SUBSCRIPTION
          enum:
          - EMAIL_SUBSCRIPTION
          type: string
        acceptedStatuses:
          items:
            type: string
          type: array
      required:
      - acceptedStatuses
      - filterType
      - subscriptionIds
      title: EMAIL_SUBSCRIPTION
      type: object
    PublicEnumerationPropertyOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        values:
          items:
            type: string
          type: array
        operationType:
          default: ENUMERATION
          enum:
          - ENUMERATION
          type: string
        operator:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - values
      title: ENUMERATION
      type: object
    ListFolderCreateResponse:
      example:
        folder:
          createdAt: 2000-01-23T04:56:07.000+00:00
          parentFolderId: 0
          childNodes:
          - null
          - null
          name: name
          id: 6
          childLists:
          - 1
          - 1
          updatedContentsAt: 2000-01-23T04:56:07.000+00:00
          userId: 5
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        folder:
          $ref: '#/components/schemas/PublicListFolder'
      required:
      - folder
      type: object
    PublicTimePointOperation:
      properties:
        endpointBehavior:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        propertyParser:
          type: string
        operationType:
          default: TIME_POINT
          enum:
          - TIME_POINT
          type: string
        timePoint:
          $ref: '#/components/schemas/PublicTimePointOperation_timePoint'
        type:
          type: string
        operator:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - timePoint
      - type
      title: TIME_POINT
      type: object
    ListUpdateResponse:
      example:
        updatedList:
          processingType: processingType
          objectTypeId: objectTypeId
          updatedById: updatedById
          filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
          listId: listId
          createdAt: 2000-01-23T04:56:07.000+00:00
          processingStatus: processingStatus
          deletedAt: 2000-01-23T04:56:07.000+00:00
          listVersion: 0
          size: 6
          name: name
          createdById: createdById
          filterBranch:
            filterBranchType: OR
            filterBranches:
            - null
            - null
            filterBranchOperator: filterBranchOperator
            filters:
            - property: property
              filterType: PROPERTY
              operation:
                includeObjectsWithNoValueSet: true
                operationType: BOOL
                value: true
                operator: operator
            - property: property
              filterType: PROPERTY
              operation:
                includeObjectsWithNoValueSet: true
                operationType: BOOL
                value: true
                operator: operator
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        updatedList:
          $ref: '#/components/schemas/PublicObjectList'
      type: object
    PublicAllHistoryRefineBy:
      properties:
        type:
          default: ALL_HISTORY
          enum:
          - ALL_HISTORY
          type: string
      required:
      - type
      title: ALL_HISTORY
      type: object
    PublicNotAnyFilterBranch:
      properties:
        filterBranchType:
          default: NOT_ANY
          enum:
          - NOT_ANY
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filterBranchOperator:
          type: string
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      title: NOT_ANY
      type: object
    PublicIndexedTimePoint:
      properties:
        offset:
          $ref: '#/components/schemas/PublicIndexOffset'
        timezoneSource:
          type: string
        indexReference:
          $ref: '#/components/schemas/PublicIndexedTimePoint_indexReference'
        timeType:
          default: INDEXED
          enum:
          - INDEXED
          type: string
        zoneId:
          type: string
      required:
      - indexReference
      - timeType
      - zoneId
      title: INDEXED
      type: object
    PublicRangedTimeOperation:
      properties:
        upperBoundEndpointBehavior:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        upperBoundTimePoint:
          $ref: '#/components/schemas/PublicTimePointOperation_timePoint'
        propertyParser:
          type: string
        operationType:
          type: string
        type:
          default: TIME_RANGED
          enum:
          - TIME_RANGED
          type: string
        lowerBoundEndpointBehavior:
          type: string
        operator:
          type: string
        lowerBoundTimePoint:
          $ref: '#/components/schemas/PublicTimePointOperation_timePoint'
      required:
      - includeObjectsWithNoValueSet
      - lowerBoundTimePoint
      - operationType
      - operator
      - type
      - upperBoundTimePoint
      title: TIME_RANGED
      type: object
    PublicWebinarFilter:
      properties:
        webinarId:
          type: string
        filterType:
          default: WEBINAR
          enum:
          - WEBINAR
          type: string
        operator:
          type: string
      required:
      - filterType
      - operator
      title: WEBINAR
      type: object
    ListCreateResponse:
      example:
        list:
          processingType: processingType
          objectTypeId: objectTypeId
          updatedById: updatedById
          filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
          listId: listId
          createdAt: 2000-01-23T04:56:07.000+00:00
          processingStatus: processingStatus
          deletedAt: 2000-01-23T04:56:07.000+00:00
          listVersion: 0
          size: 6
          name: name
          createdById: createdById
          filterBranch:
            filterBranchType: OR
            filterBranches:
            - null
            - null
            filterBranchOperator: filterBranchOperator
            filters:
            - property: property
              filterType: PROPERTY
              operation:
                includeObjectsWithNoValueSet: true
                operationType: BOOL
                value: true
                operator: operator
            - property: property
              filterType: PROPERTY
              operation:
                includeObjectsWithNoValueSet: true
                operationType: BOOL
                value: true
                operator: operator
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        list:
          $ref: '#/components/schemas/PublicObjectList'
      required:
      - list
      type: object
    MembershipsUpdateResponse:
      example:
        recordIdsRemoved:
        - recordIdsRemoved
        - recordIdsRemoved
        recordsIdsAdded:
        - recordsIdsAdded
        - recordsIdsAdded
        recordIdsMissing:
        - recordIdsMissing
        - recordIdsMissing
      properties:
        recordIdsRemoved:
          description: The IDs of the records that were `removed` from the list.
          items:
            type: string
          type: array
        recordsIdsAdded:
          items:
            type: string
          type: array
        recordIdsMissing:
          description: The IDs of the records that were `missing` (e.g. did not exist
            in the portal) and so were not `added` or `removed`.
          items:
            type: string
          type: array
      required:
      - recordIdsMissing
      - recordIdsRemoved
      - recordsIdsAdded
      type: object
    PublicUnifiedEventsFilterBranch:
      properties:
        filterBranchType:
          default: UNIFIED_EVENTS
          enum:
          - UNIFIED_EVENTS
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        eventTypeId:
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        filterBranchOperator:
          type: string
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
        operator:
          enum:
          - HAS_COMPLETED
          - HAS_NOT_COMPLETED
          type: string
      required:
      - eventTypeId
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      - operator
      title: UNIFIED_EVENTS
      type: object
    PublicNumOccurrencesRefineBy:
      properties:
        maxOccurrences:
          format: int32
          type: integer
        type:
          default: NUM_OCCURRENCES
          enum:
          - NUM_OCCURRENCES
          type: string
        minOccurrences:
          format: int32
          type: integer
      required:
      - type
      title: NUM_OCCURRENCES
      type: object
    PublicObjectList:
      example:
        processingType: processingType
        objectTypeId: objectTypeId
        updatedById: updatedById
        filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
        listId: listId
        createdAt: 2000-01-23T04:56:07.000+00:00
        processingStatus: processingStatus
        deletedAt: 2000-01-23T04:56:07.000+00:00
        listVersion: 0
        size: 6
        name: name
        createdById: createdById
        filterBranch:
          filterBranchType: OR
          filterBranches:
          - null
          - null
          filterBranchOperator: filterBranchOperator
          filters:
          - property: property
            filterType: PROPERTY
            operation:
              includeObjectsWithNoValueSet: true
              operationType: BOOL
              value: true
              operator: operator
          - property: property
            filterType: PROPERTY
            operation:
              includeObjectsWithNoValueSet: true
              operationType: BOOL
              value: true
              operator: operator
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        processingType:
          description: The processing type of the list.
          type: string
        objectTypeId:
          description: The object type of the list.
          type: string
        updatedById:
          description: The ID of the user that last updated the list.
          type: string
        filtersUpdatedAt:
          description: The time when the filters for this list were last updated.
          format: date-time
          type: string
        listId:
          description: The **ILS ID** of the list.
          type: string
        createdAt:
          description: The time when the list was created.
          format: date-time
          type: string
        processingStatus:
          description: The processing status of the list.
          type: string
        deletedAt:
          description: The time when the list was deleted.
          format: date-time
          type: string
        listVersion:
          description: The version of the list.
          format: int32
          type: integer
        size:
          format: int64
          type: integer
        name:
          description: The name of the list.
          type: string
        createdById:
          description: The ID of the user that created the list.
          type: string
        filterBranch:
          $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
        updatedAt:
          description: The time the list was last updated.
          format: date-time
          type: string
      required:
      - listId
      - listVersion
      - name
      - objectTypeId
      - processingStatus
      - processingType
      type: object
    RecordListMembership:
      example:
        listId: listId
        listVersion: 6
        lastAddedTimestamp: 2000-01-23T04:56:07.000+00:00
        firstAddedTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        listId:
          type: string
        listVersion:
          format: int32
          type: integer
        lastAddedTimestamp:
          format: date-time
          type: string
        firstAddedTimestamp:
          format: date-time
          type: string
      required:
      - firstAddedTimestamp
      - lastAddedTimestamp
      - listId
      - listVersion
      type: object
    PublicCtaAnalyticsFilter:
      properties:
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        pruningRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        filterType:
          default: CTA
          enum:
          - CTA
          type: string
        ctaName:
          type: string
        operator:
          type: string
      required:
      - ctaName
      - filterType
      - operator
      title: CTA
      type: object
    ListFetchResponse:
      example:
        list:
          processingType: processingType
          objectTypeId: objectTypeId
          updatedById: updatedById
          filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
          listId: listId
          createdAt: 2000-01-23T04:56:07.000+00:00
          processingStatus: processingStatus
          deletedAt: 2000-01-23T04:56:07.000+00:00
          listVersion: 0
          size: 6
          name: name
          createdById: createdById
          filterBranch:
            filterBranchType: OR
            filterBranches:
            - null
            - null
            filterBranchOperator: filterBranchOperator
            filters:
            - property: property
              filterType: PROPERTY
              operation:
                includeObjectsWithNoValueSet: true
                operationType: BOOL
                value: true
                operator: operator
            - property: property
              filterType: PROPERTY
              operation:
                includeObjectsWithNoValueSet: true
                operationType: BOOL
                value: true
                operator: operator
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        list:
          $ref: '#/components/schemas/PublicObjectList'
      required:
      - list
      type: object
    PublicConstantFilter:
      properties:
        shouldAccept:
          type: boolean
        source:
          type: string
        filterType:
          default: CONSTANT
          enum:
          - CONSTANT
          type: string
      required:
      - filterType
      - shouldAccept
      title: CONSTANT
      type: object
    PublicSetOccurrencesRefineBy:
      properties:
        type:
          default: SET_OCCURRENCES
          enum:
          - SET_OCCURRENCES
          type: string
        setType:
          type: string
      required:
      - setType
      - type
      title: SET_OCCURRENCES
      type: object
    PublicListFolder:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        parentFolderId: 0
        childNodes:
        - null
        - null
        name: name
        id: 6
        childLists:
        - 1
        - 1
        updatedContentsAt: 2000-01-23T04:56:07.000+00:00
        userId: 5
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        createdAt:
          description: The time the folder was created at.
          format: date-time
          type: string
        parentFolderId:
          description: "The Id of the folder this folder is in, the root folder is\
            \ represented as 0."
          format: int32
          type: integer
        childNodes:
          items:
            $ref: '#/components/schemas/PublicListFolder'
          type: array
        name:
          description: The name of the folder.
          type: string
        id:
          description: The Id of the folder.
          format: int32
          type: integer
        childLists:
          description: An array of list Id's contained in this folder.
          items:
            format: int32
            type: integer
          type: array
        updatedContentsAt:
          description: The time that the contents of the folder was last updated at.
          format: date-time
          type: string
        userId:
          description: The user Id of the owner of the folder.
          format: int32
          type: integer
        updatedAt:
          description: The time the folder was last updated at.
          format: date-time
          type: string
      required:
      - childLists
      - childNodes
      - id
      - parentFolderId
      type: object
    ApiCollectionResponseRecordListMembershipNoPaging:
      example:
        total: 0
        results:
        - listId: listId
          listVersion: 6
          lastAddedTimestamp: 2000-01-23T04:56:07.000+00:00
          firstAddedTimestamp: 2000-01-23T04:56:07.000+00:00
        - listId: listId
          listVersion: 6
          lastAddedTimestamp: 2000-01-23T04:56:07.000+00:00
          firstAddedTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          format: int64
          type: integer
        results:
          items:
            $ref: '#/components/schemas/RecordListMembership'
          type: array
      required:
      - results
      type: object
    PublicComparativeDatePropertyOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        defaultComparisonValue:
          type: string
        operationType:
          default: COMPARATIVE_DATE
          enum:
          - COMPARATIVE_DATE
          type: string
        comparisonPropertyName:
          type: string
        operator:
          type: string
      required:
      - comparisonPropertyName
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      title: COMPARATIVE_DATE
      type: object
    PublicRangedNumberPropertyOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        upperBound:
          format: int32
          type: integer
        operationType:
          default: NUMBER_RANGED
          enum:
          - NUMBER_RANGED
          type: string
        lowerBound:
          format: int32
          type: integer
        operator:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - lowerBound
      - operationType
      - operator
      - upperBound
      title: NUMBER_RANGED
      type: object
    PublicPageViewAnalyticsFilter:
      properties:
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        enableTracking:
          type: boolean
        pruningRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        pageUrl:
          type: string
        filterType:
          default: PAGE_VIEW
          enum:
          - PAGE_VIEW
          type: string
        operator:
          type: string
      required:
      - filterType
      - operator
      - pageUrl
      title: PAGE_VIEW
      type: object
    MembershipChangeRequest:
      example:
        recordIdsToRemove:
        - 654
        recordIdsToAdd:
        - 123
        - 456
        - 789
      properties:
        recordIdsToRemove:
          description: ""
          example:
          - 654
          items:
            type: string
          type: array
        recordIdsToAdd:
          description: ""
          example:
          - 123
          - 456
          - 789
          items:
            type: string
          type: array
      required:
      - recordIdsToAdd
      - recordIdsToRemove
      type: object
    PublicComparativePropertyUpdatedOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        defaultComparisonValue:
          type: string
        operationType:
          default: COMPARATIVE_PROPERTY_UPDATED
          enum:
          - COMPARATIVE_PROPERTY_UPDATED
          type: string
        comparisonPropertyName:
          type: string
        operator:
          type: string
      required:
      - comparisonPropertyName
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      title: COMPARATIVE_PROPERTY_UPDATED
      type: object
    PreviousPage:
      example:
        before: before
        link: link
      properties:
        before:
          description: The offset of the previous page of records.
          type: string
        link:
          description: A direct link to the request for the previous page of records.
          type: string
      required:
      - before
      type: object
    PublicAndFilterBranch:
      properties:
        filterBranchType:
          default: AND
          enum:
          - AND
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filterBranchOperator:
          type: string
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      title: AND
      type: object
    PublicIntegrationEventFilter:
      properties:
        eventTypeId:
          format: int32
          type: integer
        filterLines:
          items:
            $ref: '#/components/schemas/PublicEventFilterMetadata'
          type: array
        filterType:
          default: INTEGRATION_EVENT
          enum:
          - INTEGRATION_EVENT
          type: string
      required:
      - eventTypeId
      - filterLines
      - filterType
      title: INTEGRATION_EVENT
      type: object
    PublicAbsoluteComparativeTimestampRefineBy:
      properties:
        comparison:
          type: string
        type:
          default: ABSOLUTE_COMPARATIVE
          enum:
          - ABSOLUTE_COMPARATIVE
          type: string
        timestamp:
          format: int64
          type: integer
      required:
      - comparison
      - timestamp
      - type
      title: ABSOLUTE_COMPARATIVE
      type: object
    PublicSurveyMonkeyFilter:
      properties:
        surveyId:
          type: string
        filterType:
          default: SURVEY_MONKEY
          enum:
          - SURVEY_MONKEY
          type: string
        operator:
          type: string
      required:
      - filterType
      - operator
      - surveyId
      title: SURVEY_MONKEY
      type: object
    PublicAbsoluteRangedTimestampRefineBy:
      properties:
        rangeType:
          type: string
        upperTimestamp:
          format: int64
          type: integer
        lowerTimestamp:
          format: int64
          type: integer
        type:
          default: ABSOLUTE_RANGED
          enum:
          - ABSOLUTE_RANGED
          type: string
      required:
      - lowerTimestamp
      - rangeType
      - type
      - upperTimestamp
      title: ABSOLUTE_RANGED
      type: object
    PublicDatePropertyOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        month:
          type: string
        year:
          format: int32
          type: integer
        operationType:
          default: DATE
          enum:
          - DATE
          type: string
        day:
          format: int32
          type: integer
        operator:
          type: string
      required:
      - day
      - includeObjectsWithNoValueSet
      - month
      - operationType
      - operator
      - year
      title: DATE
      type: object
    PublicEventAnalyticsFilter:
      properties:
        eventId:
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        pruningRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        filterType:
          default: EVENT
          enum:
          - EVENT
          type: string
        operator:
          type: string
      required:
      - eventId
      - filterType
      - operator
      title: EVENT
      type: object
    PublicUnifiedEventsFilter:
      properties:
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        eventTypeId:
          type: string
        filterLines:
          items:
            $ref: '#/components/schemas/PublicEventFilterMetadata'
          type: array
        pruningRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        filterType:
          default: UNIFIED_EVENTS
          enum:
          - UNIFIED_EVENTS
          type: string
      required:
      - filterLines
      - filterType
      title: UNIFIED_EVENTS
      type: object
    PublicFiscalYearReference:
      properties:
        hour:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        referenceType:
          default: FISCAL_YEAR
          enum:
          - FISCAL_YEAR
          type: string
        day:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
      required:
      - day
      - month
      - referenceType
      title: FISCAL_YEAR
      type: object
    PublicCalendarDatePropertyOperation:
      properties:
        useFiscalYear:
          type: boolean
        fiscalYearStart:
          enum:
          - JANUARY
          - FEBRUARY
          - MARCH
          - APRIL
          - MAY
          - JUNE
          - JULY
          - AUGUST
          - SEPTEMBER
          - OCTOBER
          - NOVEMBER
          - DECEMBER
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        operationType:
          default: CALENDAR_DATE
          enum:
          - CALENDAR_DATE
          type: string
        timeUnitCount:
          format: int32
          type: integer
        operator:
          type: string
        timeUnit:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - timeUnit
      title: CALENDAR_DATE
      type: object
    PublicPropertyFilter:
      example:
        property: property
        filterType: PROPERTY
        operation:
          includeObjectsWithNoValueSet: true
          operationType: BOOL
          value: true
          operator: operator
      properties:
        property:
          type: string
        filterType:
          default: PROPERTY
          enum:
          - PROPERTY
          type: string
        operation:
          $ref: '#/components/schemas/PublicSurveyMonkeyValueFilter_valueComparison'
      required:
      - filterType
      - operation
      - property
      title: PROPERTY
      type: object
    ErrorDetail:
      properties:
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        code:
          description: The status code associated with the error detail
          type: string
        in:
          description: The name of the field or parameter in which the error was found.
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
          type: object
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          type: string
      required:
      - message
      type: object
    PublicNumAssociationsFilter:
      properties:
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        associationTypeId:
          format: int32
          type: integer
        associationCategory:
          type: string
        filterType:
          default: NUM_ASSOCIATIONS
          enum:
          - NUM_ASSOCIATIONS
          type: string
      required:
      - associationCategory
      - associationTypeId
      - coalescingRefineBy
      - filterType
      title: NUM_ASSOCIATIONS
      type: object
    PublicAssociationInListFilter:
      properties:
        listId:
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        toObjectType:
          type: string
        associationTypeId:
          format: int32
          type: integer
        associationCategory:
          type: string
        filterType:
          default: ASSOCIATION
          enum:
          - ASSOCIATION
          type: string
        toObjectTypeId:
          type: string
        operator:
          type: string
      required:
      - associationCategory
      - associationTypeId
      - coalescingRefineBy
      - filterType
      - listId
      - operator
      title: ASSOCIATION
      type: object
    PublicEmailEventFilter:
      properties:
        clickUrl:
          type: string
        level:
          type: string
        pruningRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        appId:
          type: string
        emailId:
          type: string
        filterType:
          default: EMAIL_EVENT
          enum:
          - EMAIL_EVENT
          type: string
        operator:
          enum:
          - LINK_CLICKED
          - MARKED_SPAM
          - OPENED
          - OPENED_BUT_LINK_NOT_CLICKED
          - OPENED_BUT_NOT_REPLIED
          - REPLIED
          - UNSUBSCRIBED
          - BOUNCED
          - RECEIVED
          - RECEIVED_BUT_NOT_OPENED
          - SENT
          - SENT_BUT_LINK_NOT_CLICKED
          - SENT_BUT_NOT_RECEIVED
          type: string
      required:
      - appId
      - emailId
      - filterType
      - level
      - operator
      title: EMAIL_EVENT
      type: object
    PublicOrFilterBranch:
      example:
        filterBranchType: OR
        filterBranches:
        - null
        - null
        filterBranchOperator: filterBranchOperator
        filters:
        - property: property
          filterType: PROPERTY
          operation:
            includeObjectsWithNoValueSet: true
            operationType: BOOL
            value: true
            operator: operator
        - property: property
          filterType: PROPERTY
          operation:
            includeObjectsWithNoValueSet: true
            operationType: BOOL
            value: true
            operator: operator
      properties:
        filterBranchType:
          default: OR
          enum:
          - OR
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filterBranchOperator:
          type: string
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      title: OR
      type: object
    PublicAdsTimeFilter:
      properties:
        pruningRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        filterType:
          default: ADS_TIME
          enum:
          - ADS_TIME
          type: string
      required:
      - filterType
      - pruningRefineBy
      title: ADS_TIME
      type: object
    PublicFormSubmissionOnPageFilter:
      properties:
        formId:
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        pruningRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        filterType:
          default: FORM_SUBMISSION_ON_PAGE
          enum:
          - FORM_SUBMISSION_ON_PAGE
          type: string
        pageId:
          type: string
        operator:
          enum:
          - FILLED_OUT
          - NOT_FILLED_OUT
          type: string
      required:
      - filterType
      - operator
      - pageId
      title: FORM_SUBMISSION_ON_PAGE
      type: object
    PublicPropertyAssociationInListFilter:
      properties:
        listId:
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicFormSubmissionFilter_coalescingRefineBy'
        propertyWithObjectId:
          type: string
        filterType:
          default: PROPERTY_ASSOCIATION
          enum:
          - PROPERTY_ASSOCIATION
          type: string
        toObjectTypeId:
          type: string
        operator:
          type: string
      required:
      - coalescingRefineBy
      - filterType
      - listId
      - operator
      - propertyWithObjectId
      title: PROPERTY_ASSOCIATION
      type: object
    PublicStringPropertyOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        operationType:
          default: STRING
          enum:
          - STRING
          type: string
        value:
          type: string
        operator:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - value
      title: STRING
      type: object
    PublicPropertyReferencedTime:
      properties:
        timezoneSource:
          type: string
        property:
          type: string
        timeType:
          default: PROPERTY_REFERENCED
          enum:
          - PROPERTY_REFERENCED
          type: string
        zoneId:
          type: string
        referenceType:
          type: string
      required:
      - property
      - referenceType
      - timeType
      - zoneId
      title: PROPERTY_REFERENCED
      type: object
    Paging:
      example:
        next:
          link: link
          after: after
        prev:
          before: before
          link: link
      properties:
        next:
          $ref: '#/components/schemas/NextPage'
        prev:
          $ref: '#/components/schemas/PreviousPage'
      type: object
    PublicPrivacyAnalyticsFilter:
      properties:
        privacyName:
          type: string
        filterType:
          default: PRIVACY
          enum:
          - PRIVACY
          type: string
        operator:
          type: string
      required:
      - filterType
      - operator
      - privacyName
      title: PRIVACY
      type: object
    ListFilterUpdateRequest:
      example:
        filterBranch:
          filterBranchType: OR
          filterBranches:
          - null
          - null
          filterBranchOperator: filterBranchOperator
          filters:
          - property: property
            filterType: PROPERTY
            operation:
              includeObjectsWithNoValueSet: true
              operationType: BOOL
              value: true
              operator: operator
          - property: property
            filterType: PROPERTY
            operation:
              includeObjectsWithNoValueSet: true
              operationType: BOOL
              value: true
              operator: operator
      properties:
        filterBranch:
          $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
      required:
      - filterBranch
      type: object
    PublicMultiStringPropertyOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        values:
          items:
            type: string
          type: array
        operationType:
          default: MULTISTRING
          enum:
          - MULTISTRING
          type: string
        operator:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - values
      title: MULTISTRING
      type: object
    PublicWeekReference:
      properties:
        dayOfWeek:
          enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
          type: string
        hour:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        referenceType:
          default: WEEK
          enum:
          - WEEK
          type: string
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
      required:
      - dayOfWeek
      - referenceType
      title: WEEK
      type: object
    PublicAdsSearchFilter:
      properties:
        searchTerms:
          items:
            type: string
          type: array
        entityType:
          type: string
        adNetwork:
          type: string
        searchTermType:
          type: string
        filterType:
          default: ADS_SEARCH
          enum:
          - ADS_SEARCH
          type: string
        operator:
          type: string
      required:
      - adNetwork
      - entityType
      - filterType
      - operator
      - searchTermType
      - searchTerms
      title: ADS_SEARCH
      type: object
    PublicTodayReference:
      properties:
        hour:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        referenceType:
          default: TODAY
          enum:
          - TODAY
          type: string
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
      required:
      - referenceType
      title: TODAY
      type: object
    PublicNowReference:
      properties:
        hour:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        referenceType:
          default: NOW
          enum:
          - NOW
          type: string
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
      required:
      - referenceType
      title: NOW
      type: object
    ListFolderCreateRequest:
      example:
        parentFolderId: parentFolderId
        name: name
      properties:
        parentFolderId:
          description: "The folder this should be created in, if not specified will\
            \ be created in the root folder 0."
          type: string
        name:
          description: The name of the folder to be created.
          type: string
      required:
      - name
      type: object
    JoinTimeAndRecordId:
      example:
        recordId: recordId
        membershipTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        recordId:
          type: string
        membershipTimestamp:
          format: date-time
          type: string
      required:
      - membershipTimestamp
      - recordId
      type: object
    PublicRestrictedFilterBranch:
      properties:
        filterBranchType:
          default: RESTRICTED
          enum:
          - RESTRICTED
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filterBranchOperator:
          type: string
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      title: RESTRICTED
      type: object
    PublicMonthReference:
      properties:
        hour:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        referenceType:
          default: MONTH
          enum:
          - MONTH
          type: string
        day:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
      required:
      - day
      - referenceType
      title: MONTH
      type: object
    PublicDateTimePropertyOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        requiresTimeZoneConversion:
          type: boolean
        operationType:
          default: DATETIME
          enum:
          - DATETIME
          type: string
        operator:
          type: string
        timestamp:
          format: int32
          type: integer
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - requiresTimeZoneConversion
      - timestamp
      title: DATETIME
      type: object
    PublicCampaignInfluencedFilter:
      properties:
        campaignId:
          type: string
        filterType:
          default: CAMPAIGN_INFLUENCED
          enum:
          - CAMPAIGN_INFLUENCED
          type: string
      required:
      - campaignId
      - filterType
      title: CAMPAIGN_INFLUENCED
      type: object
    ListMoveRequest:
      example:
        listId: listId
        newFolderId: newFolderId
      properties:
        listId:
          description: The Id of the list to move.
          type: string
        newFolderId:
          description: "The Id of folder to move the list to, the root folder is Id\
            \ 0."
          type: string
      required:
      - listId
      - newFolderId
      type: object
    PublicFiscalQuarterReference:
      properties:
        hour:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        referenceType:
          default: FISCAL_QUARTER
          enum:
          - FISCAL_QUARTER
          type: string
        day:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
      required:
      - day
      - month
      - referenceType
      title: FISCAL_QUARTER
      type: object
    Error:
      example:
        message: Invalid input (details will vary based on the error)
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        category: VALIDATION_ERROR
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
      properties:
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
            invalidPropertyName:
            - propertyValue
          type: object
        correlationId:
          description: A unique identifier for the request. Include this value with
            any error reports or support tickets
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
          format: uuid
          type: string
        links:
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation
            about the error or recommended remediation steps
          example:
            knowledge-base: https://www.hubspot.com/products/service/knowledge-base
          type: object
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          example: Invalid input (details will vary based on the error)
          type: string
        category:
          description: The error category
          example: VALIDATION_ERROR
          type: string
        errors:
          description: further information about the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
      required:
      - category
      - correlationId
      - message
      type: object
    PublicMigrationMapping:
      example:
        listId: listId
        legacyListId: legacyListId
      properties:
        listId:
          description: The V3 list id for the list
          type: string
        legacyListId:
          description: The legacy list id for the list
          type: string
      required:
      - legacyListId
      - listId
      type: object
    ListCreateRequest:
      example:
        objectTypeId: objectTypeId
        processingType: processingType
        customProperties:
          key: customProperties
        listFolderId: 0
        name: name
        filterBranch:
          filterBranchType: OR
          filterBranches:
          - null
          - null
          filterBranchOperator: filterBranchOperator
          filters:
          - property: property
            filterType: PROPERTY
            operation:
              includeObjectsWithNoValueSet: true
              operationType: BOOL
              value: true
              operator: operator
          - property: property
            filterType: PROPERTY
            operation:
              includeObjectsWithNoValueSet: true
              operationType: BOOL
              value: true
              operator: operator
      properties:
        objectTypeId:
          description: The object type ID of the type of objects that the list will
            store.
          type: string
        processingType:
          description: "The processing type of the list. One of: `SNAPSHOT`, `MANUAL`,\
            \ or `DYNAMIC`."
          type: string
        customProperties:
          additionalProperties:
            type: string
          description: "The list of custom properties to tie to the list. Custom property\
            \ name is the key, the value is the value."
          type: object
        listFolderId:
          description: "The ID of the folder that the list should be created in. If\
            \ left blank, then the list will be created in the root of the list folder\
            \ structure."
          format: int32
          type: integer
        name:
          description: "The name of the list, which must be globally unique across\
            \ all public lists in the portal."
          type: string
        filterBranch:
          $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
      required:
      - name
      - objectTypeId
      - processingType
      type: object
    PublicBoolPropertyOperation:
      example:
        includeObjectsWithNoValueSet: true
        operationType: BOOL
        value: true
        operator: operator
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        operationType:
          default: BOOL
          enum:
          - BOOL
          type: string
        value:
          type: boolean
        operator:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - value
      title: BOOL
      type: object
    PublicAllPropertyTypesOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        operationType:
          default: ALL_PROPERTY
          enum:
          - ALL_PROPERTY
          type: string
        operator:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      title: ALL_PROPERTY
      type: object
    PublicEventFilterMetadata:
      properties:
        property:
          type: string
        operation:
          $ref: '#/components/schemas/PublicSurveyMonkeyValueFilter_valueComparison'
      required:
      - operation
      - property
      type: object
    PublicDatePoint:
      properties:
        month:
          format: int32
          type: integer
        hour:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
        timezoneSource:
          type: string
        millisecond:
          format: int32
          type: integer
        timeType:
          default: DATE
          enum:
          - DATE
          type: string
        zoneId:
          type: string
        day:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
      required:
      - day
      - month
      - timeType
      - year
      - zoneId
      title: DATE
      type: object
    PublicTimeOffset:
      properties:
        amount:
          format: int64
          type: integer
        offsetDirection:
          type: string
        timeUnit:
          type: string
      required:
      - amount
      - offsetDirection
      - timeUnit
      type: object
    NextPage:
      example:
        link: link
        after: after
      properties:
        link:
          description: A direct link to the request for the next page of records.
          type: string
        after:
          description: The offset for the next page of records.
          type: string
      required:
      - after
      type: object
    PublicRollingPropertyUpdatedOperation:
      properties:
        includeObjectsWithNoValueSet:
          type: boolean
        operationType:
          default: ROLLING_PROPERTY_UPDATED
          enum:
          - ROLLING_PROPERTY_UPDATED
          type: string
        numberOfDays:
          format: int32
          type: integer
        operator:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - numberOfDays
      - operationType
      - operator
      title: ROLLING_PROPERTY_UPDATED
      type: object
    PublicPropertyAssociationFilterBranch_filterBranches_inner:
      oneOf:
      - $ref: '#/components/schemas/PublicOrFilterBranch'
      - $ref: '#/components/schemas/PublicAndFilterBranch'
      - $ref: '#/components/schemas/PublicNotAllFilterBranch'
      - $ref: '#/components/schemas/PublicNotAnyFilterBranch'
      - $ref: '#/components/schemas/PublicRestrictedFilterBranch'
      - $ref: '#/components/schemas/PublicUnifiedEventsFilterBranch'
      - $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch'
      - $ref: '#/components/schemas/PublicAssociationFilterBranch'
    PublicPropertyAssociationFilterBranch_filters_inner:
      oneOf:
      - $ref: '#/components/schemas/PublicPropertyFilter'
      - $ref: '#/components/schemas/PublicAssociationInListFilter'
      - $ref: '#/components/schemas/PublicPageViewAnalyticsFilter'
      - $ref: '#/components/schemas/PublicCtaAnalyticsFilter'
      - $ref: '#/components/schemas/PublicEventAnalyticsFilter'
      - $ref: '#/components/schemas/PublicFormSubmissionFilter'
      - $ref: '#/components/schemas/PublicFormSubmissionOnPageFilter'
      - $ref: '#/components/schemas/PublicIntegrationEventFilter'
      - $ref: '#/components/schemas/PublicEmailSubscriptionFilter'
      - $ref: '#/components/schemas/PublicCommunicationSubscriptionFilter'
      - $ref: '#/components/schemas/PublicCampaignInfluencedFilter'
      - $ref: '#/components/schemas/PublicSurveyMonkeyFilter'
      - $ref: '#/components/schemas/PublicSurveyMonkeyValueFilter'
      - $ref: '#/components/schemas/PublicWebinarFilter'
      - $ref: '#/components/schemas/PublicEmailEventFilter'
      - $ref: '#/components/schemas/PublicPrivacyAnalyticsFilter'
      - $ref: '#/components/schemas/PublicAdsSearchFilter'
      - $ref: '#/components/schemas/PublicAdsTimeFilter'
      - $ref: '#/components/schemas/PublicInListFilter'
      - $ref: '#/components/schemas/PublicNumAssociationsFilter'
      - $ref: '#/components/schemas/PublicUnifiedEventsFilter'
      - $ref: '#/components/schemas/PublicPropertyAssociationInListFilter'
      - $ref: '#/components/schemas/PublicConstantFilter'
    PublicSurveyMonkeyValueFilter_valueComparison:
      oneOf:
      - $ref: '#/components/schemas/PublicBoolPropertyOperation'
      - $ref: '#/components/schemas/PublicNumberPropertyOperation'
      - $ref: '#/components/schemas/PublicStringPropertyOperation'
      - $ref: '#/components/schemas/PublicDateTimePropertyOperation'
      - $ref: '#/components/schemas/PublicRangedDatePropertyOperation'
      - $ref: '#/components/schemas/PublicComparativePropertyUpdatedOperation'
      - $ref: '#/components/schemas/PublicComparativeDatePropertyOperation'
      - $ref: '#/components/schemas/PublicRollingDateRangePropertyOperation'
      - $ref: '#/components/schemas/PublicRollingPropertyUpdatedOperation'
      - $ref: '#/components/schemas/PublicEnumerationPropertyOperation'
      - $ref: '#/components/schemas/PublicAllPropertyTypesOperation'
      - $ref: '#/components/schemas/PublicRangedNumberPropertyOperation'
      - $ref: '#/components/schemas/PublicMultiStringPropertyOperation'
      - $ref: '#/components/schemas/PublicDatePropertyOperation'
      - $ref: '#/components/schemas/PublicCalendarDatePropertyOperation'
      - $ref: '#/components/schemas/PublicTimePointOperation'
      - $ref: '#/components/schemas/PublicRangedTimeOperation'
    PublicFormSubmissionFilter_coalescingRefineBy:
      oneOf:
      - $ref: '#/components/schemas/PublicNumOccurrencesRefineBy'
      - $ref: '#/components/schemas/PublicSetOccurrencesRefineBy'
      - $ref: '#/components/schemas/PublicRelativeComparativeTimestampRefineBy'
      - $ref: '#/components/schemas/PublicRelativeRangedTimestampRefineBy'
      - $ref: '#/components/schemas/PublicAbsoluteComparativeTimestampRefineBy'
      - $ref: '#/components/schemas/PublicAbsoluteRangedTimestampRefineBy'
      - $ref: '#/components/schemas/PublicAllHistoryRefineBy'
      - $ref: '#/components/schemas/PublicTimePointOperation'
      - $ref: '#/components/schemas/PublicRangedTimeOperation'
    PublicTimePointOperation_timePoint:
      oneOf:
      - $ref: '#/components/schemas/PublicDatePoint'
      - $ref: '#/components/schemas/PublicIndexedTimePoint'
      - $ref: '#/components/schemas/PublicPropertyReferencedTime'
    PublicIndexedTimePoint_indexReference:
      oneOf:
      - $ref: '#/components/schemas/PublicNowReference'
      - $ref: '#/components/schemas/PublicTodayReference'
      - $ref: '#/components/schemas/PublicWeekReference'
      - $ref: '#/components/schemas/PublicFiscalQuarterReference'
      - $ref: '#/components/schemas/PublicFiscalYearReference'
      - $ref: '#/components/schemas/PublicYearReference'
      - $ref: '#/components/schemas/PublicQuarterReference'
      - $ref: '#/components/schemas/PublicMonthReference'
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          scopes:
            crm.lists.read: ' '
            cms.membership.access_groups.write: Write membership access groups.
            crm.lists.write: ' '
          tokenUrl: https://api.hubapi.com/oauth/v1/token
      type: oauth2
    private_apps:
      in: header
      name: private-app
      type: apiKey
x-hubspot-available-client-libraries:
- PHP
- Node
- Ruby
- Python
x-hubspot-product-tier-requirements:
  marketing: STARTER
  cms: STARTER
