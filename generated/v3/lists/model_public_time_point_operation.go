/*
Lists

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lists

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicTimePointOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicTimePointOperation{}

// PublicTimePointOperation struct for PublicTimePointOperation
type PublicTimePointOperation struct {
	EndpointBehavior *string `json:"endpointBehavior,omitempty"`
	IncludeObjectsWithNoValueSet bool `json:"includeObjectsWithNoValueSet"`
	PropertyParser *string `json:"propertyParser,omitempty"`
	OperationType string `json:"operationType"`
	TimePoint PublicTimePointOperationTimePoint `json:"timePoint"`
	Type string `json:"type"`
	Operator string `json:"operator"`
}

type _PublicTimePointOperation PublicTimePointOperation

// NewPublicTimePointOperation instantiates a new PublicTimePointOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicTimePointOperation(includeObjectsWithNoValueSet bool, operationType string, timePoint PublicTimePointOperationTimePoint, type_ string, operator string) *PublicTimePointOperation {
	this := PublicTimePointOperation{}
	this.IncludeObjectsWithNoValueSet = includeObjectsWithNoValueSet
	this.OperationType = operationType
	this.TimePoint = timePoint
	this.Type = type_
	this.Operator = operator
	return &this
}

// NewPublicTimePointOperationWithDefaults instantiates a new PublicTimePointOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicTimePointOperationWithDefaults() *PublicTimePointOperation {
	this := PublicTimePointOperation{}
	var operationType string = "TIME_POINT"
	this.OperationType = operationType
	return &this
}

// GetEndpointBehavior returns the EndpointBehavior field value if set, zero value otherwise.
func (o *PublicTimePointOperation) GetEndpointBehavior() string {
	if o == nil || IsNil(o.EndpointBehavior) {
		var ret string
		return ret
	}
	return *o.EndpointBehavior
}

// GetEndpointBehaviorOk returns a tuple with the EndpointBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicTimePointOperation) GetEndpointBehaviorOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointBehavior) {
		return nil, false
	}
	return o.EndpointBehavior, true
}

// HasEndpointBehavior returns a boolean if a field has been set.
func (o *PublicTimePointOperation) HasEndpointBehavior() bool {
	if o != nil && !IsNil(o.EndpointBehavior) {
		return true
	}

	return false
}

// SetEndpointBehavior gets a reference to the given string and assigns it to the EndpointBehavior field.
func (o *PublicTimePointOperation) SetEndpointBehavior(v string) {
	o.EndpointBehavior = &v
}

// GetIncludeObjectsWithNoValueSet returns the IncludeObjectsWithNoValueSet field value
func (o *PublicTimePointOperation) GetIncludeObjectsWithNoValueSet() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeObjectsWithNoValueSet
}

// GetIncludeObjectsWithNoValueSetOk returns a tuple with the IncludeObjectsWithNoValueSet field value
// and a boolean to check if the value has been set.
func (o *PublicTimePointOperation) GetIncludeObjectsWithNoValueSetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeObjectsWithNoValueSet, true
}

// SetIncludeObjectsWithNoValueSet sets field value
func (o *PublicTimePointOperation) SetIncludeObjectsWithNoValueSet(v bool) {
	o.IncludeObjectsWithNoValueSet = v
}

// GetPropertyParser returns the PropertyParser field value if set, zero value otherwise.
func (o *PublicTimePointOperation) GetPropertyParser() string {
	if o == nil || IsNil(o.PropertyParser) {
		var ret string
		return ret
	}
	return *o.PropertyParser
}

// GetPropertyParserOk returns a tuple with the PropertyParser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicTimePointOperation) GetPropertyParserOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyParser) {
		return nil, false
	}
	return o.PropertyParser, true
}

// HasPropertyParser returns a boolean if a field has been set.
func (o *PublicTimePointOperation) HasPropertyParser() bool {
	if o != nil && !IsNil(o.PropertyParser) {
		return true
	}

	return false
}

// SetPropertyParser gets a reference to the given string and assigns it to the PropertyParser field.
func (o *PublicTimePointOperation) SetPropertyParser(v string) {
	o.PropertyParser = &v
}

// GetOperationType returns the OperationType field value
func (o *PublicTimePointOperation) GetOperationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *PublicTimePointOperation) GetOperationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *PublicTimePointOperation) SetOperationType(v string) {
	o.OperationType = v
}

// GetTimePoint returns the TimePoint field value
func (o *PublicTimePointOperation) GetTimePoint() PublicTimePointOperationTimePoint {
	if o == nil {
		var ret PublicTimePointOperationTimePoint
		return ret
	}

	return o.TimePoint
}

// GetTimePointOk returns a tuple with the TimePoint field value
// and a boolean to check if the value has been set.
func (o *PublicTimePointOperation) GetTimePointOk() (*PublicTimePointOperationTimePoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimePoint, true
}

// SetTimePoint sets field value
func (o *PublicTimePointOperation) SetTimePoint(v PublicTimePointOperationTimePoint) {
	o.TimePoint = v
}

// GetType returns the Type field value
func (o *PublicTimePointOperation) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PublicTimePointOperation) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PublicTimePointOperation) SetType(v string) {
	o.Type = v
}

// GetOperator returns the Operator field value
func (o *PublicTimePointOperation) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *PublicTimePointOperation) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *PublicTimePointOperation) SetOperator(v string) {
	o.Operator = v
}

func (o PublicTimePointOperation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicTimePointOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndpointBehavior) {
		toSerialize["endpointBehavior"] = o.EndpointBehavior
	}
	toSerialize["includeObjectsWithNoValueSet"] = o.IncludeObjectsWithNoValueSet
	if !IsNil(o.PropertyParser) {
		toSerialize["propertyParser"] = o.PropertyParser
	}
	toSerialize["operationType"] = o.OperationType
	toSerialize["timePoint"] = o.TimePoint
	toSerialize["type"] = o.Type
	toSerialize["operator"] = o.Operator
	return toSerialize, nil
}

func (o *PublicTimePointOperation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"includeObjectsWithNoValueSet",
		"operationType",
		"timePoint",
		"type",
		"operator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicTimePointOperation := _PublicTimePointOperation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicTimePointOperation)

	if err != nil {
		return err
	}

	*o = PublicTimePointOperation(varPublicTimePointOperation)

	return err
}

type NullablePublicTimePointOperation struct {
	value *PublicTimePointOperation
	isSet bool
}

func (v NullablePublicTimePointOperation) Get() *PublicTimePointOperation {
	return v.value
}

func (v *NullablePublicTimePointOperation) Set(val *PublicTimePointOperation) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicTimePointOperation) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicTimePointOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicTimePointOperation(val *PublicTimePointOperation) *NullablePublicTimePointOperation {
	return &NullablePublicTimePointOperation{value: val, isSet: true}
}

func (v NullablePublicTimePointOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicTimePointOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


