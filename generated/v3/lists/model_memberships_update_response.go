/*
Lists

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lists

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MembershipsUpdateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipsUpdateResponse{}

// MembershipsUpdateResponse struct for MembershipsUpdateResponse
type MembershipsUpdateResponse struct {
	// The IDs of the records that were `removed` from the list.
	RecordIdsRemoved []string `json:"recordIdsRemoved"`
	RecordsIdsAdded []string `json:"recordsIdsAdded"`
	// The IDs of the records that were `missing` (e.g. did not exist in the portal) and so were not `added` or `removed`.
	RecordIdsMissing []string `json:"recordIdsMissing"`
}

type _MembershipsUpdateResponse MembershipsUpdateResponse

// NewMembershipsUpdateResponse instantiates a new MembershipsUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipsUpdateResponse(recordIdsRemoved []string, recordsIdsAdded []string, recordIdsMissing []string) *MembershipsUpdateResponse {
	this := MembershipsUpdateResponse{}
	this.RecordIdsRemoved = recordIdsRemoved
	this.RecordsIdsAdded = recordsIdsAdded
	this.RecordIdsMissing = recordIdsMissing
	return &this
}

// NewMembershipsUpdateResponseWithDefaults instantiates a new MembershipsUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipsUpdateResponseWithDefaults() *MembershipsUpdateResponse {
	this := MembershipsUpdateResponse{}
	return &this
}

// GetRecordIdsRemoved returns the RecordIdsRemoved field value
func (o *MembershipsUpdateResponse) GetRecordIdsRemoved() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RecordIdsRemoved
}

// GetRecordIdsRemovedOk returns a tuple with the RecordIdsRemoved field value
// and a boolean to check if the value has been set.
func (o *MembershipsUpdateResponse) GetRecordIdsRemovedOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecordIdsRemoved, true
}

// SetRecordIdsRemoved sets field value
func (o *MembershipsUpdateResponse) SetRecordIdsRemoved(v []string) {
	o.RecordIdsRemoved = v
}

// GetRecordsIdsAdded returns the RecordsIdsAdded field value
func (o *MembershipsUpdateResponse) GetRecordsIdsAdded() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RecordsIdsAdded
}

// GetRecordsIdsAddedOk returns a tuple with the RecordsIdsAdded field value
// and a boolean to check if the value has been set.
func (o *MembershipsUpdateResponse) GetRecordsIdsAddedOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecordsIdsAdded, true
}

// SetRecordsIdsAdded sets field value
func (o *MembershipsUpdateResponse) SetRecordsIdsAdded(v []string) {
	o.RecordsIdsAdded = v
}

// GetRecordIdsMissing returns the RecordIdsMissing field value
func (o *MembershipsUpdateResponse) GetRecordIdsMissing() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RecordIdsMissing
}

// GetRecordIdsMissingOk returns a tuple with the RecordIdsMissing field value
// and a boolean to check if the value has been set.
func (o *MembershipsUpdateResponse) GetRecordIdsMissingOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecordIdsMissing, true
}

// SetRecordIdsMissing sets field value
func (o *MembershipsUpdateResponse) SetRecordIdsMissing(v []string) {
	o.RecordIdsMissing = v
}

func (o MembershipsUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipsUpdateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["recordIdsRemoved"] = o.RecordIdsRemoved
	toSerialize["recordsIdsAdded"] = o.RecordsIdsAdded
	toSerialize["recordIdsMissing"] = o.RecordIdsMissing
	return toSerialize, nil
}

func (o *MembershipsUpdateResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recordIdsRemoved",
		"recordsIdsAdded",
		"recordIdsMissing",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMembershipsUpdateResponse := _MembershipsUpdateResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMembershipsUpdateResponse)

	if err != nil {
		return err
	}

	*o = MembershipsUpdateResponse(varMembershipsUpdateResponse)

	return err
}

type NullableMembershipsUpdateResponse struct {
	value *MembershipsUpdateResponse
	isSet bool
}

func (v NullableMembershipsUpdateResponse) Get() *MembershipsUpdateResponse {
	return v.value
}

func (v *NullableMembershipsUpdateResponse) Set(val *MembershipsUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipsUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipsUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipsUpdateResponse(val *MembershipsUpdateResponse) *NullableMembershipsUpdateResponse {
	return &NullableMembershipsUpdateResponse{value: val, isSet: true}
}

func (v NullableMembershipsUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipsUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


