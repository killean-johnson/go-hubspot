/*
Lists

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lists

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicRangedDatePropertyOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicRangedDatePropertyOperation{}

// PublicRangedDatePropertyOperation struct for PublicRangedDatePropertyOperation
type PublicRangedDatePropertyOperation struct {
	IncludeObjectsWithNoValueSet bool `json:"includeObjectsWithNoValueSet"`
	UpperBound int32 `json:"upperBound"`
	RequiresTimeZoneConversion bool `json:"requiresTimeZoneConversion"`
	OperationType string `json:"operationType"`
	LowerBound int32 `json:"lowerBound"`
	Operator string `json:"operator"`
}

type _PublicRangedDatePropertyOperation PublicRangedDatePropertyOperation

// NewPublicRangedDatePropertyOperation instantiates a new PublicRangedDatePropertyOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicRangedDatePropertyOperation(includeObjectsWithNoValueSet bool, upperBound int32, requiresTimeZoneConversion bool, operationType string, lowerBound int32, operator string) *PublicRangedDatePropertyOperation {
	this := PublicRangedDatePropertyOperation{}
	this.IncludeObjectsWithNoValueSet = includeObjectsWithNoValueSet
	this.UpperBound = upperBound
	this.RequiresTimeZoneConversion = requiresTimeZoneConversion
	this.OperationType = operationType
	this.LowerBound = lowerBound
	this.Operator = operator
	return &this
}

// NewPublicRangedDatePropertyOperationWithDefaults instantiates a new PublicRangedDatePropertyOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicRangedDatePropertyOperationWithDefaults() *PublicRangedDatePropertyOperation {
	this := PublicRangedDatePropertyOperation{}
	var operationType string = "RANGED_DATE"
	this.OperationType = operationType
	return &this
}

// GetIncludeObjectsWithNoValueSet returns the IncludeObjectsWithNoValueSet field value
func (o *PublicRangedDatePropertyOperation) GetIncludeObjectsWithNoValueSet() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeObjectsWithNoValueSet
}

// GetIncludeObjectsWithNoValueSetOk returns a tuple with the IncludeObjectsWithNoValueSet field value
// and a boolean to check if the value has been set.
func (o *PublicRangedDatePropertyOperation) GetIncludeObjectsWithNoValueSetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeObjectsWithNoValueSet, true
}

// SetIncludeObjectsWithNoValueSet sets field value
func (o *PublicRangedDatePropertyOperation) SetIncludeObjectsWithNoValueSet(v bool) {
	o.IncludeObjectsWithNoValueSet = v
}

// GetUpperBound returns the UpperBound field value
func (o *PublicRangedDatePropertyOperation) GetUpperBound() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpperBound
}

// GetUpperBoundOk returns a tuple with the UpperBound field value
// and a boolean to check if the value has been set.
func (o *PublicRangedDatePropertyOperation) GetUpperBoundOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpperBound, true
}

// SetUpperBound sets field value
func (o *PublicRangedDatePropertyOperation) SetUpperBound(v int32) {
	o.UpperBound = v
}

// GetRequiresTimeZoneConversion returns the RequiresTimeZoneConversion field value
func (o *PublicRangedDatePropertyOperation) GetRequiresTimeZoneConversion() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RequiresTimeZoneConversion
}

// GetRequiresTimeZoneConversionOk returns a tuple with the RequiresTimeZoneConversion field value
// and a boolean to check if the value has been set.
func (o *PublicRangedDatePropertyOperation) GetRequiresTimeZoneConversionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequiresTimeZoneConversion, true
}

// SetRequiresTimeZoneConversion sets field value
func (o *PublicRangedDatePropertyOperation) SetRequiresTimeZoneConversion(v bool) {
	o.RequiresTimeZoneConversion = v
}

// GetOperationType returns the OperationType field value
func (o *PublicRangedDatePropertyOperation) GetOperationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *PublicRangedDatePropertyOperation) GetOperationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *PublicRangedDatePropertyOperation) SetOperationType(v string) {
	o.OperationType = v
}

// GetLowerBound returns the LowerBound field value
func (o *PublicRangedDatePropertyOperation) GetLowerBound() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LowerBound
}

// GetLowerBoundOk returns a tuple with the LowerBound field value
// and a boolean to check if the value has been set.
func (o *PublicRangedDatePropertyOperation) GetLowerBoundOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LowerBound, true
}

// SetLowerBound sets field value
func (o *PublicRangedDatePropertyOperation) SetLowerBound(v int32) {
	o.LowerBound = v
}

// GetOperator returns the Operator field value
func (o *PublicRangedDatePropertyOperation) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *PublicRangedDatePropertyOperation) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *PublicRangedDatePropertyOperation) SetOperator(v string) {
	o.Operator = v
}

func (o PublicRangedDatePropertyOperation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicRangedDatePropertyOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["includeObjectsWithNoValueSet"] = o.IncludeObjectsWithNoValueSet
	toSerialize["upperBound"] = o.UpperBound
	toSerialize["requiresTimeZoneConversion"] = o.RequiresTimeZoneConversion
	toSerialize["operationType"] = o.OperationType
	toSerialize["lowerBound"] = o.LowerBound
	toSerialize["operator"] = o.Operator
	return toSerialize, nil
}

func (o *PublicRangedDatePropertyOperation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"includeObjectsWithNoValueSet",
		"upperBound",
		"requiresTimeZoneConversion",
		"operationType",
		"lowerBound",
		"operator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicRangedDatePropertyOperation := _PublicRangedDatePropertyOperation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicRangedDatePropertyOperation)

	if err != nil {
		return err
	}

	*o = PublicRangedDatePropertyOperation(varPublicRangedDatePropertyOperation)

	return err
}

type NullablePublicRangedDatePropertyOperation struct {
	value *PublicRangedDatePropertyOperation
	isSet bool
}

func (v NullablePublicRangedDatePropertyOperation) Get() *PublicRangedDatePropertyOperation {
	return v.value
}

func (v *NullablePublicRangedDatePropertyOperation) Set(val *PublicRangedDatePropertyOperation) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicRangedDatePropertyOperation) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicRangedDatePropertyOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicRangedDatePropertyOperation(val *PublicRangedDatePropertyOperation) *NullablePublicRangedDatePropertyOperation {
	return &NullablePublicRangedDatePropertyOperation{value: val, isSet: true}
}

func (v NullablePublicRangedDatePropertyOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicRangedDatePropertyOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


