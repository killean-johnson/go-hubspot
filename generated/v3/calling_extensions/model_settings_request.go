/*
CRM Calling Extensions

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calling_extensions

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettingsRequest{}

// SettingsRequest struct for SettingsRequest
type SettingsRequest struct {
	// When true, users will be able to click to dial from custom objects.
	SupportsCustomObjects *bool `json:"supportsCustomObjects,omitempty"`
	// When false, this indicates that your calling app does not use the anchored calling remote within the HubSpot app. 
	UsesRemote *bool `json:"usesRemote,omitempty"`
	// When true, this indicates that your calling app is ready for production. Users will be able to select your calling app as their provider and can then click to dial within HubSpot.
	IsReady *bool `json:"isReady,omitempty"`
	// The name of your calling service to display to users.
	Name string `json:"name"`
	// The target width of the iframe that will contain your phone/calling UI.
	Width *int32 `json:"width,omitempty"`
	// When false, this indicates that your calling app does not require the use of the separate calling window to hold the call connection. 
	UsesCallingWindow *bool `json:"usesCallingWindow,omitempty"`
	// When true, this indicates that your calling app supports inbound calling within HubSpot.
	SupportsInboundCalling *bool `json:"supportsInboundCalling,omitempty"`
	// The URL to your phone/calling UI, built with the [Calling SDK](#).
	Url string `json:"url"`
	// The target height of the iframe that will contain your phone/calling UI.
	Height *int32 `json:"height,omitempty"`
}

type _SettingsRequest SettingsRequest

// NewSettingsRequest instantiates a new SettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettingsRequest(name string, url string) *SettingsRequest {
	this := SettingsRequest{}
	this.Name = name
	this.Url = url
	return &this
}

// NewSettingsRequestWithDefaults instantiates a new SettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettingsRequestWithDefaults() *SettingsRequest {
	this := SettingsRequest{}
	return &this
}

// GetSupportsCustomObjects returns the SupportsCustomObjects field value if set, zero value otherwise.
func (o *SettingsRequest) GetSupportsCustomObjects() bool {
	if o == nil || IsNil(o.SupportsCustomObjects) {
		var ret bool
		return ret
	}
	return *o.SupportsCustomObjects
}

// GetSupportsCustomObjectsOk returns a tuple with the SupportsCustomObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsRequest) GetSupportsCustomObjectsOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsCustomObjects) {
		return nil, false
	}
	return o.SupportsCustomObjects, true
}

// HasSupportsCustomObjects returns a boolean if a field has been set.
func (o *SettingsRequest) HasSupportsCustomObjects() bool {
	if o != nil && !IsNil(o.SupportsCustomObjects) {
		return true
	}

	return false
}

// SetSupportsCustomObjects gets a reference to the given bool and assigns it to the SupportsCustomObjects field.
func (o *SettingsRequest) SetSupportsCustomObjects(v bool) {
	o.SupportsCustomObjects = &v
}

// GetUsesRemote returns the UsesRemote field value if set, zero value otherwise.
func (o *SettingsRequest) GetUsesRemote() bool {
	if o == nil || IsNil(o.UsesRemote) {
		var ret bool
		return ret
	}
	return *o.UsesRemote
}

// GetUsesRemoteOk returns a tuple with the UsesRemote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsRequest) GetUsesRemoteOk() (*bool, bool) {
	if o == nil || IsNil(o.UsesRemote) {
		return nil, false
	}
	return o.UsesRemote, true
}

// HasUsesRemote returns a boolean if a field has been set.
func (o *SettingsRequest) HasUsesRemote() bool {
	if o != nil && !IsNil(o.UsesRemote) {
		return true
	}

	return false
}

// SetUsesRemote gets a reference to the given bool and assigns it to the UsesRemote field.
func (o *SettingsRequest) SetUsesRemote(v bool) {
	o.UsesRemote = &v
}

// GetIsReady returns the IsReady field value if set, zero value otherwise.
func (o *SettingsRequest) GetIsReady() bool {
	if o == nil || IsNil(o.IsReady) {
		var ret bool
		return ret
	}
	return *o.IsReady
}

// GetIsReadyOk returns a tuple with the IsReady field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsRequest) GetIsReadyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReady) {
		return nil, false
	}
	return o.IsReady, true
}

// HasIsReady returns a boolean if a field has been set.
func (o *SettingsRequest) HasIsReady() bool {
	if o != nil && !IsNil(o.IsReady) {
		return true
	}

	return false
}

// SetIsReady gets a reference to the given bool and assigns it to the IsReady field.
func (o *SettingsRequest) SetIsReady(v bool) {
	o.IsReady = &v
}

// GetName returns the Name field value
func (o *SettingsRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SettingsRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SettingsRequest) SetName(v string) {
	o.Name = v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *SettingsRequest) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsRequest) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *SettingsRequest) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *SettingsRequest) SetWidth(v int32) {
	o.Width = &v
}

// GetUsesCallingWindow returns the UsesCallingWindow field value if set, zero value otherwise.
func (o *SettingsRequest) GetUsesCallingWindow() bool {
	if o == nil || IsNil(o.UsesCallingWindow) {
		var ret bool
		return ret
	}
	return *o.UsesCallingWindow
}

// GetUsesCallingWindowOk returns a tuple with the UsesCallingWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsRequest) GetUsesCallingWindowOk() (*bool, bool) {
	if o == nil || IsNil(o.UsesCallingWindow) {
		return nil, false
	}
	return o.UsesCallingWindow, true
}

// HasUsesCallingWindow returns a boolean if a field has been set.
func (o *SettingsRequest) HasUsesCallingWindow() bool {
	if o != nil && !IsNil(o.UsesCallingWindow) {
		return true
	}

	return false
}

// SetUsesCallingWindow gets a reference to the given bool and assigns it to the UsesCallingWindow field.
func (o *SettingsRequest) SetUsesCallingWindow(v bool) {
	o.UsesCallingWindow = &v
}

// GetSupportsInboundCalling returns the SupportsInboundCalling field value if set, zero value otherwise.
func (o *SettingsRequest) GetSupportsInboundCalling() bool {
	if o == nil || IsNil(o.SupportsInboundCalling) {
		var ret bool
		return ret
	}
	return *o.SupportsInboundCalling
}

// GetSupportsInboundCallingOk returns a tuple with the SupportsInboundCalling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsRequest) GetSupportsInboundCallingOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsInboundCalling) {
		return nil, false
	}
	return o.SupportsInboundCalling, true
}

// HasSupportsInboundCalling returns a boolean if a field has been set.
func (o *SettingsRequest) HasSupportsInboundCalling() bool {
	if o != nil && !IsNil(o.SupportsInboundCalling) {
		return true
	}

	return false
}

// SetSupportsInboundCalling gets a reference to the given bool and assigns it to the SupportsInboundCalling field.
func (o *SettingsRequest) SetSupportsInboundCalling(v bool) {
	o.SupportsInboundCalling = &v
}

// GetUrl returns the Url field value
func (o *SettingsRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SettingsRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SettingsRequest) SetUrl(v string) {
	o.Url = v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *SettingsRequest) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsRequest) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *SettingsRequest) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *SettingsRequest) SetHeight(v int32) {
	o.Height = &v
}

func (o SettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SupportsCustomObjects) {
		toSerialize["supportsCustomObjects"] = o.SupportsCustomObjects
	}
	if !IsNil(o.UsesRemote) {
		toSerialize["usesRemote"] = o.UsesRemote
	}
	if !IsNil(o.IsReady) {
		toSerialize["isReady"] = o.IsReady
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.UsesCallingWindow) {
		toSerialize["usesCallingWindow"] = o.UsesCallingWindow
	}
	if !IsNil(o.SupportsInboundCalling) {
		toSerialize["supportsInboundCalling"] = o.SupportsInboundCalling
	}
	toSerialize["url"] = o.Url
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	return toSerialize, nil
}

func (o *SettingsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSettingsRequest := _SettingsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSettingsRequest)

	if err != nil {
		return err
	}

	*o = SettingsRequest(varSettingsRequest)

	return err
}

type NullableSettingsRequest struct {
	value *SettingsRequest
	isSet bool
}

func (v NullableSettingsRequest) Get() *SettingsRequest {
	return v.value
}

func (v *NullableSettingsRequest) Set(val *SettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettingsRequest(val *SettingsRequest) *NullableSettingsRequest {
	return &NullableSettingsRequest{value: val, isSet: true}
}

func (v NullableSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


