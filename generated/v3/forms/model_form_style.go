/*
Forms

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forms

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FormStyle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormStyle{}

// FormStyle Styling options for the form
type FormStyle struct {
	// 
	LabelTextSize string `json:"labelTextSize"`
	// 
	LegalConsentTextColor string `json:"legalConsentTextColor"`
	// 
	FontFamily string `json:"fontFamily"`
	// 
	LegalConsentTextSize string `json:"legalConsentTextSize"`
	// 
	BackgroundWidth string `json:"backgroundWidth"`
	// 
	HelpTextSize string `json:"helpTextSize"`
	// 
	SubmitFontColor string `json:"submitFontColor"`
	// 
	LabelTextColor string `json:"labelTextColor"`
	// 
	SubmitAlignment string `json:"submitAlignment"`
	// 
	SubmitSize string `json:"submitSize"`
	// 
	HelpTextColor string `json:"helpTextColor"`
	// 
	SubmitColor string `json:"submitColor"`
}

type _FormStyle FormStyle

// NewFormStyle instantiates a new FormStyle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormStyle(labelTextSize string, legalConsentTextColor string, fontFamily string, legalConsentTextSize string, backgroundWidth string, helpTextSize string, submitFontColor string, labelTextColor string, submitAlignment string, submitSize string, helpTextColor string, submitColor string) *FormStyle {
	this := FormStyle{}
	this.LabelTextSize = labelTextSize
	this.LegalConsentTextColor = legalConsentTextColor
	this.FontFamily = fontFamily
	this.LegalConsentTextSize = legalConsentTextSize
	this.BackgroundWidth = backgroundWidth
	this.HelpTextSize = helpTextSize
	this.SubmitFontColor = submitFontColor
	this.LabelTextColor = labelTextColor
	this.SubmitAlignment = submitAlignment
	this.SubmitSize = submitSize
	this.HelpTextColor = helpTextColor
	this.SubmitColor = submitColor
	return &this
}

// NewFormStyleWithDefaults instantiates a new FormStyle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormStyleWithDefaults() *FormStyle {
	this := FormStyle{}
	return &this
}

// GetLabelTextSize returns the LabelTextSize field value
func (o *FormStyle) GetLabelTextSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LabelTextSize
}

// GetLabelTextSizeOk returns a tuple with the LabelTextSize field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetLabelTextSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelTextSize, true
}

// SetLabelTextSize sets field value
func (o *FormStyle) SetLabelTextSize(v string) {
	o.LabelTextSize = v
}

// GetLegalConsentTextColor returns the LegalConsentTextColor field value
func (o *FormStyle) GetLegalConsentTextColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LegalConsentTextColor
}

// GetLegalConsentTextColorOk returns a tuple with the LegalConsentTextColor field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetLegalConsentTextColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LegalConsentTextColor, true
}

// SetLegalConsentTextColor sets field value
func (o *FormStyle) SetLegalConsentTextColor(v string) {
	o.LegalConsentTextColor = v
}

// GetFontFamily returns the FontFamily field value
func (o *FormStyle) GetFontFamily() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FontFamily
}

// GetFontFamilyOk returns a tuple with the FontFamily field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetFontFamilyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FontFamily, true
}

// SetFontFamily sets field value
func (o *FormStyle) SetFontFamily(v string) {
	o.FontFamily = v
}

// GetLegalConsentTextSize returns the LegalConsentTextSize field value
func (o *FormStyle) GetLegalConsentTextSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LegalConsentTextSize
}

// GetLegalConsentTextSizeOk returns a tuple with the LegalConsentTextSize field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetLegalConsentTextSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LegalConsentTextSize, true
}

// SetLegalConsentTextSize sets field value
func (o *FormStyle) SetLegalConsentTextSize(v string) {
	o.LegalConsentTextSize = v
}

// GetBackgroundWidth returns the BackgroundWidth field value
func (o *FormStyle) GetBackgroundWidth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackgroundWidth
}

// GetBackgroundWidthOk returns a tuple with the BackgroundWidth field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetBackgroundWidthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackgroundWidth, true
}

// SetBackgroundWidth sets field value
func (o *FormStyle) SetBackgroundWidth(v string) {
	o.BackgroundWidth = v
}

// GetHelpTextSize returns the HelpTextSize field value
func (o *FormStyle) GetHelpTextSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HelpTextSize
}

// GetHelpTextSizeOk returns a tuple with the HelpTextSize field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetHelpTextSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HelpTextSize, true
}

// SetHelpTextSize sets field value
func (o *FormStyle) SetHelpTextSize(v string) {
	o.HelpTextSize = v
}

// GetSubmitFontColor returns the SubmitFontColor field value
func (o *FormStyle) GetSubmitFontColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubmitFontColor
}

// GetSubmitFontColorOk returns a tuple with the SubmitFontColor field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetSubmitFontColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubmitFontColor, true
}

// SetSubmitFontColor sets field value
func (o *FormStyle) SetSubmitFontColor(v string) {
	o.SubmitFontColor = v
}

// GetLabelTextColor returns the LabelTextColor field value
func (o *FormStyle) GetLabelTextColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LabelTextColor
}

// GetLabelTextColorOk returns a tuple with the LabelTextColor field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetLabelTextColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelTextColor, true
}

// SetLabelTextColor sets field value
func (o *FormStyle) SetLabelTextColor(v string) {
	o.LabelTextColor = v
}

// GetSubmitAlignment returns the SubmitAlignment field value
func (o *FormStyle) GetSubmitAlignment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubmitAlignment
}

// GetSubmitAlignmentOk returns a tuple with the SubmitAlignment field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetSubmitAlignmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubmitAlignment, true
}

// SetSubmitAlignment sets field value
func (o *FormStyle) SetSubmitAlignment(v string) {
	o.SubmitAlignment = v
}

// GetSubmitSize returns the SubmitSize field value
func (o *FormStyle) GetSubmitSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubmitSize
}

// GetSubmitSizeOk returns a tuple with the SubmitSize field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetSubmitSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubmitSize, true
}

// SetSubmitSize sets field value
func (o *FormStyle) SetSubmitSize(v string) {
	o.SubmitSize = v
}

// GetHelpTextColor returns the HelpTextColor field value
func (o *FormStyle) GetHelpTextColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HelpTextColor
}

// GetHelpTextColorOk returns a tuple with the HelpTextColor field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetHelpTextColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HelpTextColor, true
}

// SetHelpTextColor sets field value
func (o *FormStyle) SetHelpTextColor(v string) {
	o.HelpTextColor = v
}

// GetSubmitColor returns the SubmitColor field value
func (o *FormStyle) GetSubmitColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubmitColor
}

// GetSubmitColorOk returns a tuple with the SubmitColor field value
// and a boolean to check if the value has been set.
func (o *FormStyle) GetSubmitColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubmitColor, true
}

// SetSubmitColor sets field value
func (o *FormStyle) SetSubmitColor(v string) {
	o.SubmitColor = v
}

func (o FormStyle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormStyle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["labelTextSize"] = o.LabelTextSize
	toSerialize["legalConsentTextColor"] = o.LegalConsentTextColor
	toSerialize["fontFamily"] = o.FontFamily
	toSerialize["legalConsentTextSize"] = o.LegalConsentTextSize
	toSerialize["backgroundWidth"] = o.BackgroundWidth
	toSerialize["helpTextSize"] = o.HelpTextSize
	toSerialize["submitFontColor"] = o.SubmitFontColor
	toSerialize["labelTextColor"] = o.LabelTextColor
	toSerialize["submitAlignment"] = o.SubmitAlignment
	toSerialize["submitSize"] = o.SubmitSize
	toSerialize["helpTextColor"] = o.HelpTextColor
	toSerialize["submitColor"] = o.SubmitColor
	return toSerialize, nil
}

func (o *FormStyle) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"labelTextSize",
		"legalConsentTextColor",
		"fontFamily",
		"legalConsentTextSize",
		"backgroundWidth",
		"helpTextSize",
		"submitFontColor",
		"labelTextColor",
		"submitAlignment",
		"submitSize",
		"helpTextColor",
		"submitColor",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFormStyle := _FormStyle{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFormStyle)

	if err != nil {
		return err
	}

	*o = FormStyle(varFormStyle)

	return err
}

type NullableFormStyle struct {
	value *FormStyle
	isSet bool
}

func (v NullableFormStyle) Get() *FormStyle {
	return v.value
}

func (v *NullableFormStyle) Set(val *FormStyle) {
	v.value = val
	v.isSet = true
}

func (v NullableFormStyle) IsSet() bool {
	return v.isSet
}

func (v *NullableFormStyle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormStyle(val *FormStyle) *NullableFormStyle {
	return &NullableFormStyle{value: val, isSet: true}
}

func (v NullableFormStyle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormStyle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


