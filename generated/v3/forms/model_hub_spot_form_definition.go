/*
Forms

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forms

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the HubSpotFormDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HubSpotFormDefinition{}

// HubSpotFormDefinition struct for HubSpotFormDefinition
type HubSpotFormDefinition struct {
	FormType string `json:"formType"`
	Id string `json:"id"`
	Name string `json:"name"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
	Archived bool `json:"archived"`
	ArchivedAt *time.Time `json:"archivedAt,omitempty"`
	FieldGroups []FieldGroup `json:"fieldGroups"`
	Configuration HubSpotFormConfiguration `json:"configuration"`
	DisplayOptions FormDisplayOptions `json:"displayOptions"`
	LegalConsentOptions HubSpotFormDefinitionAllOfLegalConsentOptions `json:"legalConsentOptions"`
}

type _HubSpotFormDefinition HubSpotFormDefinition

// NewHubSpotFormDefinition instantiates a new HubSpotFormDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHubSpotFormDefinition(formType string, id string, name string, createdAt time.Time, updatedAt time.Time, archived bool, fieldGroups []FieldGroup, configuration HubSpotFormConfiguration, displayOptions FormDisplayOptions, legalConsentOptions HubSpotFormDefinitionAllOfLegalConsentOptions) *HubSpotFormDefinition {
	this := HubSpotFormDefinition{}
	this.FormType = formType
	this.Id = id
	this.Name = name
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Archived = archived
	this.FieldGroups = fieldGroups
	this.Configuration = configuration
	this.DisplayOptions = displayOptions
	this.LegalConsentOptions = legalConsentOptions
	return &this
}

// NewHubSpotFormDefinitionWithDefaults instantiates a new HubSpotFormDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHubSpotFormDefinitionWithDefaults() *HubSpotFormDefinition {
	this := HubSpotFormDefinition{}
	var formType string = "hubspot"
	this.FormType = formType
	return &this
}

// GetFormType returns the FormType field value
func (o *HubSpotFormDefinition) GetFormType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FormType
}

// GetFormTypeOk returns a tuple with the FormType field value
// and a boolean to check if the value has been set.
func (o *HubSpotFormDefinition) GetFormTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FormType, true
}

// SetFormType sets field value
func (o *HubSpotFormDefinition) SetFormType(v string) {
	o.FormType = v
}

// GetId returns the Id field value
func (o *HubSpotFormDefinition) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *HubSpotFormDefinition) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *HubSpotFormDefinition) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *HubSpotFormDefinition) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *HubSpotFormDefinition) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *HubSpotFormDefinition) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *HubSpotFormDefinition) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *HubSpotFormDefinition) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *HubSpotFormDefinition) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *HubSpotFormDefinition) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *HubSpotFormDefinition) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *HubSpotFormDefinition) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetArchived returns the Archived field value
func (o *HubSpotFormDefinition) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *HubSpotFormDefinition) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *HubSpotFormDefinition) SetArchived(v bool) {
	o.Archived = v
}

// GetArchivedAt returns the ArchivedAt field value if set, zero value otherwise.
func (o *HubSpotFormDefinition) GetArchivedAt() time.Time {
	if o == nil || IsNil(o.ArchivedAt) {
		var ret time.Time
		return ret
	}
	return *o.ArchivedAt
}

// GetArchivedAtOk returns a tuple with the ArchivedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HubSpotFormDefinition) GetArchivedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ArchivedAt) {
		return nil, false
	}
	return o.ArchivedAt, true
}

// HasArchivedAt returns a boolean if a field has been set.
func (o *HubSpotFormDefinition) HasArchivedAt() bool {
	if o != nil && !IsNil(o.ArchivedAt) {
		return true
	}

	return false
}

// SetArchivedAt gets a reference to the given time.Time and assigns it to the ArchivedAt field.
func (o *HubSpotFormDefinition) SetArchivedAt(v time.Time) {
	o.ArchivedAt = &v
}

// GetFieldGroups returns the FieldGroups field value
func (o *HubSpotFormDefinition) GetFieldGroups() []FieldGroup {
	if o == nil {
		var ret []FieldGroup
		return ret
	}

	return o.FieldGroups
}

// GetFieldGroupsOk returns a tuple with the FieldGroups field value
// and a boolean to check if the value has been set.
func (o *HubSpotFormDefinition) GetFieldGroupsOk() ([]FieldGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.FieldGroups, true
}

// SetFieldGroups sets field value
func (o *HubSpotFormDefinition) SetFieldGroups(v []FieldGroup) {
	o.FieldGroups = v
}

// GetConfiguration returns the Configuration field value
func (o *HubSpotFormDefinition) GetConfiguration() HubSpotFormConfiguration {
	if o == nil {
		var ret HubSpotFormConfiguration
		return ret
	}

	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value
// and a boolean to check if the value has been set.
func (o *HubSpotFormDefinition) GetConfigurationOk() (*HubSpotFormConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Configuration, true
}

// SetConfiguration sets field value
func (o *HubSpotFormDefinition) SetConfiguration(v HubSpotFormConfiguration) {
	o.Configuration = v
}

// GetDisplayOptions returns the DisplayOptions field value
func (o *HubSpotFormDefinition) GetDisplayOptions() FormDisplayOptions {
	if o == nil {
		var ret FormDisplayOptions
		return ret
	}

	return o.DisplayOptions
}

// GetDisplayOptionsOk returns a tuple with the DisplayOptions field value
// and a boolean to check if the value has been set.
func (o *HubSpotFormDefinition) GetDisplayOptionsOk() (*FormDisplayOptions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayOptions, true
}

// SetDisplayOptions sets field value
func (o *HubSpotFormDefinition) SetDisplayOptions(v FormDisplayOptions) {
	o.DisplayOptions = v
}

// GetLegalConsentOptions returns the LegalConsentOptions field value
func (o *HubSpotFormDefinition) GetLegalConsentOptions() HubSpotFormDefinitionAllOfLegalConsentOptions {
	if o == nil {
		var ret HubSpotFormDefinitionAllOfLegalConsentOptions
		return ret
	}

	return o.LegalConsentOptions
}

// GetLegalConsentOptionsOk returns a tuple with the LegalConsentOptions field value
// and a boolean to check if the value has been set.
func (o *HubSpotFormDefinition) GetLegalConsentOptionsOk() (*HubSpotFormDefinitionAllOfLegalConsentOptions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LegalConsentOptions, true
}

// SetLegalConsentOptions sets field value
func (o *HubSpotFormDefinition) SetLegalConsentOptions(v HubSpotFormDefinitionAllOfLegalConsentOptions) {
	o.LegalConsentOptions = v
}

func (o HubSpotFormDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HubSpotFormDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["formType"] = o.FormType
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["archived"] = o.Archived
	if !IsNil(o.ArchivedAt) {
		toSerialize["archivedAt"] = o.ArchivedAt
	}
	toSerialize["fieldGroups"] = o.FieldGroups
	toSerialize["configuration"] = o.Configuration
	toSerialize["displayOptions"] = o.DisplayOptions
	toSerialize["legalConsentOptions"] = o.LegalConsentOptions
	return toSerialize, nil
}

func (o *HubSpotFormDefinition) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"formType",
		"id",
		"name",
		"createdAt",
		"updatedAt",
		"archived",
		"fieldGroups",
		"configuration",
		"displayOptions",
		"legalConsentOptions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHubSpotFormDefinition := _HubSpotFormDefinition{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHubSpotFormDefinition)

	if err != nil {
		return err
	}

	*o = HubSpotFormDefinition(varHubSpotFormDefinition)

	return err
}

type NullableHubSpotFormDefinition struct {
	value *HubSpotFormDefinition
	isSet bool
}

func (v NullableHubSpotFormDefinition) Get() *HubSpotFormDefinition {
	return v.value
}

func (v *NullableHubSpotFormDefinition) Set(val *HubSpotFormDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableHubSpotFormDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableHubSpotFormDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHubSpotFormDefinition(val *HubSpotFormDefinition) *NullableHubSpotFormDefinition {
	return &NullableHubSpotFormDefinition{value: val, isSet: true}
}

func (v NullableHubSpotFormDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHubSpotFormDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


