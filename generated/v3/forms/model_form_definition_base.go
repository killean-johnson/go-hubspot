/*
Forms

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forms

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// FormDefinitionBase - struct for FormDefinitionBase
type FormDefinitionBase struct {
	HubSpotFormDefinition *HubSpotFormDefinition
}

// HubSpotFormDefinitionAsFormDefinitionBase is a convenience function that returns HubSpotFormDefinition wrapped in FormDefinitionBase
func HubSpotFormDefinitionAsFormDefinitionBase(v *HubSpotFormDefinition) FormDefinitionBase {
	return FormDefinitionBase{
		HubSpotFormDefinition: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *FormDefinitionBase) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into HubSpotFormDefinition
	err = newStrictDecoder(data).Decode(&dst.HubSpotFormDefinition)
	if err == nil {
		jsonHubSpotFormDefinition, _ := json.Marshal(dst.HubSpotFormDefinition)
		if string(jsonHubSpotFormDefinition) == "{}" { // empty struct
			dst.HubSpotFormDefinition = nil
		} else {
			if err = validator.Validate(dst.HubSpotFormDefinition); err != nil {
				dst.HubSpotFormDefinition = nil
			} else {
				match++
			}
		}
	} else {
		dst.HubSpotFormDefinition = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.HubSpotFormDefinition = nil

		return fmt.Errorf("data matches more than one schema in oneOf(FormDefinitionBase)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(FormDefinitionBase)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src FormDefinitionBase) MarshalJSON() ([]byte, error) {
	if src.HubSpotFormDefinition != nil {
		return json.Marshal(&src.HubSpotFormDefinition)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *FormDefinitionBase) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.HubSpotFormDefinition != nil {
		return obj.HubSpotFormDefinition
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj FormDefinitionBase) GetActualInstanceValue() (interface{}) {
	if obj.HubSpotFormDefinition != nil {
		return *obj.HubSpotFormDefinition
	}

	// all schemas are nil
	return nil
}

type NullableFormDefinitionBase struct {
	value *FormDefinitionBase
	isSet bool
}

func (v NullableFormDefinitionBase) Get() *FormDefinitionBase {
	return v.value
}

func (v *NullableFormDefinitionBase) Set(val *FormDefinitionBase) {
	v.value = val
	v.isSet = true
}

func (v NullableFormDefinitionBase) IsSet() bool {
	return v.isSet
}

func (v *NullableFormDefinitionBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormDefinitionBase(val *FormDefinitionBase) *NullableFormDefinitionBase {
	return &NullableFormDefinitionBase{value: val, isSet: true}
}

func (v NullableFormDefinitionBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormDefinitionBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


