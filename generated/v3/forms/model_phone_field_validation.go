/*
Forms

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forms

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PhoneFieldValidation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhoneFieldValidation{}

// PhoneFieldValidation Describes how a phone number should be validated.
type PhoneFieldValidation struct {
	// 
	MinAllowedDigits int32 `json:"minAllowedDigits"`
	// 
	MaxAllowedDigits int32 `json:"maxAllowedDigits"`
}

type _PhoneFieldValidation PhoneFieldValidation

// NewPhoneFieldValidation instantiates a new PhoneFieldValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneFieldValidation(minAllowedDigits int32, maxAllowedDigits int32) *PhoneFieldValidation {
	this := PhoneFieldValidation{}
	this.MinAllowedDigits = minAllowedDigits
	this.MaxAllowedDigits = maxAllowedDigits
	return &this
}

// NewPhoneFieldValidationWithDefaults instantiates a new PhoneFieldValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneFieldValidationWithDefaults() *PhoneFieldValidation {
	this := PhoneFieldValidation{}
	return &this
}

// GetMinAllowedDigits returns the MinAllowedDigits field value
func (o *PhoneFieldValidation) GetMinAllowedDigits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinAllowedDigits
}

// GetMinAllowedDigitsOk returns a tuple with the MinAllowedDigits field value
// and a boolean to check if the value has been set.
func (o *PhoneFieldValidation) GetMinAllowedDigitsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinAllowedDigits, true
}

// SetMinAllowedDigits sets field value
func (o *PhoneFieldValidation) SetMinAllowedDigits(v int32) {
	o.MinAllowedDigits = v
}

// GetMaxAllowedDigits returns the MaxAllowedDigits field value
func (o *PhoneFieldValidation) GetMaxAllowedDigits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxAllowedDigits
}

// GetMaxAllowedDigitsOk returns a tuple with the MaxAllowedDigits field value
// and a boolean to check if the value has been set.
func (o *PhoneFieldValidation) GetMaxAllowedDigitsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxAllowedDigits, true
}

// SetMaxAllowedDigits sets field value
func (o *PhoneFieldValidation) SetMaxAllowedDigits(v int32) {
	o.MaxAllowedDigits = v
}

func (o PhoneFieldValidation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhoneFieldValidation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["minAllowedDigits"] = o.MinAllowedDigits
	toSerialize["maxAllowedDigits"] = o.MaxAllowedDigits
	return toSerialize, nil
}

func (o *PhoneFieldValidation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"minAllowedDigits",
		"maxAllowedDigits",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPhoneFieldValidation := _PhoneFieldValidation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPhoneFieldValidation)

	if err != nil {
		return err
	}

	*o = PhoneFieldValidation(varPhoneFieldValidation)

	return err
}

type NullablePhoneFieldValidation struct {
	value *PhoneFieldValidation
	isSet bool
}

func (v NullablePhoneFieldValidation) Get() *PhoneFieldValidation {
	return v.value
}

func (v *NullablePhoneFieldValidation) Set(val *PhoneFieldValidation) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneFieldValidation) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneFieldValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneFieldValidation(val *PhoneFieldValidation) *NullablePhoneFieldValidation {
	return &NullablePhoneFieldValidation{value: val, isSet: true}
}

func (v NullablePhoneFieldValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneFieldValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


