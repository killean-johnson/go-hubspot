/*
Forms

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forms

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EmailFieldValidation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailFieldValidation{}

// EmailFieldValidation Describes how an email address should be validated.
type EmailFieldValidation struct {
	// Whether to block the free email providers.
	UseDefaultBlockList bool `json:"useDefaultBlockList"`
	// A list of email domains to block.
	BlockedEmailDomains []string `json:"blockedEmailDomains"`
}

type _EmailFieldValidation EmailFieldValidation

// NewEmailFieldValidation instantiates a new EmailFieldValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailFieldValidation(useDefaultBlockList bool, blockedEmailDomains []string) *EmailFieldValidation {
	this := EmailFieldValidation{}
	this.UseDefaultBlockList = useDefaultBlockList
	this.BlockedEmailDomains = blockedEmailDomains
	return &this
}

// NewEmailFieldValidationWithDefaults instantiates a new EmailFieldValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailFieldValidationWithDefaults() *EmailFieldValidation {
	this := EmailFieldValidation{}
	return &this
}

// GetUseDefaultBlockList returns the UseDefaultBlockList field value
func (o *EmailFieldValidation) GetUseDefaultBlockList() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseDefaultBlockList
}

// GetUseDefaultBlockListOk returns a tuple with the UseDefaultBlockList field value
// and a boolean to check if the value has been set.
func (o *EmailFieldValidation) GetUseDefaultBlockListOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UseDefaultBlockList, true
}

// SetUseDefaultBlockList sets field value
func (o *EmailFieldValidation) SetUseDefaultBlockList(v bool) {
	o.UseDefaultBlockList = v
}

// GetBlockedEmailDomains returns the BlockedEmailDomains field value
func (o *EmailFieldValidation) GetBlockedEmailDomains() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BlockedEmailDomains
}

// GetBlockedEmailDomainsOk returns a tuple with the BlockedEmailDomains field value
// and a boolean to check if the value has been set.
func (o *EmailFieldValidation) GetBlockedEmailDomainsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockedEmailDomains, true
}

// SetBlockedEmailDomains sets field value
func (o *EmailFieldValidation) SetBlockedEmailDomains(v []string) {
	o.BlockedEmailDomains = v
}

func (o EmailFieldValidation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailFieldValidation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["useDefaultBlockList"] = o.UseDefaultBlockList
	toSerialize["blockedEmailDomains"] = o.BlockedEmailDomains
	return toSerialize, nil
}

func (o *EmailFieldValidation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"useDefaultBlockList",
		"blockedEmailDomains",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEmailFieldValidation := _EmailFieldValidation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEmailFieldValidation)

	if err != nil {
		return err
	}

	*o = EmailFieldValidation(varEmailFieldValidation)

	return err
}

type NullableEmailFieldValidation struct {
	value *EmailFieldValidation
	isSet bool
}

func (v NullableEmailFieldValidation) Get() *EmailFieldValidation {
	return v.value
}

func (v *NullableEmailFieldValidation) Set(val *EmailFieldValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailFieldValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailFieldValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailFieldValidation(val *EmailFieldValidation) *NullableEmailFieldValidation {
	return &NullableEmailFieldValidation{value: val, isSet: true}
}

func (v NullableEmailFieldValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailFieldValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


