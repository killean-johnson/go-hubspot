/*
Conversations Inbox & Messages

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conversations_inbox_&amp;_messages

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicRecipientEgg type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicRecipientEgg{}

// PublicRecipientEgg struct for PublicRecipientEgg
type PublicRecipientEgg struct {
	DeliveryIdentifiers []PublicDeliveryIdentifier `json:"deliveryIdentifiers"`
	ActorId *string `json:"actorId,omitempty"`
	Name *string `json:"name,omitempty"`
	DeliveryIdentifier *PublicDeliveryIdentifier `json:"deliveryIdentifier,omitempty"`
	RecipientField *string `json:"recipientField,omitempty"`
}

type _PublicRecipientEgg PublicRecipientEgg

// NewPublicRecipientEgg instantiates a new PublicRecipientEgg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicRecipientEgg(deliveryIdentifiers []PublicDeliveryIdentifier) *PublicRecipientEgg {
	this := PublicRecipientEgg{}
	this.DeliveryIdentifiers = deliveryIdentifiers
	return &this
}

// NewPublicRecipientEggWithDefaults instantiates a new PublicRecipientEgg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicRecipientEggWithDefaults() *PublicRecipientEgg {
	this := PublicRecipientEgg{}
	return &this
}

// GetDeliveryIdentifiers returns the DeliveryIdentifiers field value
func (o *PublicRecipientEgg) GetDeliveryIdentifiers() []PublicDeliveryIdentifier {
	if o == nil {
		var ret []PublicDeliveryIdentifier
		return ret
	}

	return o.DeliveryIdentifiers
}

// GetDeliveryIdentifiersOk returns a tuple with the DeliveryIdentifiers field value
// and a boolean to check if the value has been set.
func (o *PublicRecipientEgg) GetDeliveryIdentifiersOk() ([]PublicDeliveryIdentifier, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryIdentifiers, true
}

// SetDeliveryIdentifiers sets field value
func (o *PublicRecipientEgg) SetDeliveryIdentifiers(v []PublicDeliveryIdentifier) {
	o.DeliveryIdentifiers = v
}

// GetActorId returns the ActorId field value if set, zero value otherwise.
func (o *PublicRecipientEgg) GetActorId() string {
	if o == nil || IsNil(o.ActorId) {
		var ret string
		return ret
	}
	return *o.ActorId
}

// GetActorIdOk returns a tuple with the ActorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicRecipientEgg) GetActorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ActorId) {
		return nil, false
	}
	return o.ActorId, true
}

// HasActorId returns a boolean if a field has been set.
func (o *PublicRecipientEgg) HasActorId() bool {
	if o != nil && !IsNil(o.ActorId) {
		return true
	}

	return false
}

// SetActorId gets a reference to the given string and assigns it to the ActorId field.
func (o *PublicRecipientEgg) SetActorId(v string) {
	o.ActorId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PublicRecipientEgg) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicRecipientEgg) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PublicRecipientEgg) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PublicRecipientEgg) SetName(v string) {
	o.Name = &v
}

// GetDeliveryIdentifier returns the DeliveryIdentifier field value if set, zero value otherwise.
func (o *PublicRecipientEgg) GetDeliveryIdentifier() PublicDeliveryIdentifier {
	if o == nil || IsNil(o.DeliveryIdentifier) {
		var ret PublicDeliveryIdentifier
		return ret
	}
	return *o.DeliveryIdentifier
}

// GetDeliveryIdentifierOk returns a tuple with the DeliveryIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicRecipientEgg) GetDeliveryIdentifierOk() (*PublicDeliveryIdentifier, bool) {
	if o == nil || IsNil(o.DeliveryIdentifier) {
		return nil, false
	}
	return o.DeliveryIdentifier, true
}

// HasDeliveryIdentifier returns a boolean if a field has been set.
func (o *PublicRecipientEgg) HasDeliveryIdentifier() bool {
	if o != nil && !IsNil(o.DeliveryIdentifier) {
		return true
	}

	return false
}

// SetDeliveryIdentifier gets a reference to the given PublicDeliveryIdentifier and assigns it to the DeliveryIdentifier field.
func (o *PublicRecipientEgg) SetDeliveryIdentifier(v PublicDeliveryIdentifier) {
	o.DeliveryIdentifier = &v
}

// GetRecipientField returns the RecipientField field value if set, zero value otherwise.
func (o *PublicRecipientEgg) GetRecipientField() string {
	if o == nil || IsNil(o.RecipientField) {
		var ret string
		return ret
	}
	return *o.RecipientField
}

// GetRecipientFieldOk returns a tuple with the RecipientField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicRecipientEgg) GetRecipientFieldOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientField) {
		return nil, false
	}
	return o.RecipientField, true
}

// HasRecipientField returns a boolean if a field has been set.
func (o *PublicRecipientEgg) HasRecipientField() bool {
	if o != nil && !IsNil(o.RecipientField) {
		return true
	}

	return false
}

// SetRecipientField gets a reference to the given string and assigns it to the RecipientField field.
func (o *PublicRecipientEgg) SetRecipientField(v string) {
	o.RecipientField = &v
}

func (o PublicRecipientEgg) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicRecipientEgg) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deliveryIdentifiers"] = o.DeliveryIdentifiers
	if !IsNil(o.ActorId) {
		toSerialize["actorId"] = o.ActorId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DeliveryIdentifier) {
		toSerialize["deliveryIdentifier"] = o.DeliveryIdentifier
	}
	if !IsNil(o.RecipientField) {
		toSerialize["recipientField"] = o.RecipientField
	}
	return toSerialize, nil
}

func (o *PublicRecipientEgg) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deliveryIdentifiers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicRecipientEgg := _PublicRecipientEgg{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicRecipientEgg)

	if err != nil {
		return err
	}

	*o = PublicRecipientEgg(varPublicRecipientEgg)

	return err
}

type NullablePublicRecipientEgg struct {
	value *PublicRecipientEgg
	isSet bool
}

func (v NullablePublicRecipientEgg) Get() *PublicRecipientEgg {
	return v.value
}

func (v *NullablePublicRecipientEgg) Set(val *PublicRecipientEgg) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicRecipientEgg) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicRecipientEgg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicRecipientEgg(val *PublicRecipientEgg) *NullablePublicRecipientEgg {
	return &NullablePublicRecipientEgg{value: val, isSet: true}
}

func (v NullablePublicRecipientEgg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicRecipientEgg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


