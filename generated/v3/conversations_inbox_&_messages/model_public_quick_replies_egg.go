/*
Conversations Inbox & Messages

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conversations_inbox_&amp;_messages

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicQuickRepliesEgg type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicQuickRepliesEgg{}

// PublicQuickRepliesEgg struct for PublicQuickRepliesEgg
type PublicQuickRepliesEgg struct {
	QuickReplies []QuickReply `json:"quickReplies"`
	Type string `json:"type"`
}

type _PublicQuickRepliesEgg PublicQuickRepliesEgg

// NewPublicQuickRepliesEgg instantiates a new PublicQuickRepliesEgg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicQuickRepliesEgg(quickReplies []QuickReply, type_ string) *PublicQuickRepliesEgg {
	this := PublicQuickRepliesEgg{}
	this.QuickReplies = quickReplies
	this.Type = type_
	return &this
}

// NewPublicQuickRepliesEggWithDefaults instantiates a new PublicQuickRepliesEgg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicQuickRepliesEggWithDefaults() *PublicQuickRepliesEgg {
	this := PublicQuickRepliesEgg{}
	var type_ string = "QUICK_REPLIES"
	this.Type = type_
	return &this
}

// GetQuickReplies returns the QuickReplies field value
func (o *PublicQuickRepliesEgg) GetQuickReplies() []QuickReply {
	if o == nil {
		var ret []QuickReply
		return ret
	}

	return o.QuickReplies
}

// GetQuickRepliesOk returns a tuple with the QuickReplies field value
// and a boolean to check if the value has been set.
func (o *PublicQuickRepliesEgg) GetQuickRepliesOk() ([]QuickReply, bool) {
	if o == nil {
		return nil, false
	}
	return o.QuickReplies, true
}

// SetQuickReplies sets field value
func (o *PublicQuickRepliesEgg) SetQuickReplies(v []QuickReply) {
	o.QuickReplies = v
}

// GetType returns the Type field value
func (o *PublicQuickRepliesEgg) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PublicQuickRepliesEgg) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PublicQuickRepliesEgg) SetType(v string) {
	o.Type = v
}

func (o PublicQuickRepliesEgg) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicQuickRepliesEgg) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["quickReplies"] = o.QuickReplies
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *PublicQuickRepliesEgg) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"quickReplies",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicQuickRepliesEgg := _PublicQuickRepliesEgg{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicQuickRepliesEgg)

	if err != nil {
		return err
	}

	*o = PublicQuickRepliesEgg(varPublicQuickRepliesEgg)

	return err
}

type NullablePublicQuickRepliesEgg struct {
	value *PublicQuickRepliesEgg
	isSet bool
}

func (v NullablePublicQuickRepliesEgg) Get() *PublicQuickRepliesEgg {
	return v.value
}

func (v *NullablePublicQuickRepliesEgg) Set(val *PublicQuickRepliesEgg) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicQuickRepliesEgg) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicQuickRepliesEgg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicQuickRepliesEgg(val *PublicQuickRepliesEgg) *NullablePublicQuickRepliesEgg {
	return &NullablePublicQuickRepliesEgg{value: val, isSet: true}
}

func (v NullablePublicQuickRepliesEgg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicQuickRepliesEgg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


