/*
Conversations Inbox & Messages

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conversations_inbox_&amp;_messages

import (
	"encoding/json"
)

// checks if the ContactOrg type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContactOrg{}

// ContactOrg struct for ContactOrg
type ContactOrg struct {
	Company *string `json:"company,omitempty"`
	Department *string `json:"department,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewContactOrg instantiates a new ContactOrg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactOrg() *ContactOrg {
	this := ContactOrg{}
	return &this
}

// NewContactOrgWithDefaults instantiates a new ContactOrg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactOrgWithDefaults() *ContactOrg {
	this := ContactOrg{}
	return &this
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *ContactOrg) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactOrg) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *ContactOrg) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *ContactOrg) SetCompany(v string) {
	o.Company = &v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *ContactOrg) GetDepartment() string {
	if o == nil || IsNil(o.Department) {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactOrg) GetDepartmentOk() (*string, bool) {
	if o == nil || IsNil(o.Department) {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *ContactOrg) HasDepartment() bool {
	if o != nil && !IsNil(o.Department) {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *ContactOrg) SetDepartment(v string) {
	o.Department = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ContactOrg) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactOrg) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ContactOrg) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ContactOrg) SetTitle(v string) {
	o.Title = &v
}

func (o ContactOrg) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContactOrg) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Department) {
		toSerialize["department"] = o.Department
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableContactOrg struct {
	value *ContactOrg
	isSet bool
}

func (v NullableContactOrg) Get() *ContactOrg {
	return v.value
}

func (v *NullableContactOrg) Set(val *ContactOrg) {
	v.value = val
	v.isSet = true
}

func (v NullableContactOrg) IsSet() bool {
	return v.isSet
}

func (v *NullableContactOrg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactOrg(val *ContactOrg) *NullableContactOrg {
	return &NullableContactOrg{value: val, isSet: true}
}

func (v NullableContactOrg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactOrg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


