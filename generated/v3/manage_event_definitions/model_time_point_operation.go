/*
Events Manage Event Definitions

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package manage_event_definitions

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TimePointOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimePointOperation{}

// TimePointOperation struct for TimePointOperation
type TimePointOperation struct {
	EndpointBehavior string `json:"endpointBehavior"`
	IncludeObjectsWithNoValueSet bool `json:"includeObjectsWithNoValueSet"`
	DefaultValue *string `json:"defaultValue,omitempty"`
	PropertyType string `json:"propertyType"`
	PropertyParser string `json:"propertyParser"`
	TimePoint RangedTimeOperationUpperBoundTimePoint `json:"timePoint"`
	OperationType string `json:"operationType"`
	Type string `json:"type"`
	OperatorName string `json:"operatorName"`
	Operator string `json:"operator"`
}

type _TimePointOperation TimePointOperation

// NewTimePointOperation instantiates a new TimePointOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimePointOperation(endpointBehavior string, includeObjectsWithNoValueSet bool, propertyType string, propertyParser string, timePoint RangedTimeOperationUpperBoundTimePoint, operationType string, type_ string, operatorName string, operator string) *TimePointOperation {
	this := TimePointOperation{}
	this.EndpointBehavior = endpointBehavior
	this.IncludeObjectsWithNoValueSet = includeObjectsWithNoValueSet
	this.PropertyType = propertyType
	this.PropertyParser = propertyParser
	this.TimePoint = timePoint
	this.OperationType = operationType
	this.Type = type_
	this.OperatorName = operatorName
	this.Operator = operator
	return &this
}

// NewTimePointOperationWithDefaults instantiates a new TimePointOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimePointOperationWithDefaults() *TimePointOperation {
	this := TimePointOperation{}
	var propertyType string = "timepoint"
	this.PropertyType = propertyType
	return &this
}

// GetEndpointBehavior returns the EndpointBehavior field value
func (o *TimePointOperation) GetEndpointBehavior() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndpointBehavior
}

// GetEndpointBehaviorOk returns a tuple with the EndpointBehavior field value
// and a boolean to check if the value has been set.
func (o *TimePointOperation) GetEndpointBehaviorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndpointBehavior, true
}

// SetEndpointBehavior sets field value
func (o *TimePointOperation) SetEndpointBehavior(v string) {
	o.EndpointBehavior = v
}

// GetIncludeObjectsWithNoValueSet returns the IncludeObjectsWithNoValueSet field value
func (o *TimePointOperation) GetIncludeObjectsWithNoValueSet() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeObjectsWithNoValueSet
}

// GetIncludeObjectsWithNoValueSetOk returns a tuple with the IncludeObjectsWithNoValueSet field value
// and a boolean to check if the value has been set.
func (o *TimePointOperation) GetIncludeObjectsWithNoValueSetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeObjectsWithNoValueSet, true
}

// SetIncludeObjectsWithNoValueSet sets field value
func (o *TimePointOperation) SetIncludeObjectsWithNoValueSet(v bool) {
	o.IncludeObjectsWithNoValueSet = v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *TimePointOperation) GetDefaultValue() string {
	if o == nil || IsNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePointOperation) GetDefaultValueOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *TimePointOperation) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *TimePointOperation) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetPropertyType returns the PropertyType field value
func (o *TimePointOperation) GetPropertyType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PropertyType
}

// GetPropertyTypeOk returns a tuple with the PropertyType field value
// and a boolean to check if the value has been set.
func (o *TimePointOperation) GetPropertyTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PropertyType, true
}

// SetPropertyType sets field value
func (o *TimePointOperation) SetPropertyType(v string) {
	o.PropertyType = v
}

// GetPropertyParser returns the PropertyParser field value
func (o *TimePointOperation) GetPropertyParser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PropertyParser
}

// GetPropertyParserOk returns a tuple with the PropertyParser field value
// and a boolean to check if the value has been set.
func (o *TimePointOperation) GetPropertyParserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PropertyParser, true
}

// SetPropertyParser sets field value
func (o *TimePointOperation) SetPropertyParser(v string) {
	o.PropertyParser = v
}

// GetTimePoint returns the TimePoint field value
func (o *TimePointOperation) GetTimePoint() RangedTimeOperationUpperBoundTimePoint {
	if o == nil {
		var ret RangedTimeOperationUpperBoundTimePoint
		return ret
	}

	return o.TimePoint
}

// GetTimePointOk returns a tuple with the TimePoint field value
// and a boolean to check if the value has been set.
func (o *TimePointOperation) GetTimePointOk() (*RangedTimeOperationUpperBoundTimePoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimePoint, true
}

// SetTimePoint sets field value
func (o *TimePointOperation) SetTimePoint(v RangedTimeOperationUpperBoundTimePoint) {
	o.TimePoint = v
}

// GetOperationType returns the OperationType field value
func (o *TimePointOperation) GetOperationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *TimePointOperation) GetOperationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *TimePointOperation) SetOperationType(v string) {
	o.OperationType = v
}

// GetType returns the Type field value
func (o *TimePointOperation) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TimePointOperation) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TimePointOperation) SetType(v string) {
	o.Type = v
}

// GetOperatorName returns the OperatorName field value
func (o *TimePointOperation) GetOperatorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperatorName
}

// GetOperatorNameOk returns a tuple with the OperatorName field value
// and a boolean to check if the value has been set.
func (o *TimePointOperation) GetOperatorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperatorName, true
}

// SetOperatorName sets field value
func (o *TimePointOperation) SetOperatorName(v string) {
	o.OperatorName = v
}

// GetOperator returns the Operator field value
func (o *TimePointOperation) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *TimePointOperation) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *TimePointOperation) SetOperator(v string) {
	o.Operator = v
}

func (o TimePointOperation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimePointOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["endpointBehavior"] = o.EndpointBehavior
	toSerialize["includeObjectsWithNoValueSet"] = o.IncludeObjectsWithNoValueSet
	if !IsNil(o.DefaultValue) {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	toSerialize["propertyType"] = o.PropertyType
	toSerialize["propertyParser"] = o.PropertyParser
	toSerialize["timePoint"] = o.TimePoint
	toSerialize["operationType"] = o.OperationType
	toSerialize["type"] = o.Type
	toSerialize["operatorName"] = o.OperatorName
	toSerialize["operator"] = o.Operator
	return toSerialize, nil
}

func (o *TimePointOperation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endpointBehavior",
		"includeObjectsWithNoValueSet",
		"propertyType",
		"propertyParser",
		"timePoint",
		"operationType",
		"type",
		"operatorName",
		"operator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTimePointOperation := _TimePointOperation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTimePointOperation)

	if err != nil {
		return err
	}

	*o = TimePointOperation(varTimePointOperation)

	return err
}

type NullableTimePointOperation struct {
	value *TimePointOperation
	isSet bool
}

func (v NullableTimePointOperation) Get() *TimePointOperation {
	return v.value
}

func (v *NullableTimePointOperation) Set(val *TimePointOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableTimePointOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableTimePointOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimePointOperation(val *TimePointOperation) *NullableTimePointOperation {
	return &NullableTimePointOperation{value: val, isSet: true}
}

func (v NullableTimePointOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimePointOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


