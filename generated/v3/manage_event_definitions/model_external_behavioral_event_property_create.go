/*
Events Manage Event Definitions

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package manage_event_definitions

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalBehavioralEventPropertyCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalBehavioralEventPropertyCreate{}

// ExternalBehavioralEventPropertyCreate struct for ExternalBehavioralEventPropertyCreate
type ExternalBehavioralEventPropertyCreate struct {
	// Internal property name, which must be used when referencing the property from the API
	Name *string `json:"name,omitempty"`
	// A list of available options for the property if it is an enumeration. NOTE: This field is only applicable for enumerated properties.
	Options []OptionInput `json:"options,omitempty"`
	// A description of the property that will be shown as help text in HubSpot.
	Description *string `json:"description,omitempty"`
	// Human readable label for the property. Used in HubSpot UI
	Label string `json:"label"`
	// The data type of the property. Can be one of the following: [string, number, enumeration, datetime]
	Type string `json:"type"`
}

type _ExternalBehavioralEventPropertyCreate ExternalBehavioralEventPropertyCreate

// NewExternalBehavioralEventPropertyCreate instantiates a new ExternalBehavioralEventPropertyCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalBehavioralEventPropertyCreate(label string, type_ string) *ExternalBehavioralEventPropertyCreate {
	this := ExternalBehavioralEventPropertyCreate{}
	this.Label = label
	this.Type = type_
	return &this
}

// NewExternalBehavioralEventPropertyCreateWithDefaults instantiates a new ExternalBehavioralEventPropertyCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalBehavioralEventPropertyCreateWithDefaults() *ExternalBehavioralEventPropertyCreate {
	this := ExternalBehavioralEventPropertyCreate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExternalBehavioralEventPropertyCreate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventPropertyCreate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExternalBehavioralEventPropertyCreate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExternalBehavioralEventPropertyCreate) SetName(v string) {
	o.Name = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ExternalBehavioralEventPropertyCreate) GetOptions() []OptionInput {
	if o == nil || IsNil(o.Options) {
		var ret []OptionInput
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventPropertyCreate) GetOptionsOk() ([]OptionInput, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ExternalBehavioralEventPropertyCreate) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []OptionInput and assigns it to the Options field.
func (o *ExternalBehavioralEventPropertyCreate) SetOptions(v []OptionInput) {
	o.Options = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ExternalBehavioralEventPropertyCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventPropertyCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ExternalBehavioralEventPropertyCreate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ExternalBehavioralEventPropertyCreate) SetDescription(v string) {
	o.Description = &v
}

// GetLabel returns the Label field value
func (o *ExternalBehavioralEventPropertyCreate) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventPropertyCreate) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *ExternalBehavioralEventPropertyCreate) SetLabel(v string) {
	o.Label = v
}

// GetType returns the Type field value
func (o *ExternalBehavioralEventPropertyCreate) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventPropertyCreate) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ExternalBehavioralEventPropertyCreate) SetType(v string) {
	o.Type = v
}

func (o ExternalBehavioralEventPropertyCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalBehavioralEventPropertyCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["label"] = o.Label
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *ExternalBehavioralEventPropertyCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalBehavioralEventPropertyCreate := _ExternalBehavioralEventPropertyCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalBehavioralEventPropertyCreate)

	if err != nil {
		return err
	}

	*o = ExternalBehavioralEventPropertyCreate(varExternalBehavioralEventPropertyCreate)

	return err
}

type NullableExternalBehavioralEventPropertyCreate struct {
	value *ExternalBehavioralEventPropertyCreate
	isSet bool
}

func (v NullableExternalBehavioralEventPropertyCreate) Get() *ExternalBehavioralEventPropertyCreate {
	return v.value
}

func (v *NullableExternalBehavioralEventPropertyCreate) Set(val *ExternalBehavioralEventPropertyCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalBehavioralEventPropertyCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalBehavioralEventPropertyCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalBehavioralEventPropertyCreate(val *ExternalBehavioralEventPropertyCreate) *NullableExternalBehavioralEventPropertyCreate {
	return &NullableExternalBehavioralEventPropertyCreate{value: val, isSet: true}
}

func (v NullableExternalBehavioralEventPropertyCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalBehavioralEventPropertyCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


