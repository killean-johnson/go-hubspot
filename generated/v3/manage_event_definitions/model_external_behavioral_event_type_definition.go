/*
Events Manage Event Definitions

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package manage_event_definitions

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ExternalBehavioralEventTypeDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalBehavioralEventTypeDefinition{}

// ExternalBehavioralEventTypeDefinition struct for ExternalBehavioralEventTypeDefinition
type ExternalBehavioralEventTypeDefinition struct {
	Associations []AssociationDefinition `json:"associations"`
	ObjectTypeId string `json:"objectTypeId"`
	CreatedUserId *int32 `json:"createdUserId,omitempty"`
	TrackingType *string `json:"trackingType,omitempty"`
	Description *string `json:"description,omitempty"`
	PrimaryObjectId *string `json:"primaryObjectId,omitempty"`
	ComboEventRules *ComboEventRuleBranch `json:"comboEventRules,omitempty"`
	FullyQualifiedName string `json:"fullyQualifiedName"`
	PrimaryObject *string `json:"primaryObject,omitempty"`
	Labels BehavioralEventTypeDefinitionLabels `json:"labels"`
	Archived bool `json:"archived"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Name string `json:"name"`
	Id string `json:"id"`
	Properties []Property `json:"properties"`
}

type _ExternalBehavioralEventTypeDefinition ExternalBehavioralEventTypeDefinition

// NewExternalBehavioralEventTypeDefinition instantiates a new ExternalBehavioralEventTypeDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalBehavioralEventTypeDefinition(associations []AssociationDefinition, objectTypeId string, fullyQualifiedName string, labels BehavioralEventTypeDefinitionLabels, archived bool, name string, id string, properties []Property) *ExternalBehavioralEventTypeDefinition {
	this := ExternalBehavioralEventTypeDefinition{}
	this.Associations = associations
	this.ObjectTypeId = objectTypeId
	this.FullyQualifiedName = fullyQualifiedName
	this.Labels = labels
	this.Archived = archived
	this.Name = name
	this.Id = id
	this.Properties = properties
	return &this
}

// NewExternalBehavioralEventTypeDefinitionWithDefaults instantiates a new ExternalBehavioralEventTypeDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalBehavioralEventTypeDefinitionWithDefaults() *ExternalBehavioralEventTypeDefinition {
	this := ExternalBehavioralEventTypeDefinition{}
	return &this
}

// GetAssociations returns the Associations field value
func (o *ExternalBehavioralEventTypeDefinition) GetAssociations() []AssociationDefinition {
	if o == nil {
		var ret []AssociationDefinition
		return ret
	}

	return o.Associations
}

// GetAssociationsOk returns a tuple with the Associations field value
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetAssociationsOk() ([]AssociationDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Associations, true
}

// SetAssociations sets field value
func (o *ExternalBehavioralEventTypeDefinition) SetAssociations(v []AssociationDefinition) {
	o.Associations = v
}

// GetObjectTypeId returns the ObjectTypeId field value
func (o *ExternalBehavioralEventTypeDefinition) GetObjectTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectTypeId
}

// GetObjectTypeIdOk returns a tuple with the ObjectTypeId field value
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetObjectTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectTypeId, true
}

// SetObjectTypeId sets field value
func (o *ExternalBehavioralEventTypeDefinition) SetObjectTypeId(v string) {
	o.ObjectTypeId = v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise.
func (o *ExternalBehavioralEventTypeDefinition) GetCreatedUserId() int32 {
	if o == nil || IsNil(o.CreatedUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetCreatedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedUserId) {
		return nil, false
	}
	return o.CreatedUserId, true
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *ExternalBehavioralEventTypeDefinition) HasCreatedUserId() bool {
	if o != nil && !IsNil(o.CreatedUserId) {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given int32 and assigns it to the CreatedUserId field.
func (o *ExternalBehavioralEventTypeDefinition) SetCreatedUserId(v int32) {
	o.CreatedUserId = &v
}

// GetTrackingType returns the TrackingType field value if set, zero value otherwise.
func (o *ExternalBehavioralEventTypeDefinition) GetTrackingType() string {
	if o == nil || IsNil(o.TrackingType) {
		var ret string
		return ret
	}
	return *o.TrackingType
}

// GetTrackingTypeOk returns a tuple with the TrackingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetTrackingTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingType) {
		return nil, false
	}
	return o.TrackingType, true
}

// HasTrackingType returns a boolean if a field has been set.
func (o *ExternalBehavioralEventTypeDefinition) HasTrackingType() bool {
	if o != nil && !IsNil(o.TrackingType) {
		return true
	}

	return false
}

// SetTrackingType gets a reference to the given string and assigns it to the TrackingType field.
func (o *ExternalBehavioralEventTypeDefinition) SetTrackingType(v string) {
	o.TrackingType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ExternalBehavioralEventTypeDefinition) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ExternalBehavioralEventTypeDefinition) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ExternalBehavioralEventTypeDefinition) SetDescription(v string) {
	o.Description = &v
}

// GetPrimaryObjectId returns the PrimaryObjectId field value if set, zero value otherwise.
func (o *ExternalBehavioralEventTypeDefinition) GetPrimaryObjectId() string {
	if o == nil || IsNil(o.PrimaryObjectId) {
		var ret string
		return ret
	}
	return *o.PrimaryObjectId
}

// GetPrimaryObjectIdOk returns a tuple with the PrimaryObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetPrimaryObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryObjectId) {
		return nil, false
	}
	return o.PrimaryObjectId, true
}

// HasPrimaryObjectId returns a boolean if a field has been set.
func (o *ExternalBehavioralEventTypeDefinition) HasPrimaryObjectId() bool {
	if o != nil && !IsNil(o.PrimaryObjectId) {
		return true
	}

	return false
}

// SetPrimaryObjectId gets a reference to the given string and assigns it to the PrimaryObjectId field.
func (o *ExternalBehavioralEventTypeDefinition) SetPrimaryObjectId(v string) {
	o.PrimaryObjectId = &v
}

// GetComboEventRules returns the ComboEventRules field value if set, zero value otherwise.
func (o *ExternalBehavioralEventTypeDefinition) GetComboEventRules() ComboEventRuleBranch {
	if o == nil || IsNil(o.ComboEventRules) {
		var ret ComboEventRuleBranch
		return ret
	}
	return *o.ComboEventRules
}

// GetComboEventRulesOk returns a tuple with the ComboEventRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetComboEventRulesOk() (*ComboEventRuleBranch, bool) {
	if o == nil || IsNil(o.ComboEventRules) {
		return nil, false
	}
	return o.ComboEventRules, true
}

// HasComboEventRules returns a boolean if a field has been set.
func (o *ExternalBehavioralEventTypeDefinition) HasComboEventRules() bool {
	if o != nil && !IsNil(o.ComboEventRules) {
		return true
	}

	return false
}

// SetComboEventRules gets a reference to the given ComboEventRuleBranch and assigns it to the ComboEventRules field.
func (o *ExternalBehavioralEventTypeDefinition) SetComboEventRules(v ComboEventRuleBranch) {
	o.ComboEventRules = &v
}

// GetFullyQualifiedName returns the FullyQualifiedName field value
func (o *ExternalBehavioralEventTypeDefinition) GetFullyQualifiedName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullyQualifiedName
}

// GetFullyQualifiedNameOk returns a tuple with the FullyQualifiedName field value
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetFullyQualifiedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullyQualifiedName, true
}

// SetFullyQualifiedName sets field value
func (o *ExternalBehavioralEventTypeDefinition) SetFullyQualifiedName(v string) {
	o.FullyQualifiedName = v
}

// GetPrimaryObject returns the PrimaryObject field value if set, zero value otherwise.
func (o *ExternalBehavioralEventTypeDefinition) GetPrimaryObject() string {
	if o == nil || IsNil(o.PrimaryObject) {
		var ret string
		return ret
	}
	return *o.PrimaryObject
}

// GetPrimaryObjectOk returns a tuple with the PrimaryObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetPrimaryObjectOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryObject) {
		return nil, false
	}
	return o.PrimaryObject, true
}

// HasPrimaryObject returns a boolean if a field has been set.
func (o *ExternalBehavioralEventTypeDefinition) HasPrimaryObject() bool {
	if o != nil && !IsNil(o.PrimaryObject) {
		return true
	}

	return false
}

// SetPrimaryObject gets a reference to the given string and assigns it to the PrimaryObject field.
func (o *ExternalBehavioralEventTypeDefinition) SetPrimaryObject(v string) {
	o.PrimaryObject = &v
}

// GetLabels returns the Labels field value
func (o *ExternalBehavioralEventTypeDefinition) GetLabels() BehavioralEventTypeDefinitionLabels {
	if o == nil {
		var ret BehavioralEventTypeDefinitionLabels
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetLabelsOk() (*BehavioralEventTypeDefinitionLabels, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Labels, true
}

// SetLabels sets field value
func (o *ExternalBehavioralEventTypeDefinition) SetLabels(v BehavioralEventTypeDefinitionLabels) {
	o.Labels = v
}

// GetArchived returns the Archived field value
func (o *ExternalBehavioralEventTypeDefinition) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *ExternalBehavioralEventTypeDefinition) SetArchived(v bool) {
	o.Archived = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ExternalBehavioralEventTypeDefinition) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ExternalBehavioralEventTypeDefinition) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ExternalBehavioralEventTypeDefinition) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetName returns the Name field value
func (o *ExternalBehavioralEventTypeDefinition) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ExternalBehavioralEventTypeDefinition) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *ExternalBehavioralEventTypeDefinition) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExternalBehavioralEventTypeDefinition) SetId(v string) {
	o.Id = v
}

// GetProperties returns the Properties field value
func (o *ExternalBehavioralEventTypeDefinition) GetProperties() []Property {
	if o == nil {
		var ret []Property
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *ExternalBehavioralEventTypeDefinition) GetPropertiesOk() ([]Property, bool) {
	if o == nil {
		return nil, false
	}
	return o.Properties, true
}

// SetProperties sets field value
func (o *ExternalBehavioralEventTypeDefinition) SetProperties(v []Property) {
	o.Properties = v
}

func (o ExternalBehavioralEventTypeDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalBehavioralEventTypeDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["associations"] = o.Associations
	toSerialize["objectTypeId"] = o.ObjectTypeId
	if !IsNil(o.CreatedUserId) {
		toSerialize["createdUserId"] = o.CreatedUserId
	}
	if !IsNil(o.TrackingType) {
		toSerialize["trackingType"] = o.TrackingType
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.PrimaryObjectId) {
		toSerialize["primaryObjectId"] = o.PrimaryObjectId
	}
	if !IsNil(o.ComboEventRules) {
		toSerialize["comboEventRules"] = o.ComboEventRules
	}
	toSerialize["fullyQualifiedName"] = o.FullyQualifiedName
	if !IsNil(o.PrimaryObject) {
		toSerialize["primaryObject"] = o.PrimaryObject
	}
	toSerialize["labels"] = o.Labels
	toSerialize["archived"] = o.Archived
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	toSerialize["name"] = o.Name
	toSerialize["id"] = o.Id
	toSerialize["properties"] = o.Properties
	return toSerialize, nil
}

func (o *ExternalBehavioralEventTypeDefinition) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"associations",
		"objectTypeId",
		"fullyQualifiedName",
		"labels",
		"archived",
		"name",
		"id",
		"properties",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalBehavioralEventTypeDefinition := _ExternalBehavioralEventTypeDefinition{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalBehavioralEventTypeDefinition)

	if err != nil {
		return err
	}

	*o = ExternalBehavioralEventTypeDefinition(varExternalBehavioralEventTypeDefinition)

	return err
}

type NullableExternalBehavioralEventTypeDefinition struct {
	value *ExternalBehavioralEventTypeDefinition
	isSet bool
}

func (v NullableExternalBehavioralEventTypeDefinition) Get() *ExternalBehavioralEventTypeDefinition {
	return v.value
}

func (v *NullableExternalBehavioralEventTypeDefinition) Set(val *ExternalBehavioralEventTypeDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalBehavioralEventTypeDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalBehavioralEventTypeDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalBehavioralEventTypeDefinition(val *ExternalBehavioralEventTypeDefinition) *NullableExternalBehavioralEventTypeDefinition {
	return &NullableExternalBehavioralEventTypeDefinition{value: val, isSet: true}
}

func (v NullableExternalBehavioralEventTypeDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalBehavioralEventTypeDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


