/*
Events Manage Event Definitions

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package manage_event_definitions

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RollingDateRangePropertyOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RollingDateRangePropertyOperation{}

// RollingDateRangePropertyOperation struct for RollingDateRangePropertyOperation
type RollingDateRangePropertyOperation struct {
	IncludeObjectsWithNoValueSet bool `json:"includeObjectsWithNoValueSet"`
	DefaultValue *string `json:"defaultValue,omitempty"`
	PropertyType string `json:"propertyType"`
	RequiresTimeZoneConversion bool `json:"requiresTimeZoneConversion"`
	OperationType string `json:"operationType"`
	NumberOfDays int32 `json:"numberOfDays"`
	OperatorName string `json:"operatorName"`
	Operator string `json:"operator"`
}

type _RollingDateRangePropertyOperation RollingDateRangePropertyOperation

// NewRollingDateRangePropertyOperation instantiates a new RollingDateRangePropertyOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRollingDateRangePropertyOperation(includeObjectsWithNoValueSet bool, propertyType string, requiresTimeZoneConversion bool, operationType string, numberOfDays int32, operatorName string, operator string) *RollingDateRangePropertyOperation {
	this := RollingDateRangePropertyOperation{}
	this.IncludeObjectsWithNoValueSet = includeObjectsWithNoValueSet
	this.PropertyType = propertyType
	this.RequiresTimeZoneConversion = requiresTimeZoneConversion
	this.OperationType = operationType
	this.NumberOfDays = numberOfDays
	this.OperatorName = operatorName
	this.Operator = operator
	return &this
}

// NewRollingDateRangePropertyOperationWithDefaults instantiates a new RollingDateRangePropertyOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRollingDateRangePropertyOperationWithDefaults() *RollingDateRangePropertyOperation {
	this := RollingDateRangePropertyOperation{}
	var propertyType string = "datetime-rolling"
	this.PropertyType = propertyType
	return &this
}

// GetIncludeObjectsWithNoValueSet returns the IncludeObjectsWithNoValueSet field value
func (o *RollingDateRangePropertyOperation) GetIncludeObjectsWithNoValueSet() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeObjectsWithNoValueSet
}

// GetIncludeObjectsWithNoValueSetOk returns a tuple with the IncludeObjectsWithNoValueSet field value
// and a boolean to check if the value has been set.
func (o *RollingDateRangePropertyOperation) GetIncludeObjectsWithNoValueSetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeObjectsWithNoValueSet, true
}

// SetIncludeObjectsWithNoValueSet sets field value
func (o *RollingDateRangePropertyOperation) SetIncludeObjectsWithNoValueSet(v bool) {
	o.IncludeObjectsWithNoValueSet = v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *RollingDateRangePropertyOperation) GetDefaultValue() string {
	if o == nil || IsNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RollingDateRangePropertyOperation) GetDefaultValueOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *RollingDateRangePropertyOperation) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *RollingDateRangePropertyOperation) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetPropertyType returns the PropertyType field value
func (o *RollingDateRangePropertyOperation) GetPropertyType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PropertyType
}

// GetPropertyTypeOk returns a tuple with the PropertyType field value
// and a boolean to check if the value has been set.
func (o *RollingDateRangePropertyOperation) GetPropertyTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PropertyType, true
}

// SetPropertyType sets field value
func (o *RollingDateRangePropertyOperation) SetPropertyType(v string) {
	o.PropertyType = v
}

// GetRequiresTimeZoneConversion returns the RequiresTimeZoneConversion field value
func (o *RollingDateRangePropertyOperation) GetRequiresTimeZoneConversion() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RequiresTimeZoneConversion
}

// GetRequiresTimeZoneConversionOk returns a tuple with the RequiresTimeZoneConversion field value
// and a boolean to check if the value has been set.
func (o *RollingDateRangePropertyOperation) GetRequiresTimeZoneConversionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequiresTimeZoneConversion, true
}

// SetRequiresTimeZoneConversion sets field value
func (o *RollingDateRangePropertyOperation) SetRequiresTimeZoneConversion(v bool) {
	o.RequiresTimeZoneConversion = v
}

// GetOperationType returns the OperationType field value
func (o *RollingDateRangePropertyOperation) GetOperationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *RollingDateRangePropertyOperation) GetOperationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *RollingDateRangePropertyOperation) SetOperationType(v string) {
	o.OperationType = v
}

// GetNumberOfDays returns the NumberOfDays field value
func (o *RollingDateRangePropertyOperation) GetNumberOfDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumberOfDays
}

// GetNumberOfDaysOk returns a tuple with the NumberOfDays field value
// and a boolean to check if the value has been set.
func (o *RollingDateRangePropertyOperation) GetNumberOfDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberOfDays, true
}

// SetNumberOfDays sets field value
func (o *RollingDateRangePropertyOperation) SetNumberOfDays(v int32) {
	o.NumberOfDays = v
}

// GetOperatorName returns the OperatorName field value
func (o *RollingDateRangePropertyOperation) GetOperatorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperatorName
}

// GetOperatorNameOk returns a tuple with the OperatorName field value
// and a boolean to check if the value has been set.
func (o *RollingDateRangePropertyOperation) GetOperatorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperatorName, true
}

// SetOperatorName sets field value
func (o *RollingDateRangePropertyOperation) SetOperatorName(v string) {
	o.OperatorName = v
}

// GetOperator returns the Operator field value
func (o *RollingDateRangePropertyOperation) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *RollingDateRangePropertyOperation) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *RollingDateRangePropertyOperation) SetOperator(v string) {
	o.Operator = v
}

func (o RollingDateRangePropertyOperation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RollingDateRangePropertyOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["includeObjectsWithNoValueSet"] = o.IncludeObjectsWithNoValueSet
	if !IsNil(o.DefaultValue) {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	toSerialize["propertyType"] = o.PropertyType
	toSerialize["requiresTimeZoneConversion"] = o.RequiresTimeZoneConversion
	toSerialize["operationType"] = o.OperationType
	toSerialize["numberOfDays"] = o.NumberOfDays
	toSerialize["operatorName"] = o.OperatorName
	toSerialize["operator"] = o.Operator
	return toSerialize, nil
}

func (o *RollingDateRangePropertyOperation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"includeObjectsWithNoValueSet",
		"propertyType",
		"requiresTimeZoneConversion",
		"operationType",
		"numberOfDays",
		"operatorName",
		"operator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRollingDateRangePropertyOperation := _RollingDateRangePropertyOperation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRollingDateRangePropertyOperation)

	if err != nil {
		return err
	}

	*o = RollingDateRangePropertyOperation(varRollingDateRangePropertyOperation)

	return err
}

type NullableRollingDateRangePropertyOperation struct {
	value *RollingDateRangePropertyOperation
	isSet bool
}

func (v NullableRollingDateRangePropertyOperation) Get() *RollingDateRangePropertyOperation {
	return v.value
}

func (v *NullableRollingDateRangePropertyOperation) Set(val *RollingDateRangePropertyOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableRollingDateRangePropertyOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableRollingDateRangePropertyOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRollingDateRangePropertyOperation(val *RollingDateRangePropertyOperation) *NullableRollingDateRangePropertyOperation {
	return &NullableRollingDateRangePropertyOperation{value: val, isSet: true}
}

func (v NullableRollingDateRangePropertyOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRollingDateRangePropertyOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


