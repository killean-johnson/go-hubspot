/*
Conversations Custom Channels

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package custom_channels

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicChannelIntegrationChannelPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicChannelIntegrationChannelPatch{}

// PublicChannelIntegrationChannelPatch struct for PublicChannelIntegrationChannelPatch
type PublicChannelIntegrationChannelPatch struct {
	ChannelDescription map[string]interface{} `json:"channelDescription"`
	Capabilities map[string]map[string]interface{} `json:"capabilities"`
	ChannelAccountConnectionRedirectUrl map[string]interface{} `json:"channelAccountConnectionRedirectUrl,omitempty"`
	ChannelLogoUrl map[string]interface{} `json:"channelLogoUrl"`
	WebhookUrl map[string]interface{} `json:"webhookUrl,omitempty"`
}

type _PublicChannelIntegrationChannelPatch PublicChannelIntegrationChannelPatch

// NewPublicChannelIntegrationChannelPatch instantiates a new PublicChannelIntegrationChannelPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicChannelIntegrationChannelPatch(channelDescription map[string]interface{}, capabilities map[string]map[string]interface{}, channelLogoUrl map[string]interface{}) *PublicChannelIntegrationChannelPatch {
	this := PublicChannelIntegrationChannelPatch{}
	this.ChannelDescription = channelDescription
	this.Capabilities = capabilities
	this.ChannelLogoUrl = channelLogoUrl
	return &this
}

// NewPublicChannelIntegrationChannelPatchWithDefaults instantiates a new PublicChannelIntegrationChannelPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicChannelIntegrationChannelPatchWithDefaults() *PublicChannelIntegrationChannelPatch {
	this := PublicChannelIntegrationChannelPatch{}
	return &this
}

// GetChannelDescription returns the ChannelDescription field value
func (o *PublicChannelIntegrationChannelPatch) GetChannelDescription() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ChannelDescription
}

// GetChannelDescriptionOk returns a tuple with the ChannelDescription field value
// and a boolean to check if the value has been set.
func (o *PublicChannelIntegrationChannelPatch) GetChannelDescriptionOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.ChannelDescription, true
}

// SetChannelDescription sets field value
func (o *PublicChannelIntegrationChannelPatch) SetChannelDescription(v map[string]interface{}) {
	o.ChannelDescription = v
}

// GetCapabilities returns the Capabilities field value
func (o *PublicChannelIntegrationChannelPatch) GetCapabilities() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value
// and a boolean to check if the value has been set.
func (o *PublicChannelIntegrationChannelPatch) GetCapabilitiesOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.Capabilities, true
}

// SetCapabilities sets field value
func (o *PublicChannelIntegrationChannelPatch) SetCapabilities(v map[string]map[string]interface{}) {
	o.Capabilities = v
}

// GetChannelAccountConnectionRedirectUrl returns the ChannelAccountConnectionRedirectUrl field value if set, zero value otherwise.
func (o *PublicChannelIntegrationChannelPatch) GetChannelAccountConnectionRedirectUrl() map[string]interface{} {
	if o == nil || IsNil(o.ChannelAccountConnectionRedirectUrl) {
		var ret map[string]interface{}
		return ret
	}
	return o.ChannelAccountConnectionRedirectUrl
}

// GetChannelAccountConnectionRedirectUrlOk returns a tuple with the ChannelAccountConnectionRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicChannelIntegrationChannelPatch) GetChannelAccountConnectionRedirectUrlOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ChannelAccountConnectionRedirectUrl) {
		return map[string]interface{}{}, false
	}
	return o.ChannelAccountConnectionRedirectUrl, true
}

// HasChannelAccountConnectionRedirectUrl returns a boolean if a field has been set.
func (o *PublicChannelIntegrationChannelPatch) HasChannelAccountConnectionRedirectUrl() bool {
	if o != nil && !IsNil(o.ChannelAccountConnectionRedirectUrl) {
		return true
	}

	return false
}

// SetChannelAccountConnectionRedirectUrl gets a reference to the given map[string]interface{} and assigns it to the ChannelAccountConnectionRedirectUrl field.
func (o *PublicChannelIntegrationChannelPatch) SetChannelAccountConnectionRedirectUrl(v map[string]interface{}) {
	o.ChannelAccountConnectionRedirectUrl = v
}

// GetChannelLogoUrl returns the ChannelLogoUrl field value
func (o *PublicChannelIntegrationChannelPatch) GetChannelLogoUrl() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ChannelLogoUrl
}

// GetChannelLogoUrlOk returns a tuple with the ChannelLogoUrl field value
// and a boolean to check if the value has been set.
func (o *PublicChannelIntegrationChannelPatch) GetChannelLogoUrlOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.ChannelLogoUrl, true
}

// SetChannelLogoUrl sets field value
func (o *PublicChannelIntegrationChannelPatch) SetChannelLogoUrl(v map[string]interface{}) {
	o.ChannelLogoUrl = v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise.
func (o *PublicChannelIntegrationChannelPatch) GetWebhookUrl() map[string]interface{} {
	if o == nil || IsNil(o.WebhookUrl) {
		var ret map[string]interface{}
		return ret
	}
	return o.WebhookUrl
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicChannelIntegrationChannelPatch) GetWebhookUrlOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.WebhookUrl) {
		return map[string]interface{}{}, false
	}
	return o.WebhookUrl, true
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *PublicChannelIntegrationChannelPatch) HasWebhookUrl() bool {
	if o != nil && !IsNil(o.WebhookUrl) {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given map[string]interface{} and assigns it to the WebhookUrl field.
func (o *PublicChannelIntegrationChannelPatch) SetWebhookUrl(v map[string]interface{}) {
	o.WebhookUrl = v
}

func (o PublicChannelIntegrationChannelPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicChannelIntegrationChannelPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["channelDescription"] = o.ChannelDescription
	toSerialize["capabilities"] = o.Capabilities
	if !IsNil(o.ChannelAccountConnectionRedirectUrl) {
		toSerialize["channelAccountConnectionRedirectUrl"] = o.ChannelAccountConnectionRedirectUrl
	}
	toSerialize["channelLogoUrl"] = o.ChannelLogoUrl
	if !IsNil(o.WebhookUrl) {
		toSerialize["webhookUrl"] = o.WebhookUrl
	}
	return toSerialize, nil
}

func (o *PublicChannelIntegrationChannelPatch) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"channelDescription",
		"capabilities",
		"channelLogoUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicChannelIntegrationChannelPatch := _PublicChannelIntegrationChannelPatch{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicChannelIntegrationChannelPatch)

	if err != nil {
		return err
	}

	*o = PublicChannelIntegrationChannelPatch(varPublicChannelIntegrationChannelPatch)

	return err
}

type NullablePublicChannelIntegrationChannelPatch struct {
	value *PublicChannelIntegrationChannelPatch
	isSet bool
}

func (v NullablePublicChannelIntegrationChannelPatch) Get() *PublicChannelIntegrationChannelPatch {
	return v.value
}

func (v *NullablePublicChannelIntegrationChannelPatch) Set(val *PublicChannelIntegrationChannelPatch) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicChannelIntegrationChannelPatch) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicChannelIntegrationChannelPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicChannelIntegrationChannelPatch(val *PublicChannelIntegrationChannelPatch) *NullablePublicChannelIntegrationChannelPatch {
	return &NullablePublicChannelIntegrationChannelPatch{value: val, isSet: true}
}

func (v NullablePublicChannelIntegrationChannelPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicChannelIntegrationChannelPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


