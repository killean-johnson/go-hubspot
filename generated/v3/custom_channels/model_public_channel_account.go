/*
Conversations Custom Channels

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package custom_channels

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PublicChannelAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicChannelAccount{}

// PublicChannelAccount struct for PublicChannelAccount
type PublicChannelAccount struct {
	CreatedAt time.Time `json:"createdAt"`
	ArchivedAt *time.Time `json:"archivedAt,omitempty"`
	Archived bool `json:"archived"`
	Authorized bool `json:"authorized"`
	Name string `json:"name"`
	Active bool `json:"active"`
	DeliveryIdentifier *PublicDeliveryIdentifier `json:"deliveryIdentifier,omitempty"`
	Id string `json:"id"`
	InboxId string `json:"inboxId"`
	ChannelId string `json:"channelId"`
}

type _PublicChannelAccount PublicChannelAccount

// NewPublicChannelAccount instantiates a new PublicChannelAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicChannelAccount(createdAt time.Time, archived bool, authorized bool, name string, active bool, id string, inboxId string, channelId string) *PublicChannelAccount {
	this := PublicChannelAccount{}
	this.CreatedAt = createdAt
	this.Archived = archived
	this.Authorized = authorized
	this.Name = name
	this.Active = active
	this.Id = id
	this.InboxId = inboxId
	this.ChannelId = channelId
	return &this
}

// NewPublicChannelAccountWithDefaults instantiates a new PublicChannelAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicChannelAccountWithDefaults() *PublicChannelAccount {
	this := PublicChannelAccount{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *PublicChannelAccount) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PublicChannelAccount) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PublicChannelAccount) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetArchivedAt returns the ArchivedAt field value if set, zero value otherwise.
func (o *PublicChannelAccount) GetArchivedAt() time.Time {
	if o == nil || IsNil(o.ArchivedAt) {
		var ret time.Time
		return ret
	}
	return *o.ArchivedAt
}

// GetArchivedAtOk returns a tuple with the ArchivedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicChannelAccount) GetArchivedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ArchivedAt) {
		return nil, false
	}
	return o.ArchivedAt, true
}

// HasArchivedAt returns a boolean if a field has been set.
func (o *PublicChannelAccount) HasArchivedAt() bool {
	if o != nil && !IsNil(o.ArchivedAt) {
		return true
	}

	return false
}

// SetArchivedAt gets a reference to the given time.Time and assigns it to the ArchivedAt field.
func (o *PublicChannelAccount) SetArchivedAt(v time.Time) {
	o.ArchivedAt = &v
}

// GetArchived returns the Archived field value
func (o *PublicChannelAccount) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *PublicChannelAccount) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *PublicChannelAccount) SetArchived(v bool) {
	o.Archived = v
}

// GetAuthorized returns the Authorized field value
func (o *PublicChannelAccount) GetAuthorized() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Authorized
}

// GetAuthorizedOk returns a tuple with the Authorized field value
// and a boolean to check if the value has been set.
func (o *PublicChannelAccount) GetAuthorizedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Authorized, true
}

// SetAuthorized sets field value
func (o *PublicChannelAccount) SetAuthorized(v bool) {
	o.Authorized = v
}

// GetName returns the Name field value
func (o *PublicChannelAccount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PublicChannelAccount) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PublicChannelAccount) SetName(v string) {
	o.Name = v
}

// GetActive returns the Active field value
func (o *PublicChannelAccount) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *PublicChannelAccount) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *PublicChannelAccount) SetActive(v bool) {
	o.Active = v
}

// GetDeliveryIdentifier returns the DeliveryIdentifier field value if set, zero value otherwise.
func (o *PublicChannelAccount) GetDeliveryIdentifier() PublicDeliveryIdentifier {
	if o == nil || IsNil(o.DeliveryIdentifier) {
		var ret PublicDeliveryIdentifier
		return ret
	}
	return *o.DeliveryIdentifier
}

// GetDeliveryIdentifierOk returns a tuple with the DeliveryIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicChannelAccount) GetDeliveryIdentifierOk() (*PublicDeliveryIdentifier, bool) {
	if o == nil || IsNil(o.DeliveryIdentifier) {
		return nil, false
	}
	return o.DeliveryIdentifier, true
}

// HasDeliveryIdentifier returns a boolean if a field has been set.
func (o *PublicChannelAccount) HasDeliveryIdentifier() bool {
	if o != nil && !IsNil(o.DeliveryIdentifier) {
		return true
	}

	return false
}

// SetDeliveryIdentifier gets a reference to the given PublicDeliveryIdentifier and assigns it to the DeliveryIdentifier field.
func (o *PublicChannelAccount) SetDeliveryIdentifier(v PublicDeliveryIdentifier) {
	o.DeliveryIdentifier = &v
}

// GetId returns the Id field value
func (o *PublicChannelAccount) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PublicChannelAccount) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PublicChannelAccount) SetId(v string) {
	o.Id = v
}

// GetInboxId returns the InboxId field value
func (o *PublicChannelAccount) GetInboxId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InboxId
}

// GetInboxIdOk returns a tuple with the InboxId field value
// and a boolean to check if the value has been set.
func (o *PublicChannelAccount) GetInboxIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InboxId, true
}

// SetInboxId sets field value
func (o *PublicChannelAccount) SetInboxId(v string) {
	o.InboxId = v
}

// GetChannelId returns the ChannelId field value
func (o *PublicChannelAccount) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *PublicChannelAccount) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *PublicChannelAccount) SetChannelId(v string) {
	o.ChannelId = v
}

func (o PublicChannelAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicChannelAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.ArchivedAt) {
		toSerialize["archivedAt"] = o.ArchivedAt
	}
	toSerialize["archived"] = o.Archived
	toSerialize["authorized"] = o.Authorized
	toSerialize["name"] = o.Name
	toSerialize["active"] = o.Active
	if !IsNil(o.DeliveryIdentifier) {
		toSerialize["deliveryIdentifier"] = o.DeliveryIdentifier
	}
	toSerialize["id"] = o.Id
	toSerialize["inboxId"] = o.InboxId
	toSerialize["channelId"] = o.ChannelId
	return toSerialize, nil
}

func (o *PublicChannelAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"archived",
		"authorized",
		"name",
		"active",
		"id",
		"inboxId",
		"channelId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicChannelAccount := _PublicChannelAccount{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicChannelAccount)

	if err != nil {
		return err
	}

	*o = PublicChannelAccount(varPublicChannelAccount)

	return err
}

type NullablePublicChannelAccount struct {
	value *PublicChannelAccount
	isSet bool
}

func (v NullablePublicChannelAccount) Get() *PublicChannelAccount {
	return v.value
}

func (v *NullablePublicChannelAccount) Set(val *PublicChannelAccount) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicChannelAccount) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicChannelAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicChannelAccount(val *PublicChannelAccount) *NullablePublicChannelAccount {
	return &NullablePublicChannelAccount{value: val, isSet: true}
}

func (v NullablePublicChannelAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicChannelAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


