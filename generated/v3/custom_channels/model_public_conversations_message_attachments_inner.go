/*
Conversations Custom Channels

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package custom_channels

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// PublicConversationsMessageAttachmentsInner - struct for PublicConversationsMessageAttachmentsInner
type PublicConversationsMessageAttachmentsInner struct {
	PublicContact *PublicContact
	PublicFile *PublicFile
	PublicLocation *PublicLocation
	PublicMessageHeader *PublicMessageHeader
	PublicQuickReplies *PublicQuickReplies
	PublicUnsupportedContent *PublicUnsupportedContent
	PublicWhatsAppTemplateMetadata *PublicWhatsAppTemplateMetadata
}

// PublicContactAsPublicConversationsMessageAttachmentsInner is a convenience function that returns PublicContact wrapped in PublicConversationsMessageAttachmentsInner
func PublicContactAsPublicConversationsMessageAttachmentsInner(v *PublicContact) PublicConversationsMessageAttachmentsInner {
	return PublicConversationsMessageAttachmentsInner{
		PublicContact: v,
	}
}

// PublicFileAsPublicConversationsMessageAttachmentsInner is a convenience function that returns PublicFile wrapped in PublicConversationsMessageAttachmentsInner
func PublicFileAsPublicConversationsMessageAttachmentsInner(v *PublicFile) PublicConversationsMessageAttachmentsInner {
	return PublicConversationsMessageAttachmentsInner{
		PublicFile: v,
	}
}

// PublicLocationAsPublicConversationsMessageAttachmentsInner is a convenience function that returns PublicLocation wrapped in PublicConversationsMessageAttachmentsInner
func PublicLocationAsPublicConversationsMessageAttachmentsInner(v *PublicLocation) PublicConversationsMessageAttachmentsInner {
	return PublicConversationsMessageAttachmentsInner{
		PublicLocation: v,
	}
}

// PublicMessageHeaderAsPublicConversationsMessageAttachmentsInner is a convenience function that returns PublicMessageHeader wrapped in PublicConversationsMessageAttachmentsInner
func PublicMessageHeaderAsPublicConversationsMessageAttachmentsInner(v *PublicMessageHeader) PublicConversationsMessageAttachmentsInner {
	return PublicConversationsMessageAttachmentsInner{
		PublicMessageHeader: v,
	}
}

// PublicQuickRepliesAsPublicConversationsMessageAttachmentsInner is a convenience function that returns PublicQuickReplies wrapped in PublicConversationsMessageAttachmentsInner
func PublicQuickRepliesAsPublicConversationsMessageAttachmentsInner(v *PublicQuickReplies) PublicConversationsMessageAttachmentsInner {
	return PublicConversationsMessageAttachmentsInner{
		PublicQuickReplies: v,
	}
}

// PublicUnsupportedContentAsPublicConversationsMessageAttachmentsInner is a convenience function that returns PublicUnsupportedContent wrapped in PublicConversationsMessageAttachmentsInner
func PublicUnsupportedContentAsPublicConversationsMessageAttachmentsInner(v *PublicUnsupportedContent) PublicConversationsMessageAttachmentsInner {
	return PublicConversationsMessageAttachmentsInner{
		PublicUnsupportedContent: v,
	}
}

// PublicWhatsAppTemplateMetadataAsPublicConversationsMessageAttachmentsInner is a convenience function that returns PublicWhatsAppTemplateMetadata wrapped in PublicConversationsMessageAttachmentsInner
func PublicWhatsAppTemplateMetadataAsPublicConversationsMessageAttachmentsInner(v *PublicWhatsAppTemplateMetadata) PublicConversationsMessageAttachmentsInner {
	return PublicConversationsMessageAttachmentsInner{
		PublicWhatsAppTemplateMetadata: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *PublicConversationsMessageAttachmentsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into PublicContact
	err = newStrictDecoder(data).Decode(&dst.PublicContact)
	if err == nil {
		jsonPublicContact, _ := json.Marshal(dst.PublicContact)
		if string(jsonPublicContact) == "{}" { // empty struct
			dst.PublicContact = nil
		} else {
			if err = validator.Validate(dst.PublicContact); err != nil {
				dst.PublicContact = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicContact = nil
	}

	// try to unmarshal data into PublicFile
	err = newStrictDecoder(data).Decode(&dst.PublicFile)
	if err == nil {
		jsonPublicFile, _ := json.Marshal(dst.PublicFile)
		if string(jsonPublicFile) == "{}" { // empty struct
			dst.PublicFile = nil
		} else {
			if err = validator.Validate(dst.PublicFile); err != nil {
				dst.PublicFile = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicFile = nil
	}

	// try to unmarshal data into PublicLocation
	err = newStrictDecoder(data).Decode(&dst.PublicLocation)
	if err == nil {
		jsonPublicLocation, _ := json.Marshal(dst.PublicLocation)
		if string(jsonPublicLocation) == "{}" { // empty struct
			dst.PublicLocation = nil
		} else {
			if err = validator.Validate(dst.PublicLocation); err != nil {
				dst.PublicLocation = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicLocation = nil
	}

	// try to unmarshal data into PublicMessageHeader
	err = newStrictDecoder(data).Decode(&dst.PublicMessageHeader)
	if err == nil {
		jsonPublicMessageHeader, _ := json.Marshal(dst.PublicMessageHeader)
		if string(jsonPublicMessageHeader) == "{}" { // empty struct
			dst.PublicMessageHeader = nil
		} else {
			if err = validator.Validate(dst.PublicMessageHeader); err != nil {
				dst.PublicMessageHeader = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicMessageHeader = nil
	}

	// try to unmarshal data into PublicQuickReplies
	err = newStrictDecoder(data).Decode(&dst.PublicQuickReplies)
	if err == nil {
		jsonPublicQuickReplies, _ := json.Marshal(dst.PublicQuickReplies)
		if string(jsonPublicQuickReplies) == "{}" { // empty struct
			dst.PublicQuickReplies = nil
		} else {
			if err = validator.Validate(dst.PublicQuickReplies); err != nil {
				dst.PublicQuickReplies = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicQuickReplies = nil
	}

	// try to unmarshal data into PublicUnsupportedContent
	err = newStrictDecoder(data).Decode(&dst.PublicUnsupportedContent)
	if err == nil {
		jsonPublicUnsupportedContent, _ := json.Marshal(dst.PublicUnsupportedContent)
		if string(jsonPublicUnsupportedContent) == "{}" { // empty struct
			dst.PublicUnsupportedContent = nil
		} else {
			if err = validator.Validate(dst.PublicUnsupportedContent); err != nil {
				dst.PublicUnsupportedContent = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicUnsupportedContent = nil
	}

	// try to unmarshal data into PublicWhatsAppTemplateMetadata
	err = newStrictDecoder(data).Decode(&dst.PublicWhatsAppTemplateMetadata)
	if err == nil {
		jsonPublicWhatsAppTemplateMetadata, _ := json.Marshal(dst.PublicWhatsAppTemplateMetadata)
		if string(jsonPublicWhatsAppTemplateMetadata) == "{}" { // empty struct
			dst.PublicWhatsAppTemplateMetadata = nil
		} else {
			if err = validator.Validate(dst.PublicWhatsAppTemplateMetadata); err != nil {
				dst.PublicWhatsAppTemplateMetadata = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicWhatsAppTemplateMetadata = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.PublicContact = nil
		dst.PublicFile = nil
		dst.PublicLocation = nil
		dst.PublicMessageHeader = nil
		dst.PublicQuickReplies = nil
		dst.PublicUnsupportedContent = nil
		dst.PublicWhatsAppTemplateMetadata = nil

		return fmt.Errorf("data matches more than one schema in oneOf(PublicConversationsMessageAttachmentsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(PublicConversationsMessageAttachmentsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src PublicConversationsMessageAttachmentsInner) MarshalJSON() ([]byte, error) {
	if src.PublicContact != nil {
		return json.Marshal(&src.PublicContact)
	}

	if src.PublicFile != nil {
		return json.Marshal(&src.PublicFile)
	}

	if src.PublicLocation != nil {
		return json.Marshal(&src.PublicLocation)
	}

	if src.PublicMessageHeader != nil {
		return json.Marshal(&src.PublicMessageHeader)
	}

	if src.PublicQuickReplies != nil {
		return json.Marshal(&src.PublicQuickReplies)
	}

	if src.PublicUnsupportedContent != nil {
		return json.Marshal(&src.PublicUnsupportedContent)
	}

	if src.PublicWhatsAppTemplateMetadata != nil {
		return json.Marshal(&src.PublicWhatsAppTemplateMetadata)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *PublicConversationsMessageAttachmentsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.PublicContact != nil {
		return obj.PublicContact
	}

	if obj.PublicFile != nil {
		return obj.PublicFile
	}

	if obj.PublicLocation != nil {
		return obj.PublicLocation
	}

	if obj.PublicMessageHeader != nil {
		return obj.PublicMessageHeader
	}

	if obj.PublicQuickReplies != nil {
		return obj.PublicQuickReplies
	}

	if obj.PublicUnsupportedContent != nil {
		return obj.PublicUnsupportedContent
	}

	if obj.PublicWhatsAppTemplateMetadata != nil {
		return obj.PublicWhatsAppTemplateMetadata
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj PublicConversationsMessageAttachmentsInner) GetActualInstanceValue() (interface{}) {
	if obj.PublicContact != nil {
		return *obj.PublicContact
	}

	if obj.PublicFile != nil {
		return *obj.PublicFile
	}

	if obj.PublicLocation != nil {
		return *obj.PublicLocation
	}

	if obj.PublicMessageHeader != nil {
		return *obj.PublicMessageHeader
	}

	if obj.PublicQuickReplies != nil {
		return *obj.PublicQuickReplies
	}

	if obj.PublicUnsupportedContent != nil {
		return *obj.PublicUnsupportedContent
	}

	if obj.PublicWhatsAppTemplateMetadata != nil {
		return *obj.PublicWhatsAppTemplateMetadata
	}

	// all schemas are nil
	return nil
}

type NullablePublicConversationsMessageAttachmentsInner struct {
	value *PublicConversationsMessageAttachmentsInner
	isSet bool
}

func (v NullablePublicConversationsMessageAttachmentsInner) Get() *PublicConversationsMessageAttachmentsInner {
	return v.value
}

func (v *NullablePublicConversationsMessageAttachmentsInner) Set(val *PublicConversationsMessageAttachmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicConversationsMessageAttachmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicConversationsMessageAttachmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicConversationsMessageAttachmentsInner(val *PublicConversationsMessageAttachmentsInner) *NullablePublicConversationsMessageAttachmentsInner {
	return &NullablePublicConversationsMessageAttachmentsInner{value: val, isSet: true}
}

func (v NullablePublicConversationsMessageAttachmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicConversationsMessageAttachmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


