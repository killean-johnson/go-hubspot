/*
Conversations Custom Channels

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package custom_channels

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicChannelIntegrationMessageUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicChannelIntegrationMessageUpdateRequest{}

// PublicChannelIntegrationMessageUpdateRequest struct for PublicChannelIntegrationMessageUpdateRequest
type PublicChannelIntegrationMessageUpdateRequest struct {
	// Valid status are SENT, FAILED, and READ
	StatusType string `json:"statusType"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

type _PublicChannelIntegrationMessageUpdateRequest PublicChannelIntegrationMessageUpdateRequest

// NewPublicChannelIntegrationMessageUpdateRequest instantiates a new PublicChannelIntegrationMessageUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicChannelIntegrationMessageUpdateRequest(statusType string) *PublicChannelIntegrationMessageUpdateRequest {
	this := PublicChannelIntegrationMessageUpdateRequest{}
	this.StatusType = statusType
	return &this
}

// NewPublicChannelIntegrationMessageUpdateRequestWithDefaults instantiates a new PublicChannelIntegrationMessageUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicChannelIntegrationMessageUpdateRequestWithDefaults() *PublicChannelIntegrationMessageUpdateRequest {
	this := PublicChannelIntegrationMessageUpdateRequest{}
	return &this
}

// GetStatusType returns the StatusType field value
func (o *PublicChannelIntegrationMessageUpdateRequest) GetStatusType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusType
}

// GetStatusTypeOk returns a tuple with the StatusType field value
// and a boolean to check if the value has been set.
func (o *PublicChannelIntegrationMessageUpdateRequest) GetStatusTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusType, true
}

// SetStatusType sets field value
func (o *PublicChannelIntegrationMessageUpdateRequest) SetStatusType(v string) {
	o.StatusType = v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *PublicChannelIntegrationMessageUpdateRequest) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicChannelIntegrationMessageUpdateRequest) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *PublicChannelIntegrationMessageUpdateRequest) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *PublicChannelIntegrationMessageUpdateRequest) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

func (o PublicChannelIntegrationMessageUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicChannelIntegrationMessageUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["statusType"] = o.StatusType
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	return toSerialize, nil
}

func (o *PublicChannelIntegrationMessageUpdateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"statusType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicChannelIntegrationMessageUpdateRequest := _PublicChannelIntegrationMessageUpdateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicChannelIntegrationMessageUpdateRequest)

	if err != nil {
		return err
	}

	*o = PublicChannelIntegrationMessageUpdateRequest(varPublicChannelIntegrationMessageUpdateRequest)

	return err
}

type NullablePublicChannelIntegrationMessageUpdateRequest struct {
	value *PublicChannelIntegrationMessageUpdateRequest
	isSet bool
}

func (v NullablePublicChannelIntegrationMessageUpdateRequest) Get() *PublicChannelIntegrationMessageUpdateRequest {
	return v.value
}

func (v *NullablePublicChannelIntegrationMessageUpdateRequest) Set(val *PublicChannelIntegrationMessageUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicChannelIntegrationMessageUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicChannelIntegrationMessageUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicChannelIntegrationMessageUpdateRequest(val *PublicChannelIntegrationMessageUpdateRequest) *NullablePublicChannelIntegrationMessageUpdateRequest {
	return &NullablePublicChannelIntegrationMessageUpdateRequest{value: val, isSet: true}
}

func (v NullablePublicChannelIntegrationMessageUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicChannelIntegrationMessageUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


