/*
Conversations Custom Channels

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package custom_channels

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChannelIntegrationParticipant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelIntegrationParticipant{}

// ChannelIntegrationParticipant struct for ChannelIntegrationParticipant
type ChannelIntegrationParticipant struct {
	Name *string `json:"name,omitempty"`
	DeliveryIdentifier PublicDeliveryIdentifier `json:"deliveryIdentifier"`
}

type _ChannelIntegrationParticipant ChannelIntegrationParticipant

// NewChannelIntegrationParticipant instantiates a new ChannelIntegrationParticipant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelIntegrationParticipant(deliveryIdentifier PublicDeliveryIdentifier) *ChannelIntegrationParticipant {
	this := ChannelIntegrationParticipant{}
	this.DeliveryIdentifier = deliveryIdentifier
	return &this
}

// NewChannelIntegrationParticipantWithDefaults instantiates a new ChannelIntegrationParticipant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelIntegrationParticipantWithDefaults() *ChannelIntegrationParticipant {
	this := ChannelIntegrationParticipant{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ChannelIntegrationParticipant) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelIntegrationParticipant) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ChannelIntegrationParticipant) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ChannelIntegrationParticipant) SetName(v string) {
	o.Name = &v
}

// GetDeliveryIdentifier returns the DeliveryIdentifier field value
func (o *ChannelIntegrationParticipant) GetDeliveryIdentifier() PublicDeliveryIdentifier {
	if o == nil {
		var ret PublicDeliveryIdentifier
		return ret
	}

	return o.DeliveryIdentifier
}

// GetDeliveryIdentifierOk returns a tuple with the DeliveryIdentifier field value
// and a boolean to check if the value has been set.
func (o *ChannelIntegrationParticipant) GetDeliveryIdentifierOk() (*PublicDeliveryIdentifier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveryIdentifier, true
}

// SetDeliveryIdentifier sets field value
func (o *ChannelIntegrationParticipant) SetDeliveryIdentifier(v PublicDeliveryIdentifier) {
	o.DeliveryIdentifier = v
}

func (o ChannelIntegrationParticipant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelIntegrationParticipant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["deliveryIdentifier"] = o.DeliveryIdentifier
	return toSerialize, nil
}

func (o *ChannelIntegrationParticipant) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deliveryIdentifier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChannelIntegrationParticipant := _ChannelIntegrationParticipant{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChannelIntegrationParticipant)

	if err != nil {
		return err
	}

	*o = ChannelIntegrationParticipant(varChannelIntegrationParticipant)

	return err
}

type NullableChannelIntegrationParticipant struct {
	value *ChannelIntegrationParticipant
	isSet bool
}

func (v NullableChannelIntegrationParticipant) Get() *ChannelIntegrationParticipant {
	return v.value
}

func (v *NullableChannelIntegrationParticipant) Set(val *ChannelIntegrationParticipant) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelIntegrationParticipant) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelIntegrationParticipant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelIntegrationParticipant(val *ChannelIntegrationParticipant) *NullableChannelIntegrationParticipant {
	return &NullableChannelIntegrationParticipant{value: val, isSet: true}
}

func (v NullableChannelIntegrationParticipant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelIntegrationParticipant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


