/*
Conversations Custom Channels

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package custom_channels

import (
	"encoding/json"
)

// checks if the PublicSender type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicSender{}

// PublicSender struct for PublicSender
type PublicSender struct {
	ActorId *string `json:"actorId,omitempty"`
	Name *string `json:"name,omitempty"`
	SenderField *string `json:"senderField,omitempty"`
	DeliveryIdentifier *PublicDeliveryIdentifier `json:"deliveryIdentifier,omitempty"`
}

// NewPublicSender instantiates a new PublicSender object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicSender() *PublicSender {
	this := PublicSender{}
	return &this
}

// NewPublicSenderWithDefaults instantiates a new PublicSender object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicSenderWithDefaults() *PublicSender {
	this := PublicSender{}
	return &this
}

// GetActorId returns the ActorId field value if set, zero value otherwise.
func (o *PublicSender) GetActorId() string {
	if o == nil || IsNil(o.ActorId) {
		var ret string
		return ret
	}
	return *o.ActorId
}

// GetActorIdOk returns a tuple with the ActorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSender) GetActorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ActorId) {
		return nil, false
	}
	return o.ActorId, true
}

// HasActorId returns a boolean if a field has been set.
func (o *PublicSender) HasActorId() bool {
	if o != nil && !IsNil(o.ActorId) {
		return true
	}

	return false
}

// SetActorId gets a reference to the given string and assigns it to the ActorId field.
func (o *PublicSender) SetActorId(v string) {
	o.ActorId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PublicSender) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSender) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PublicSender) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PublicSender) SetName(v string) {
	o.Name = &v
}

// GetSenderField returns the SenderField field value if set, zero value otherwise.
func (o *PublicSender) GetSenderField() string {
	if o == nil || IsNil(o.SenderField) {
		var ret string
		return ret
	}
	return *o.SenderField
}

// GetSenderFieldOk returns a tuple with the SenderField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSender) GetSenderFieldOk() (*string, bool) {
	if o == nil || IsNil(o.SenderField) {
		return nil, false
	}
	return o.SenderField, true
}

// HasSenderField returns a boolean if a field has been set.
func (o *PublicSender) HasSenderField() bool {
	if o != nil && !IsNil(o.SenderField) {
		return true
	}

	return false
}

// SetSenderField gets a reference to the given string and assigns it to the SenderField field.
func (o *PublicSender) SetSenderField(v string) {
	o.SenderField = &v
}

// GetDeliveryIdentifier returns the DeliveryIdentifier field value if set, zero value otherwise.
func (o *PublicSender) GetDeliveryIdentifier() PublicDeliveryIdentifier {
	if o == nil || IsNil(o.DeliveryIdentifier) {
		var ret PublicDeliveryIdentifier
		return ret
	}
	return *o.DeliveryIdentifier
}

// GetDeliveryIdentifierOk returns a tuple with the DeliveryIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSender) GetDeliveryIdentifierOk() (*PublicDeliveryIdentifier, bool) {
	if o == nil || IsNil(o.DeliveryIdentifier) {
		return nil, false
	}
	return o.DeliveryIdentifier, true
}

// HasDeliveryIdentifier returns a boolean if a field has been set.
func (o *PublicSender) HasDeliveryIdentifier() bool {
	if o != nil && !IsNil(o.DeliveryIdentifier) {
		return true
	}

	return false
}

// SetDeliveryIdentifier gets a reference to the given PublicDeliveryIdentifier and assigns it to the DeliveryIdentifier field.
func (o *PublicSender) SetDeliveryIdentifier(v PublicDeliveryIdentifier) {
	o.DeliveryIdentifier = &v
}

func (o PublicSender) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicSender) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActorId) {
		toSerialize["actorId"] = o.ActorId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SenderField) {
		toSerialize["senderField"] = o.SenderField
	}
	if !IsNil(o.DeliveryIdentifier) {
		toSerialize["deliveryIdentifier"] = o.DeliveryIdentifier
	}
	return toSerialize, nil
}

type NullablePublicSender struct {
	value *PublicSender
	isSet bool
}

func (v NullablePublicSender) Get() *PublicSender {
	return v.value
}

func (v *NullablePublicSender) Set(val *PublicSender) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicSender) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicSender) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicSender(val *PublicSender) *NullablePublicSender {
	return &NullablePublicSender{value: val, isSet: true}
}

func (v NullablePublicSender) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicSender) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


