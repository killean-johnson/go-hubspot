/*
Pages

Use these endpoints for interacting with Landing Pages and Site Pages

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pages

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ContentScheduleRequestVNext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContentScheduleRequestVNext{}

// ContentScheduleRequestVNext Request body object for scheduling the publish of content
type ContentScheduleRequestVNext struct {
	// The date the object should transition from scheduled to published.
	PublishDate time.Time `json:"publishDate"`
	// The ID of the object to be scheduled.
	Id string `json:"id"`
}

type _ContentScheduleRequestVNext ContentScheduleRequestVNext

// NewContentScheduleRequestVNext instantiates a new ContentScheduleRequestVNext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentScheduleRequestVNext(publishDate time.Time, id string) *ContentScheduleRequestVNext {
	this := ContentScheduleRequestVNext{}
	this.PublishDate = publishDate
	this.Id = id
	return &this
}

// NewContentScheduleRequestVNextWithDefaults instantiates a new ContentScheduleRequestVNext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentScheduleRequestVNextWithDefaults() *ContentScheduleRequestVNext {
	this := ContentScheduleRequestVNext{}
	return &this
}

// GetPublishDate returns the PublishDate field value
func (o *ContentScheduleRequestVNext) GetPublishDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PublishDate
}

// GetPublishDateOk returns a tuple with the PublishDate field value
// and a boolean to check if the value has been set.
func (o *ContentScheduleRequestVNext) GetPublishDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublishDate, true
}

// SetPublishDate sets field value
func (o *ContentScheduleRequestVNext) SetPublishDate(v time.Time) {
	o.PublishDate = v
}

// GetId returns the Id field value
func (o *ContentScheduleRequestVNext) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ContentScheduleRequestVNext) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ContentScheduleRequestVNext) SetId(v string) {
	o.Id = v
}

func (o ContentScheduleRequestVNext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContentScheduleRequestVNext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["publishDate"] = o.PublishDate
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *ContentScheduleRequestVNext) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"publishDate",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContentScheduleRequestVNext := _ContentScheduleRequestVNext{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContentScheduleRequestVNext)

	if err != nil {
		return err
	}

	*o = ContentScheduleRequestVNext(varContentScheduleRequestVNext)

	return err
}

type NullableContentScheduleRequestVNext struct {
	value *ContentScheduleRequestVNext
	isSet bool
}

func (v NullableContentScheduleRequestVNext) Get() *ContentScheduleRequestVNext {
	return v.value
}

func (v *NullableContentScheduleRequestVNext) Set(val *ContentScheduleRequestVNext) {
	v.value = val
	v.isSet = true
}

func (v NullableContentScheduleRequestVNext) IsSet() bool {
	return v.isSet
}

func (v *NullableContentScheduleRequestVNext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentScheduleRequestVNext(val *ContentScheduleRequestVNext) *NullableContentScheduleRequestVNext {
	return &NullableContentScheduleRequestVNext{value: val, isSet: true}
}

func (v NullableContentScheduleRequestVNext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentScheduleRequestVNext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


