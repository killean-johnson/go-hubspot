/*
Pages

Use these endpoints for interacting with Landing Pages and Site Pages

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pages

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BatchInputPage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchInputPage{}

// BatchInputPage Wrapper for providing an array of pages as inputs.
type BatchInputPage struct {
	// Pages to input.
	Inputs []Page `json:"inputs"`
}

type _BatchInputPage BatchInputPage

// NewBatchInputPage instantiates a new BatchInputPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchInputPage(inputs []Page) *BatchInputPage {
	this := BatchInputPage{}
	this.Inputs = inputs
	return &this
}

// NewBatchInputPageWithDefaults instantiates a new BatchInputPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchInputPageWithDefaults() *BatchInputPage {
	this := BatchInputPage{}
	return &this
}

// GetInputs returns the Inputs field value
func (o *BatchInputPage) GetInputs() []Page {
	if o == nil {
		var ret []Page
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *BatchInputPage) GetInputsOk() ([]Page, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inputs, true
}

// SetInputs sets field value
func (o *BatchInputPage) SetInputs(v []Page) {
	o.Inputs = v
}

func (o BatchInputPage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchInputPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["inputs"] = o.Inputs
	return toSerialize, nil
}

func (o *BatchInputPage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"inputs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBatchInputPage := _BatchInputPage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBatchInputPage)

	if err != nil {
		return err
	}

	*o = BatchInputPage(varBatchInputPage)

	return err
}

type NullableBatchInputPage struct {
	value *BatchInputPage
	isSet bool
}

func (v NullableBatchInputPage) Get() *BatchInputPage {
	return v.value
}

func (v *NullableBatchInputPage) Set(val *BatchInputPage) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchInputPage) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchInputPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchInputPage(val *BatchInputPage) *NullableBatchInputPage {
	return &NullableBatchInputPage{value: val, isSet: true}
}

func (v NullableBatchInputPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchInputPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


