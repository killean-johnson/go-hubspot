/*
Pages

Use these endpoints for interacting with Landing Pages and Site Pages

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pages

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AbTestEndRequestVNext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AbTestEndRequestVNext{}

// AbTestEndRequestVNext Request body object for ending A/B tests.
type AbTestEndRequestVNext struct {
	// ID of the object to designate as the test winner.
	WinnerId string `json:"winnerId"`
	// ID of the test to end.
	AbTestId string `json:"abTestId"`
}

type _AbTestEndRequestVNext AbTestEndRequestVNext

// NewAbTestEndRequestVNext instantiates a new AbTestEndRequestVNext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbTestEndRequestVNext(winnerId string, abTestId string) *AbTestEndRequestVNext {
	this := AbTestEndRequestVNext{}
	this.WinnerId = winnerId
	this.AbTestId = abTestId
	return &this
}

// NewAbTestEndRequestVNextWithDefaults instantiates a new AbTestEndRequestVNext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbTestEndRequestVNextWithDefaults() *AbTestEndRequestVNext {
	this := AbTestEndRequestVNext{}
	return &this
}

// GetWinnerId returns the WinnerId field value
func (o *AbTestEndRequestVNext) GetWinnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WinnerId
}

// GetWinnerIdOk returns a tuple with the WinnerId field value
// and a boolean to check if the value has been set.
func (o *AbTestEndRequestVNext) GetWinnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WinnerId, true
}

// SetWinnerId sets field value
func (o *AbTestEndRequestVNext) SetWinnerId(v string) {
	o.WinnerId = v
}

// GetAbTestId returns the AbTestId field value
func (o *AbTestEndRequestVNext) GetAbTestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AbTestId
}

// GetAbTestIdOk returns a tuple with the AbTestId field value
// and a boolean to check if the value has been set.
func (o *AbTestEndRequestVNext) GetAbTestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbTestId, true
}

// SetAbTestId sets field value
func (o *AbTestEndRequestVNext) SetAbTestId(v string) {
	o.AbTestId = v
}

func (o AbTestEndRequestVNext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AbTestEndRequestVNext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["winnerId"] = o.WinnerId
	toSerialize["abTestId"] = o.AbTestId
	return toSerialize, nil
}

func (o *AbTestEndRequestVNext) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"winnerId",
		"abTestId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAbTestEndRequestVNext := _AbTestEndRequestVNext{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAbTestEndRequestVNext)

	if err != nil {
		return err
	}

	*o = AbTestEndRequestVNext(varAbTestEndRequestVNext)

	return err
}

type NullableAbTestEndRequestVNext struct {
	value *AbTestEndRequestVNext
	isSet bool
}

func (v NullableAbTestEndRequestVNext) Get() *AbTestEndRequestVNext {
	return v.value
}

func (v *NullableAbTestEndRequestVNext) Set(val *AbTestEndRequestVNext) {
	v.value = val
	v.isSet = true
}

func (v NullableAbTestEndRequestVNext) IsSet() bool {
	return v.isSet
}

func (v *NullableAbTestEndRequestVNext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbTestEndRequestVNext(val *AbTestEndRequestVNext) *NullableAbTestEndRequestVNext {
	return &NullableAbTestEndRequestVNext{value: val, isSet: true}
}

func (v NullableAbTestEndRequestVNext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbTestEndRequestVNext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


