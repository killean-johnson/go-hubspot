/*
Pages

Use these endpoints for interacting with Landing Pages and Site Pages

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pages

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Page type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Page{}

// Page Model definition for a landing page or site page.
type Page struct {
	// The date (ISO8601 format) the page is to be published at.
	PublishDate time.Time `json:"publishDate"`
	// The explicitly defined ISO 639 language code of the page. If null, the page will default to the language of the Domain.
	Language string `json:"language"`
	// Boolean to determine whether or not the styles from the template should be applied.
	EnableLayoutStylesheets bool `json:"enableLayoutStylesheets"`
	// A description that goes in <meta> tag on the page.
	MetaDescription string `json:"metaDescription"`
	// List of stylesheets to attach to this page. These stylesheets are attached to just this page. Order of precedence is bottom to top, just like in the HTML.
	AttachedStylesheets []map[string]map[string]interface{} `json:"attachedStylesheets"`
	// Set this to create a password protected page. Entering the password will be required to view the page.
	Password string `json:"password"`
	// Set this to true if you want to be published immediately when the schedule publish endpoint is called, and to ignore the publish_date setting.
	PublishImmediately bool `json:"publishImmediately"`
	// The html title of this page.
	HtmlTitle string `json:"htmlTitle"`
	Translations map[string]ContentLanguageVariation `json:"translations"`
	// The unique ID of the page.
	Id string `json:"id"`
	// An ENUM descibing the current state of this page.
	State string `json:"state"`
	// The path of the this page. This field is appended to the domain to construct the url of this page.
	Slug string `json:"slug"`
	// The ID of the user that created this page.
	CreatedById string `json:"createdById"`
	CurrentlyPublished bool `json:"currentlyPublished"`
	// If True, the page will not show up in your dashboard, although the page could still be live.
	ArchivedInDashboard bool `json:"archivedInDashboard"`
	Created time.Time `json:"created"`
	// An ENUM descibing the type of this object. Should be either LANDING_PAGE or SITE_PAGE.
	ContentTypeCategory string `json:"contentTypeCategory"`
	// The ID of the MAB test (or dynamic test) associated with this page, if applicable
	MabExperimentId string `json:"mabExperimentId"`
	// The ID of the user that updated this page.
	UpdatedById string `json:"updatedById"`
	// ID of the primary page this object was translated from.
	TranslatedFromId string `json:"translatedFromId"`
	// The ID of the associated folder this landing page is organized under in the app dashboard.
	FolderId string `json:"folderId"`
	// A data structure containing the data for all the modules inside the containers for this page. This will only be populated if the page has widget containers.
	WidgetContainers map[string]map[string]interface{} `json:"widgetContainers"`
	// The ID of another page this page's url should redirect to once this page expires. Should only set this or pageExpiryRedirectUrl.
	PageExpiryRedirectId int64 `json:"pageExpiryRedirectId"`
	DynamicPageDataSourceType int32 `json:"dynamicPageDataSourceType"`
	// The featuredImage of this page.
	FeaturedImage string `json:"featuredImage"`
	// The name of the user that updated this page.
	AuthorName string `json:"authorName"`
	// The domain this page will resolve to. If null, the page will default to the primary domain for this content type.
	Domain string `json:"domain"`
	// The internal name of the page.
	Name string `json:"name"`
	// The ID of the HubDB table this page references, if applicable
	DynamicPageHubDbTableId string `json:"dynamicPageHubDbTableId"`
	// The GUID of the marketing campaign this page is a part of.
	Campaign string `json:"campaign"`
	DynamicPageDataSourceId string `json:"dynamicPageDataSourceId"`
	// Boolean to determine whether or not the styles from the template should be applied.
	EnableDomainStylesheets bool `json:"enableDomainStylesheets"`
	// Boolean to determine whether or not the Primary CSS Files should be applied.
	IncludeDefaultCustomCss bool `json:"includeDefaultCustomCss"`
	// Details the type of page this is. Should always be landing_page or site_page
	Subcategory string `json:"subcategory"`
	// 
	LayoutSections map[string]LayoutSection `json:"layoutSections"`
	Updated time.Time `json:"updated"`
	// Custom HTML for embed codes, javascript that should be placed before the </body> tag of the page.
	FooterHtml string `json:"footerHtml"`
	// A data structure containing the data for all the modules for this page.
	Widgets map[string]map[string]interface{} `json:"widgets"`
	// Custom HTML for embed codes, javascript, etc. that goes in the <head> tag of the page.
	HeadHtml string `json:"headHtml"`
	// The URL this page's url should redirect to once this page expires. Should only set this or pageExpiryRedirectId.
	PageExpiryRedirectUrl string `json:"pageExpiryRedirectUrl"`
	// The status of the AB test associated with this page, if applicable
	AbStatus string `json:"abStatus"`
	// Boolean to determine if this page should use a featuredImage.
	UseFeaturedImage bool `json:"useFeaturedImage"`
	// The ID of the AB test associated with this page, if applicable
	AbTestId string `json:"abTestId"`
	// Alt Text of the featuredImage.
	FeaturedImageAltText string `json:"featuredImageAltText"`
	ContentGroupId string `json:"contentGroupId"`
	// Boolean describing if the page expiration feature is enabled for this page
	PageExpiryEnabled bool `json:"pageExpiryEnabled"`
	// String detailing the path of the template used for this page.
	TemplatePath string `json:"templatePath"`
	// A generated field representing the URL of this page.
	Url string `json:"url"`
	// Rules for require member registration to access private content.
	PublicAccessRules []map[string]interface{} `json:"publicAccessRules"`
	// The timestamp (ISO8601 format) when this page was deleted.
	ArchivedAt time.Time `json:"archivedAt"`
	// 
	ThemeSettingsValues map[string]map[string]interface{} `json:"themeSettingsValues"`
	// The date at which this page should expire and begin redirecting to another url or page.
	PageExpiryDate int64 `json:"pageExpiryDate"`
	// Boolean to determine whether or not to respect publicAccessRules.
	PublicAccessRulesEnabled bool `json:"publicAccessRulesEnabled"`
	// A generated Boolean describing whether or not this page is currently expired and being redirected.
	PageRedirected bool `json:"pageRedirected"`
	// A generated ENUM descibing the current state of this page.
	CurrentState string `json:"currentState"`
	// ID of the type of object this is. Should always .
	CategoryId int32 `json:"categoryId"`
	// Optional override to set the URL to be used in the rel=canonical link tag on the page.
	LinkRelCanonicalUrl string `json:"linkRelCanonicalUrl"`
}

type _Page Page

// NewPage instantiates a new Page object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPage(publishDate time.Time, language string, enableLayoutStylesheets bool, metaDescription string, attachedStylesheets []map[string]map[string]interface{}, password string, publishImmediately bool, htmlTitle string, translations map[string]ContentLanguageVariation, id string, state string, slug string, createdById string, currentlyPublished bool, archivedInDashboard bool, created time.Time, contentTypeCategory string, mabExperimentId string, updatedById string, translatedFromId string, folderId string, widgetContainers map[string]map[string]interface{}, pageExpiryRedirectId int64, dynamicPageDataSourceType int32, featuredImage string, authorName string, domain string, name string, dynamicPageHubDbTableId string, campaign string, dynamicPageDataSourceId string, enableDomainStylesheets bool, includeDefaultCustomCss bool, subcategory string, layoutSections map[string]LayoutSection, updated time.Time, footerHtml string, widgets map[string]map[string]interface{}, headHtml string, pageExpiryRedirectUrl string, abStatus string, useFeaturedImage bool, abTestId string, featuredImageAltText string, contentGroupId string, pageExpiryEnabled bool, templatePath string, url string, publicAccessRules []map[string]interface{}, archivedAt time.Time, themeSettingsValues map[string]map[string]interface{}, pageExpiryDate int64, publicAccessRulesEnabled bool, pageRedirected bool, currentState string, categoryId int32, linkRelCanonicalUrl string) *Page {
	this := Page{}
	this.PublishDate = publishDate
	this.Language = language
	this.EnableLayoutStylesheets = enableLayoutStylesheets
	this.MetaDescription = metaDescription
	this.AttachedStylesheets = attachedStylesheets
	this.Password = password
	this.PublishImmediately = publishImmediately
	this.HtmlTitle = htmlTitle
	this.Translations = translations
	this.Id = id
	this.State = state
	this.Slug = slug
	this.CreatedById = createdById
	this.CurrentlyPublished = currentlyPublished
	this.ArchivedInDashboard = archivedInDashboard
	this.Created = created
	this.ContentTypeCategory = contentTypeCategory
	this.MabExperimentId = mabExperimentId
	this.UpdatedById = updatedById
	this.TranslatedFromId = translatedFromId
	this.FolderId = folderId
	this.WidgetContainers = widgetContainers
	this.PageExpiryRedirectId = pageExpiryRedirectId
	this.DynamicPageDataSourceType = dynamicPageDataSourceType
	this.FeaturedImage = featuredImage
	this.AuthorName = authorName
	this.Domain = domain
	this.Name = name
	this.DynamicPageHubDbTableId = dynamicPageHubDbTableId
	this.Campaign = campaign
	this.DynamicPageDataSourceId = dynamicPageDataSourceId
	this.EnableDomainStylesheets = enableDomainStylesheets
	this.IncludeDefaultCustomCss = includeDefaultCustomCss
	this.Subcategory = subcategory
	this.LayoutSections = layoutSections
	this.Updated = updated
	this.FooterHtml = footerHtml
	this.Widgets = widgets
	this.HeadHtml = headHtml
	this.PageExpiryRedirectUrl = pageExpiryRedirectUrl
	this.AbStatus = abStatus
	this.UseFeaturedImage = useFeaturedImage
	this.AbTestId = abTestId
	this.FeaturedImageAltText = featuredImageAltText
	this.ContentGroupId = contentGroupId
	this.PageExpiryEnabled = pageExpiryEnabled
	this.TemplatePath = templatePath
	this.Url = url
	this.PublicAccessRules = publicAccessRules
	this.ArchivedAt = archivedAt
	this.ThemeSettingsValues = themeSettingsValues
	this.PageExpiryDate = pageExpiryDate
	this.PublicAccessRulesEnabled = publicAccessRulesEnabled
	this.PageRedirected = pageRedirected
	this.CurrentState = currentState
	this.CategoryId = categoryId
	this.LinkRelCanonicalUrl = linkRelCanonicalUrl
	return &this
}

// NewPageWithDefaults instantiates a new Page object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageWithDefaults() *Page {
	this := Page{}
	return &this
}

// GetPublishDate returns the PublishDate field value
func (o *Page) GetPublishDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PublishDate
}

// GetPublishDateOk returns a tuple with the PublishDate field value
// and a boolean to check if the value has been set.
func (o *Page) GetPublishDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublishDate, true
}

// SetPublishDate sets field value
func (o *Page) SetPublishDate(v time.Time) {
	o.PublishDate = v
}

// GetLanguage returns the Language field value
func (o *Page) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *Page) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *Page) SetLanguage(v string) {
	o.Language = v
}

// GetEnableLayoutStylesheets returns the EnableLayoutStylesheets field value
func (o *Page) GetEnableLayoutStylesheets() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableLayoutStylesheets
}

// GetEnableLayoutStylesheetsOk returns a tuple with the EnableLayoutStylesheets field value
// and a boolean to check if the value has been set.
func (o *Page) GetEnableLayoutStylesheetsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableLayoutStylesheets, true
}

// SetEnableLayoutStylesheets sets field value
func (o *Page) SetEnableLayoutStylesheets(v bool) {
	o.EnableLayoutStylesheets = v
}

// GetMetaDescription returns the MetaDescription field value
func (o *Page) GetMetaDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaDescription
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value
// and a boolean to check if the value has been set.
func (o *Page) GetMetaDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaDescription, true
}

// SetMetaDescription sets field value
func (o *Page) SetMetaDescription(v string) {
	o.MetaDescription = v
}

// GetAttachedStylesheets returns the AttachedStylesheets field value
func (o *Page) GetAttachedStylesheets() []map[string]map[string]interface{} {
	if o == nil {
		var ret []map[string]map[string]interface{}
		return ret
	}

	return o.AttachedStylesheets
}

// GetAttachedStylesheetsOk returns a tuple with the AttachedStylesheets field value
// and a boolean to check if the value has been set.
func (o *Page) GetAttachedStylesheetsOk() ([]map[string]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachedStylesheets, true
}

// SetAttachedStylesheets sets field value
func (o *Page) SetAttachedStylesheets(v []map[string]map[string]interface{}) {
	o.AttachedStylesheets = v
}

// GetPassword returns the Password field value
func (o *Page) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *Page) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *Page) SetPassword(v string) {
	o.Password = v
}

// GetPublishImmediately returns the PublishImmediately field value
func (o *Page) GetPublishImmediately() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PublishImmediately
}

// GetPublishImmediatelyOk returns a tuple with the PublishImmediately field value
// and a boolean to check if the value has been set.
func (o *Page) GetPublishImmediatelyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublishImmediately, true
}

// SetPublishImmediately sets field value
func (o *Page) SetPublishImmediately(v bool) {
	o.PublishImmediately = v
}

// GetHtmlTitle returns the HtmlTitle field value
func (o *Page) GetHtmlTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlTitle
}

// GetHtmlTitleOk returns a tuple with the HtmlTitle field value
// and a boolean to check if the value has been set.
func (o *Page) GetHtmlTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlTitle, true
}

// SetHtmlTitle sets field value
func (o *Page) SetHtmlTitle(v string) {
	o.HtmlTitle = v
}

// GetTranslations returns the Translations field value
func (o *Page) GetTranslations() map[string]ContentLanguageVariation {
	if o == nil {
		var ret map[string]ContentLanguageVariation
		return ret
	}

	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value
// and a boolean to check if the value has been set.
func (o *Page) GetTranslationsOk() (*map[string]ContentLanguageVariation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Translations, true
}

// SetTranslations sets field value
func (o *Page) SetTranslations(v map[string]ContentLanguageVariation) {
	o.Translations = v
}

// GetId returns the Id field value
func (o *Page) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Page) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Page) SetId(v string) {
	o.Id = v
}

// GetState returns the State field value
func (o *Page) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Page) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Page) SetState(v string) {
	o.State = v
}

// GetSlug returns the Slug field value
func (o *Page) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *Page) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *Page) SetSlug(v string) {
	o.Slug = v
}

// GetCreatedById returns the CreatedById field value
func (o *Page) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *Page) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *Page) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetCurrentlyPublished returns the CurrentlyPublished field value
func (o *Page) GetCurrentlyPublished() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CurrentlyPublished
}

// GetCurrentlyPublishedOk returns a tuple with the CurrentlyPublished field value
// and a boolean to check if the value has been set.
func (o *Page) GetCurrentlyPublishedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentlyPublished, true
}

// SetCurrentlyPublished sets field value
func (o *Page) SetCurrentlyPublished(v bool) {
	o.CurrentlyPublished = v
}

// GetArchivedInDashboard returns the ArchivedInDashboard field value
func (o *Page) GetArchivedInDashboard() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ArchivedInDashboard
}

// GetArchivedInDashboardOk returns a tuple with the ArchivedInDashboard field value
// and a boolean to check if the value has been set.
func (o *Page) GetArchivedInDashboardOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArchivedInDashboard, true
}

// SetArchivedInDashboard sets field value
func (o *Page) SetArchivedInDashboard(v bool) {
	o.ArchivedInDashboard = v
}

// GetCreated returns the Created field value
func (o *Page) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *Page) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *Page) SetCreated(v time.Time) {
	o.Created = v
}

// GetContentTypeCategory returns the ContentTypeCategory field value
func (o *Page) GetContentTypeCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentTypeCategory
}

// GetContentTypeCategoryOk returns a tuple with the ContentTypeCategory field value
// and a boolean to check if the value has been set.
func (o *Page) GetContentTypeCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentTypeCategory, true
}

// SetContentTypeCategory sets field value
func (o *Page) SetContentTypeCategory(v string) {
	o.ContentTypeCategory = v
}

// GetMabExperimentId returns the MabExperimentId field value
func (o *Page) GetMabExperimentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MabExperimentId
}

// GetMabExperimentIdOk returns a tuple with the MabExperimentId field value
// and a boolean to check if the value has been set.
func (o *Page) GetMabExperimentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MabExperimentId, true
}

// SetMabExperimentId sets field value
func (o *Page) SetMabExperimentId(v string) {
	o.MabExperimentId = v
}

// GetUpdatedById returns the UpdatedById field value
func (o *Page) GetUpdatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedById
}

// GetUpdatedByIdOk returns a tuple with the UpdatedById field value
// and a boolean to check if the value has been set.
func (o *Page) GetUpdatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedById, true
}

// SetUpdatedById sets field value
func (o *Page) SetUpdatedById(v string) {
	o.UpdatedById = v
}

// GetTranslatedFromId returns the TranslatedFromId field value
func (o *Page) GetTranslatedFromId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TranslatedFromId
}

// GetTranslatedFromIdOk returns a tuple with the TranslatedFromId field value
// and a boolean to check if the value has been set.
func (o *Page) GetTranslatedFromIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TranslatedFromId, true
}

// SetTranslatedFromId sets field value
func (o *Page) SetTranslatedFromId(v string) {
	o.TranslatedFromId = v
}

// GetFolderId returns the FolderId field value
func (o *Page) GetFolderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value
// and a boolean to check if the value has been set.
func (o *Page) GetFolderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FolderId, true
}

// SetFolderId sets field value
func (o *Page) SetFolderId(v string) {
	o.FolderId = v
}

// GetWidgetContainers returns the WidgetContainers field value
func (o *Page) GetWidgetContainers() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.WidgetContainers
}

// GetWidgetContainersOk returns a tuple with the WidgetContainers field value
// and a boolean to check if the value has been set.
func (o *Page) GetWidgetContainersOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.WidgetContainers, true
}

// SetWidgetContainers sets field value
func (o *Page) SetWidgetContainers(v map[string]map[string]interface{}) {
	o.WidgetContainers = v
}

// GetPageExpiryRedirectId returns the PageExpiryRedirectId field value
func (o *Page) GetPageExpiryRedirectId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PageExpiryRedirectId
}

// GetPageExpiryRedirectIdOk returns a tuple with the PageExpiryRedirectId field value
// and a boolean to check if the value has been set.
func (o *Page) GetPageExpiryRedirectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageExpiryRedirectId, true
}

// SetPageExpiryRedirectId sets field value
func (o *Page) SetPageExpiryRedirectId(v int64) {
	o.PageExpiryRedirectId = v
}

// GetDynamicPageDataSourceType returns the DynamicPageDataSourceType field value
func (o *Page) GetDynamicPageDataSourceType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DynamicPageDataSourceType
}

// GetDynamicPageDataSourceTypeOk returns a tuple with the DynamicPageDataSourceType field value
// and a boolean to check if the value has been set.
func (o *Page) GetDynamicPageDataSourceTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DynamicPageDataSourceType, true
}

// SetDynamicPageDataSourceType sets field value
func (o *Page) SetDynamicPageDataSourceType(v int32) {
	o.DynamicPageDataSourceType = v
}

// GetFeaturedImage returns the FeaturedImage field value
func (o *Page) GetFeaturedImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeaturedImage
}

// GetFeaturedImageOk returns a tuple with the FeaturedImage field value
// and a boolean to check if the value has been set.
func (o *Page) GetFeaturedImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeaturedImage, true
}

// SetFeaturedImage sets field value
func (o *Page) SetFeaturedImage(v string) {
	o.FeaturedImage = v
}

// GetAuthorName returns the AuthorName field value
func (o *Page) GetAuthorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthorName
}

// GetAuthorNameOk returns a tuple with the AuthorName field value
// and a boolean to check if the value has been set.
func (o *Page) GetAuthorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthorName, true
}

// SetAuthorName sets field value
func (o *Page) SetAuthorName(v string) {
	o.AuthorName = v
}

// GetDomain returns the Domain field value
func (o *Page) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *Page) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *Page) SetDomain(v string) {
	o.Domain = v
}

// GetName returns the Name field value
func (o *Page) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Page) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Page) SetName(v string) {
	o.Name = v
}

// GetDynamicPageHubDbTableId returns the DynamicPageHubDbTableId field value
func (o *Page) GetDynamicPageHubDbTableId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DynamicPageHubDbTableId
}

// GetDynamicPageHubDbTableIdOk returns a tuple with the DynamicPageHubDbTableId field value
// and a boolean to check if the value has been set.
func (o *Page) GetDynamicPageHubDbTableIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DynamicPageHubDbTableId, true
}

// SetDynamicPageHubDbTableId sets field value
func (o *Page) SetDynamicPageHubDbTableId(v string) {
	o.DynamicPageHubDbTableId = v
}

// GetCampaign returns the Campaign field value
func (o *Page) GetCampaign() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Campaign
}

// GetCampaignOk returns a tuple with the Campaign field value
// and a boolean to check if the value has been set.
func (o *Page) GetCampaignOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Campaign, true
}

// SetCampaign sets field value
func (o *Page) SetCampaign(v string) {
	o.Campaign = v
}

// GetDynamicPageDataSourceId returns the DynamicPageDataSourceId field value
func (o *Page) GetDynamicPageDataSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DynamicPageDataSourceId
}

// GetDynamicPageDataSourceIdOk returns a tuple with the DynamicPageDataSourceId field value
// and a boolean to check if the value has been set.
func (o *Page) GetDynamicPageDataSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DynamicPageDataSourceId, true
}

// SetDynamicPageDataSourceId sets field value
func (o *Page) SetDynamicPageDataSourceId(v string) {
	o.DynamicPageDataSourceId = v
}

// GetEnableDomainStylesheets returns the EnableDomainStylesheets field value
func (o *Page) GetEnableDomainStylesheets() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableDomainStylesheets
}

// GetEnableDomainStylesheetsOk returns a tuple with the EnableDomainStylesheets field value
// and a boolean to check if the value has been set.
func (o *Page) GetEnableDomainStylesheetsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableDomainStylesheets, true
}

// SetEnableDomainStylesheets sets field value
func (o *Page) SetEnableDomainStylesheets(v bool) {
	o.EnableDomainStylesheets = v
}

// GetIncludeDefaultCustomCss returns the IncludeDefaultCustomCss field value
func (o *Page) GetIncludeDefaultCustomCss() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeDefaultCustomCss
}

// GetIncludeDefaultCustomCssOk returns a tuple with the IncludeDefaultCustomCss field value
// and a boolean to check if the value has been set.
func (o *Page) GetIncludeDefaultCustomCssOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeDefaultCustomCss, true
}

// SetIncludeDefaultCustomCss sets field value
func (o *Page) SetIncludeDefaultCustomCss(v bool) {
	o.IncludeDefaultCustomCss = v
}

// GetSubcategory returns the Subcategory field value
func (o *Page) GetSubcategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subcategory
}

// GetSubcategoryOk returns a tuple with the Subcategory field value
// and a boolean to check if the value has been set.
func (o *Page) GetSubcategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subcategory, true
}

// SetSubcategory sets field value
func (o *Page) SetSubcategory(v string) {
	o.Subcategory = v
}

// GetLayoutSections returns the LayoutSections field value
func (o *Page) GetLayoutSections() map[string]LayoutSection {
	if o == nil {
		var ret map[string]LayoutSection
		return ret
	}

	return o.LayoutSections
}

// GetLayoutSectionsOk returns a tuple with the LayoutSections field value
// and a boolean to check if the value has been set.
func (o *Page) GetLayoutSectionsOk() (*map[string]LayoutSection, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LayoutSections, true
}

// SetLayoutSections sets field value
func (o *Page) SetLayoutSections(v map[string]LayoutSection) {
	o.LayoutSections = v
}

// GetUpdated returns the Updated field value
func (o *Page) GetUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *Page) GetUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *Page) SetUpdated(v time.Time) {
	o.Updated = v
}

// GetFooterHtml returns the FooterHtml field value
func (o *Page) GetFooterHtml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FooterHtml
}

// GetFooterHtmlOk returns a tuple with the FooterHtml field value
// and a boolean to check if the value has been set.
func (o *Page) GetFooterHtmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FooterHtml, true
}

// SetFooterHtml sets field value
func (o *Page) SetFooterHtml(v string) {
	o.FooterHtml = v
}

// GetWidgets returns the Widgets field value
func (o *Page) GetWidgets() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Widgets
}

// GetWidgetsOk returns a tuple with the Widgets field value
// and a boolean to check if the value has been set.
func (o *Page) GetWidgetsOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.Widgets, true
}

// SetWidgets sets field value
func (o *Page) SetWidgets(v map[string]map[string]interface{}) {
	o.Widgets = v
}

// GetHeadHtml returns the HeadHtml field value
func (o *Page) GetHeadHtml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HeadHtml
}

// GetHeadHtmlOk returns a tuple with the HeadHtml field value
// and a boolean to check if the value has been set.
func (o *Page) GetHeadHtmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeadHtml, true
}

// SetHeadHtml sets field value
func (o *Page) SetHeadHtml(v string) {
	o.HeadHtml = v
}

// GetPageExpiryRedirectUrl returns the PageExpiryRedirectUrl field value
func (o *Page) GetPageExpiryRedirectUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PageExpiryRedirectUrl
}

// GetPageExpiryRedirectUrlOk returns a tuple with the PageExpiryRedirectUrl field value
// and a boolean to check if the value has been set.
func (o *Page) GetPageExpiryRedirectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageExpiryRedirectUrl, true
}

// SetPageExpiryRedirectUrl sets field value
func (o *Page) SetPageExpiryRedirectUrl(v string) {
	o.PageExpiryRedirectUrl = v
}

// GetAbStatus returns the AbStatus field value
func (o *Page) GetAbStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AbStatus
}

// GetAbStatusOk returns a tuple with the AbStatus field value
// and a boolean to check if the value has been set.
func (o *Page) GetAbStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbStatus, true
}

// SetAbStatus sets field value
func (o *Page) SetAbStatus(v string) {
	o.AbStatus = v
}

// GetUseFeaturedImage returns the UseFeaturedImage field value
func (o *Page) GetUseFeaturedImage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseFeaturedImage
}

// GetUseFeaturedImageOk returns a tuple with the UseFeaturedImage field value
// and a boolean to check if the value has been set.
func (o *Page) GetUseFeaturedImageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UseFeaturedImage, true
}

// SetUseFeaturedImage sets field value
func (o *Page) SetUseFeaturedImage(v bool) {
	o.UseFeaturedImage = v
}

// GetAbTestId returns the AbTestId field value
func (o *Page) GetAbTestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AbTestId
}

// GetAbTestIdOk returns a tuple with the AbTestId field value
// and a boolean to check if the value has been set.
func (o *Page) GetAbTestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbTestId, true
}

// SetAbTestId sets field value
func (o *Page) SetAbTestId(v string) {
	o.AbTestId = v
}

// GetFeaturedImageAltText returns the FeaturedImageAltText field value
func (o *Page) GetFeaturedImageAltText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeaturedImageAltText
}

// GetFeaturedImageAltTextOk returns a tuple with the FeaturedImageAltText field value
// and a boolean to check if the value has been set.
func (o *Page) GetFeaturedImageAltTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeaturedImageAltText, true
}

// SetFeaturedImageAltText sets field value
func (o *Page) SetFeaturedImageAltText(v string) {
	o.FeaturedImageAltText = v
}

// GetContentGroupId returns the ContentGroupId field value
func (o *Page) GetContentGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentGroupId
}

// GetContentGroupIdOk returns a tuple with the ContentGroupId field value
// and a boolean to check if the value has been set.
func (o *Page) GetContentGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentGroupId, true
}

// SetContentGroupId sets field value
func (o *Page) SetContentGroupId(v string) {
	o.ContentGroupId = v
}

// GetPageExpiryEnabled returns the PageExpiryEnabled field value
func (o *Page) GetPageExpiryEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PageExpiryEnabled
}

// GetPageExpiryEnabledOk returns a tuple with the PageExpiryEnabled field value
// and a boolean to check if the value has been set.
func (o *Page) GetPageExpiryEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageExpiryEnabled, true
}

// SetPageExpiryEnabled sets field value
func (o *Page) SetPageExpiryEnabled(v bool) {
	o.PageExpiryEnabled = v
}

// GetTemplatePath returns the TemplatePath field value
func (o *Page) GetTemplatePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplatePath
}

// GetTemplatePathOk returns a tuple with the TemplatePath field value
// and a boolean to check if the value has been set.
func (o *Page) GetTemplatePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplatePath, true
}

// SetTemplatePath sets field value
func (o *Page) SetTemplatePath(v string) {
	o.TemplatePath = v
}

// GetUrl returns the Url field value
func (o *Page) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Page) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Page) SetUrl(v string) {
	o.Url = v
}

// GetPublicAccessRules returns the PublicAccessRules field value
func (o *Page) GetPublicAccessRules() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.PublicAccessRules
}

// GetPublicAccessRulesOk returns a tuple with the PublicAccessRules field value
// and a boolean to check if the value has been set.
func (o *Page) GetPublicAccessRulesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicAccessRules, true
}

// SetPublicAccessRules sets field value
func (o *Page) SetPublicAccessRules(v []map[string]interface{}) {
	o.PublicAccessRules = v
}

// GetArchivedAt returns the ArchivedAt field value
func (o *Page) GetArchivedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ArchivedAt
}

// GetArchivedAtOk returns a tuple with the ArchivedAt field value
// and a boolean to check if the value has been set.
func (o *Page) GetArchivedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArchivedAt, true
}

// SetArchivedAt sets field value
func (o *Page) SetArchivedAt(v time.Time) {
	o.ArchivedAt = v
}

// GetThemeSettingsValues returns the ThemeSettingsValues field value
func (o *Page) GetThemeSettingsValues() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.ThemeSettingsValues
}

// GetThemeSettingsValuesOk returns a tuple with the ThemeSettingsValues field value
// and a boolean to check if the value has been set.
func (o *Page) GetThemeSettingsValuesOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.ThemeSettingsValues, true
}

// SetThemeSettingsValues sets field value
func (o *Page) SetThemeSettingsValues(v map[string]map[string]interface{}) {
	o.ThemeSettingsValues = v
}

// GetPageExpiryDate returns the PageExpiryDate field value
func (o *Page) GetPageExpiryDate() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PageExpiryDate
}

// GetPageExpiryDateOk returns a tuple with the PageExpiryDate field value
// and a boolean to check if the value has been set.
func (o *Page) GetPageExpiryDateOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageExpiryDate, true
}

// SetPageExpiryDate sets field value
func (o *Page) SetPageExpiryDate(v int64) {
	o.PageExpiryDate = v
}

// GetPublicAccessRulesEnabled returns the PublicAccessRulesEnabled field value
func (o *Page) GetPublicAccessRulesEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PublicAccessRulesEnabled
}

// GetPublicAccessRulesEnabledOk returns a tuple with the PublicAccessRulesEnabled field value
// and a boolean to check if the value has been set.
func (o *Page) GetPublicAccessRulesEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicAccessRulesEnabled, true
}

// SetPublicAccessRulesEnabled sets field value
func (o *Page) SetPublicAccessRulesEnabled(v bool) {
	o.PublicAccessRulesEnabled = v
}

// GetPageRedirected returns the PageRedirected field value
func (o *Page) GetPageRedirected() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PageRedirected
}

// GetPageRedirectedOk returns a tuple with the PageRedirected field value
// and a boolean to check if the value has been set.
func (o *Page) GetPageRedirectedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageRedirected, true
}

// SetPageRedirected sets field value
func (o *Page) SetPageRedirected(v bool) {
	o.PageRedirected = v
}

// GetCurrentState returns the CurrentState field value
func (o *Page) GetCurrentState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrentState
}

// GetCurrentStateOk returns a tuple with the CurrentState field value
// and a boolean to check if the value has been set.
func (o *Page) GetCurrentStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentState, true
}

// SetCurrentState sets field value
func (o *Page) SetCurrentState(v string) {
	o.CurrentState = v
}

// GetCategoryId returns the CategoryId field value
func (o *Page) GetCategoryId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value
// and a boolean to check if the value has been set.
func (o *Page) GetCategoryIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryId, true
}

// SetCategoryId sets field value
func (o *Page) SetCategoryId(v int32) {
	o.CategoryId = v
}

// GetLinkRelCanonicalUrl returns the LinkRelCanonicalUrl field value
func (o *Page) GetLinkRelCanonicalUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkRelCanonicalUrl
}

// GetLinkRelCanonicalUrlOk returns a tuple with the LinkRelCanonicalUrl field value
// and a boolean to check if the value has been set.
func (o *Page) GetLinkRelCanonicalUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinkRelCanonicalUrl, true
}

// SetLinkRelCanonicalUrl sets field value
func (o *Page) SetLinkRelCanonicalUrl(v string) {
	o.LinkRelCanonicalUrl = v
}

func (o Page) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Page) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["publishDate"] = o.PublishDate
	toSerialize["language"] = o.Language
	toSerialize["enableLayoutStylesheets"] = o.EnableLayoutStylesheets
	toSerialize["metaDescription"] = o.MetaDescription
	toSerialize["attachedStylesheets"] = o.AttachedStylesheets
	toSerialize["password"] = o.Password
	toSerialize["publishImmediately"] = o.PublishImmediately
	toSerialize["htmlTitle"] = o.HtmlTitle
	toSerialize["translations"] = o.Translations
	toSerialize["id"] = o.Id
	toSerialize["state"] = o.State
	toSerialize["slug"] = o.Slug
	toSerialize["createdById"] = o.CreatedById
	toSerialize["currentlyPublished"] = o.CurrentlyPublished
	toSerialize["archivedInDashboard"] = o.ArchivedInDashboard
	toSerialize["created"] = o.Created
	toSerialize["contentTypeCategory"] = o.ContentTypeCategory
	toSerialize["mabExperimentId"] = o.MabExperimentId
	toSerialize["updatedById"] = o.UpdatedById
	toSerialize["translatedFromId"] = o.TranslatedFromId
	toSerialize["folderId"] = o.FolderId
	toSerialize["widgetContainers"] = o.WidgetContainers
	toSerialize["pageExpiryRedirectId"] = o.PageExpiryRedirectId
	toSerialize["dynamicPageDataSourceType"] = o.DynamicPageDataSourceType
	toSerialize["featuredImage"] = o.FeaturedImage
	toSerialize["authorName"] = o.AuthorName
	toSerialize["domain"] = o.Domain
	toSerialize["name"] = o.Name
	toSerialize["dynamicPageHubDbTableId"] = o.DynamicPageHubDbTableId
	toSerialize["campaign"] = o.Campaign
	toSerialize["dynamicPageDataSourceId"] = o.DynamicPageDataSourceId
	toSerialize["enableDomainStylesheets"] = o.EnableDomainStylesheets
	toSerialize["includeDefaultCustomCss"] = o.IncludeDefaultCustomCss
	toSerialize["subcategory"] = o.Subcategory
	toSerialize["layoutSections"] = o.LayoutSections
	toSerialize["updated"] = o.Updated
	toSerialize["footerHtml"] = o.FooterHtml
	toSerialize["widgets"] = o.Widgets
	toSerialize["headHtml"] = o.HeadHtml
	toSerialize["pageExpiryRedirectUrl"] = o.PageExpiryRedirectUrl
	toSerialize["abStatus"] = o.AbStatus
	toSerialize["useFeaturedImage"] = o.UseFeaturedImage
	toSerialize["abTestId"] = o.AbTestId
	toSerialize["featuredImageAltText"] = o.FeaturedImageAltText
	toSerialize["contentGroupId"] = o.ContentGroupId
	toSerialize["pageExpiryEnabled"] = o.PageExpiryEnabled
	toSerialize["templatePath"] = o.TemplatePath
	toSerialize["url"] = o.Url
	toSerialize["publicAccessRules"] = o.PublicAccessRules
	toSerialize["archivedAt"] = o.ArchivedAt
	toSerialize["themeSettingsValues"] = o.ThemeSettingsValues
	toSerialize["pageExpiryDate"] = o.PageExpiryDate
	toSerialize["publicAccessRulesEnabled"] = o.PublicAccessRulesEnabled
	toSerialize["pageRedirected"] = o.PageRedirected
	toSerialize["currentState"] = o.CurrentState
	toSerialize["categoryId"] = o.CategoryId
	toSerialize["linkRelCanonicalUrl"] = o.LinkRelCanonicalUrl
	return toSerialize, nil
}

func (o *Page) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"publishDate",
		"language",
		"enableLayoutStylesheets",
		"metaDescription",
		"attachedStylesheets",
		"password",
		"publishImmediately",
		"htmlTitle",
		"translations",
		"id",
		"state",
		"slug",
		"createdById",
		"currentlyPublished",
		"archivedInDashboard",
		"created",
		"contentTypeCategory",
		"mabExperimentId",
		"updatedById",
		"translatedFromId",
		"folderId",
		"widgetContainers",
		"pageExpiryRedirectId",
		"dynamicPageDataSourceType",
		"featuredImage",
		"authorName",
		"domain",
		"name",
		"dynamicPageHubDbTableId",
		"campaign",
		"dynamicPageDataSourceId",
		"enableDomainStylesheets",
		"includeDefaultCustomCss",
		"subcategory",
		"layoutSections",
		"updated",
		"footerHtml",
		"widgets",
		"headHtml",
		"pageExpiryRedirectUrl",
		"abStatus",
		"useFeaturedImage",
		"abTestId",
		"featuredImageAltText",
		"contentGroupId",
		"pageExpiryEnabled",
		"templatePath",
		"url",
		"publicAccessRules",
		"archivedAt",
		"themeSettingsValues",
		"pageExpiryDate",
		"publicAccessRulesEnabled",
		"pageRedirected",
		"currentState",
		"categoryId",
		"linkRelCanonicalUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPage := _Page{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPage)

	if err != nil {
		return err
	}

	*o = Page(varPage)

	return err
}

type NullablePage struct {
	value *Page
	isSet bool
}

func (v NullablePage) Get() *Page {
	return v.value
}

func (v *NullablePage) Set(val *Page) {
	v.value = val
	v.isSet = true
}

func (v NullablePage) IsSet() bool {
	return v.isSet
}

func (v *NullablePage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePage(val *Page) *NullablePage {
	return &NullablePage{value: val, isSet: true}
}

func (v NullablePage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


