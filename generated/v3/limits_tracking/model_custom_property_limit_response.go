/*
Limits Tracking

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package limits_tracking

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomPropertyLimitResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomPropertyLimitResponse{}

// CustomPropertyLimitResponse struct for CustomPropertyLimitResponse
type CustomPropertyLimitResponse struct {
	OverallUsage int64 `json:"overallUsage"`
	ByObjectType []LimitAndUsageForObjectType `json:"byObjectType"`
	OverallLimit int64 `json:"overallLimit"`
	OverallPercentage float32 `json:"overallPercentage"`
}

type _CustomPropertyLimitResponse CustomPropertyLimitResponse

// NewCustomPropertyLimitResponse instantiates a new CustomPropertyLimitResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomPropertyLimitResponse(overallUsage int64, byObjectType []LimitAndUsageForObjectType, overallLimit int64, overallPercentage float32) *CustomPropertyLimitResponse {
	this := CustomPropertyLimitResponse{}
	this.OverallUsage = overallUsage
	this.ByObjectType = byObjectType
	this.OverallLimit = overallLimit
	this.OverallPercentage = overallPercentage
	return &this
}

// NewCustomPropertyLimitResponseWithDefaults instantiates a new CustomPropertyLimitResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomPropertyLimitResponseWithDefaults() *CustomPropertyLimitResponse {
	this := CustomPropertyLimitResponse{}
	return &this
}

// GetOverallUsage returns the OverallUsage field value
func (o *CustomPropertyLimitResponse) GetOverallUsage() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OverallUsage
}

// GetOverallUsageOk returns a tuple with the OverallUsage field value
// and a boolean to check if the value has been set.
func (o *CustomPropertyLimitResponse) GetOverallUsageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OverallUsage, true
}

// SetOverallUsage sets field value
func (o *CustomPropertyLimitResponse) SetOverallUsage(v int64) {
	o.OverallUsage = v
}

// GetByObjectType returns the ByObjectType field value
func (o *CustomPropertyLimitResponse) GetByObjectType() []LimitAndUsageForObjectType {
	if o == nil {
		var ret []LimitAndUsageForObjectType
		return ret
	}

	return o.ByObjectType
}

// GetByObjectTypeOk returns a tuple with the ByObjectType field value
// and a boolean to check if the value has been set.
func (o *CustomPropertyLimitResponse) GetByObjectTypeOk() ([]LimitAndUsageForObjectType, bool) {
	if o == nil {
		return nil, false
	}
	return o.ByObjectType, true
}

// SetByObjectType sets field value
func (o *CustomPropertyLimitResponse) SetByObjectType(v []LimitAndUsageForObjectType) {
	o.ByObjectType = v
}

// GetOverallLimit returns the OverallLimit field value
func (o *CustomPropertyLimitResponse) GetOverallLimit() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OverallLimit
}

// GetOverallLimitOk returns a tuple with the OverallLimit field value
// and a boolean to check if the value has been set.
func (o *CustomPropertyLimitResponse) GetOverallLimitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OverallLimit, true
}

// SetOverallLimit sets field value
func (o *CustomPropertyLimitResponse) SetOverallLimit(v int64) {
	o.OverallLimit = v
}

// GetOverallPercentage returns the OverallPercentage field value
func (o *CustomPropertyLimitResponse) GetOverallPercentage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OverallPercentage
}

// GetOverallPercentageOk returns a tuple with the OverallPercentage field value
// and a boolean to check if the value has been set.
func (o *CustomPropertyLimitResponse) GetOverallPercentageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OverallPercentage, true
}

// SetOverallPercentage sets field value
func (o *CustomPropertyLimitResponse) SetOverallPercentage(v float32) {
	o.OverallPercentage = v
}

func (o CustomPropertyLimitResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomPropertyLimitResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["overallUsage"] = o.OverallUsage
	toSerialize["byObjectType"] = o.ByObjectType
	toSerialize["overallLimit"] = o.OverallLimit
	toSerialize["overallPercentage"] = o.OverallPercentage
	return toSerialize, nil
}

func (o *CustomPropertyLimitResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"overallUsage",
		"byObjectType",
		"overallLimit",
		"overallPercentage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomPropertyLimitResponse := _CustomPropertyLimitResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomPropertyLimitResponse)

	if err != nil {
		return err
	}

	*o = CustomPropertyLimitResponse(varCustomPropertyLimitResponse)

	return err
}

type NullableCustomPropertyLimitResponse struct {
	value *CustomPropertyLimitResponse
	isSet bool
}

func (v NullableCustomPropertyLimitResponse) Get() *CustomPropertyLimitResponse {
	return v.value
}

func (v *NullableCustomPropertyLimitResponse) Set(val *CustomPropertyLimitResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomPropertyLimitResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomPropertyLimitResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomPropertyLimitResponse(val *CustomPropertyLimitResponse) *NullableCustomPropertyLimitResponse {
	return &NullableCustomPropertyLimitResponse{value: val, isSet: true}
}

func (v NullableCustomPropertyLimitResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomPropertyLimitResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


