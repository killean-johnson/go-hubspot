/*
Pipelines

Pipelines represent distinct stages in a workflow, like closing a deal or servicing a support ticket. These endpoints provide access to read and modify pipelines in HubSpot. Pipelines support `deals` and `tickets` object types.  ## Pipeline ID validation  When calling endpoints that take pipelineId as a parameter, that ID must correspond to an existing, un-archived pipeline. Otherwise the request will fail with a `404 Not Found` response.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipelines

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CollectionResponsePipelineNoPaging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectionResponsePipelineNoPaging{}

// CollectionResponsePipelineNoPaging struct for CollectionResponsePipelineNoPaging
type CollectionResponsePipelineNoPaging struct {
	Results []Pipeline `json:"results"`
}

type _CollectionResponsePipelineNoPaging CollectionResponsePipelineNoPaging

// NewCollectionResponsePipelineNoPaging instantiates a new CollectionResponsePipelineNoPaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionResponsePipelineNoPaging(results []Pipeline) *CollectionResponsePipelineNoPaging {
	this := CollectionResponsePipelineNoPaging{}
	this.Results = results
	return &this
}

// NewCollectionResponsePipelineNoPagingWithDefaults instantiates a new CollectionResponsePipelineNoPaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionResponsePipelineNoPagingWithDefaults() *CollectionResponsePipelineNoPaging {
	this := CollectionResponsePipelineNoPaging{}
	return &this
}

// GetResults returns the Results field value
func (o *CollectionResponsePipelineNoPaging) GetResults() []Pipeline {
	if o == nil {
		var ret []Pipeline
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *CollectionResponsePipelineNoPaging) GetResultsOk() ([]Pipeline, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *CollectionResponsePipelineNoPaging) SetResults(v []Pipeline) {
	o.Results = v
}

func (o CollectionResponsePipelineNoPaging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectionResponsePipelineNoPaging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	return toSerialize, nil
}

func (o *CollectionResponsePipelineNoPaging) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"results",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCollectionResponsePipelineNoPaging := _CollectionResponsePipelineNoPaging{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCollectionResponsePipelineNoPaging)

	if err != nil {
		return err
	}

	*o = CollectionResponsePipelineNoPaging(varCollectionResponsePipelineNoPaging)

	return err
}

type NullableCollectionResponsePipelineNoPaging struct {
	value *CollectionResponsePipelineNoPaging
	isSet bool
}

func (v NullableCollectionResponsePipelineNoPaging) Get() *CollectionResponsePipelineNoPaging {
	return v.value
}

func (v *NullableCollectionResponsePipelineNoPaging) Set(val *CollectionResponsePipelineNoPaging) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionResponsePipelineNoPaging) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionResponsePipelineNoPaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionResponsePipelineNoPaging(val *CollectionResponsePipelineNoPaging) *NullableCollectionResponsePipelineNoPaging {
	return &NullableCollectionResponsePipelineNoPaging{value: val, isSet: true}
}

func (v NullableCollectionResponsePipelineNoPaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionResponsePipelineNoPaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


