/*
CRM Public App Feature Flags V3

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package public_app_feature_flags_v3

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PortalFlagStateBatchDeleteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortalFlagStateBatchDeleteRequest{}

// PortalFlagStateBatchDeleteRequest struct for PortalFlagStateBatchDeleteRequest
type PortalFlagStateBatchDeleteRequest struct {
	PortalIds []int32 `json:"portalIds"`
}

type _PortalFlagStateBatchDeleteRequest PortalFlagStateBatchDeleteRequest

// NewPortalFlagStateBatchDeleteRequest instantiates a new PortalFlagStateBatchDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortalFlagStateBatchDeleteRequest(portalIds []int32) *PortalFlagStateBatchDeleteRequest {
	this := PortalFlagStateBatchDeleteRequest{}
	this.PortalIds = portalIds
	return &this
}

// NewPortalFlagStateBatchDeleteRequestWithDefaults instantiates a new PortalFlagStateBatchDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortalFlagStateBatchDeleteRequestWithDefaults() *PortalFlagStateBatchDeleteRequest {
	this := PortalFlagStateBatchDeleteRequest{}
	return &this
}

// GetPortalIds returns the PortalIds field value
func (o *PortalFlagStateBatchDeleteRequest) GetPortalIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.PortalIds
}

// GetPortalIdsOk returns a tuple with the PortalIds field value
// and a boolean to check if the value has been set.
func (o *PortalFlagStateBatchDeleteRequest) GetPortalIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PortalIds, true
}

// SetPortalIds sets field value
func (o *PortalFlagStateBatchDeleteRequest) SetPortalIds(v []int32) {
	o.PortalIds = v
}

func (o PortalFlagStateBatchDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortalFlagStateBatchDeleteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["portalIds"] = o.PortalIds
	return toSerialize, nil
}

func (o *PortalFlagStateBatchDeleteRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"portalIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPortalFlagStateBatchDeleteRequest := _PortalFlagStateBatchDeleteRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPortalFlagStateBatchDeleteRequest)

	if err != nil {
		return err
	}

	*o = PortalFlagStateBatchDeleteRequest(varPortalFlagStateBatchDeleteRequest)

	return err
}

type NullablePortalFlagStateBatchDeleteRequest struct {
	value *PortalFlagStateBatchDeleteRequest
	isSet bool
}

func (v NullablePortalFlagStateBatchDeleteRequest) Get() *PortalFlagStateBatchDeleteRequest {
	return v.value
}

func (v *NullablePortalFlagStateBatchDeleteRequest) Set(val *PortalFlagStateBatchDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePortalFlagStateBatchDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePortalFlagStateBatchDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortalFlagStateBatchDeleteRequest(val *PortalFlagStateBatchDeleteRequest) *NullablePortalFlagStateBatchDeleteRequest {
	return &NullablePortalFlagStateBatchDeleteRequest{value: val, isSet: true}
}

func (v NullablePortalFlagStateBatchDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortalFlagStateBatchDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


