/*
CRM Exports

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package exports

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicExportViewRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicExportViewRequest{}

// PublicExportViewRequest struct for PublicExportViewRequest
type PublicExportViewRequest struct {
	ExportType string `json:"exportType"`
	Format string `json:"format"`
	ExportName string `json:"exportName"`
	ObjectProperties []string `json:"objectProperties"`
	AssociatedObjectType *string `json:"associatedObjectType,omitempty"`
	ObjectType string `json:"objectType"`
	Language string `json:"language"`
	ExportInternalValuesOptions []string `json:"exportInternalValuesOptions"`
	OverrideAssociatedObjectsPerDefinitionPerRowLimit bool `json:"overrideAssociatedObjectsPerDefinitionPerRowLimit"`
	PublicCrmSearchRequest *PublicCrmSearchRequest `json:"publicCrmSearchRequest,omitempty"`
	ListId string `json:"listId"`
}

type _PublicExportViewRequest PublicExportViewRequest

// NewPublicExportViewRequest instantiates a new PublicExportViewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicExportViewRequest(exportType string, format string, exportName string, objectProperties []string, objectType string, language string, exportInternalValuesOptions []string, overrideAssociatedObjectsPerDefinitionPerRowLimit bool, listId string) *PublicExportViewRequest {
	this := PublicExportViewRequest{}
	this.ExportType = exportType
	this.Format = format
	this.ExportName = exportName
	this.ObjectProperties = objectProperties
	this.ObjectType = objectType
	this.Language = language
	this.ExportInternalValuesOptions = exportInternalValuesOptions
	this.OverrideAssociatedObjectsPerDefinitionPerRowLimit = overrideAssociatedObjectsPerDefinitionPerRowLimit
	this.ListId = listId
	return &this
}

// NewPublicExportViewRequestWithDefaults instantiates a new PublicExportViewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicExportViewRequestWithDefaults() *PublicExportViewRequest {
	this := PublicExportViewRequest{}
	var exportType string = "VIEW"
	this.ExportType = exportType
	return &this
}

// GetExportType returns the ExportType field value
func (o *PublicExportViewRequest) GetExportType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExportType
}

// GetExportTypeOk returns a tuple with the ExportType field value
// and a boolean to check if the value has been set.
func (o *PublicExportViewRequest) GetExportTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExportType, true
}

// SetExportType sets field value
func (o *PublicExportViewRequest) SetExportType(v string) {
	o.ExportType = v
}

// GetFormat returns the Format field value
func (o *PublicExportViewRequest) GetFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Format
}

// GetFormatOk returns a tuple with the Format field value
// and a boolean to check if the value has been set.
func (o *PublicExportViewRequest) GetFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Format, true
}

// SetFormat sets field value
func (o *PublicExportViewRequest) SetFormat(v string) {
	o.Format = v
}

// GetExportName returns the ExportName field value
func (o *PublicExportViewRequest) GetExportName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExportName
}

// GetExportNameOk returns a tuple with the ExportName field value
// and a boolean to check if the value has been set.
func (o *PublicExportViewRequest) GetExportNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExportName, true
}

// SetExportName sets field value
func (o *PublicExportViewRequest) SetExportName(v string) {
	o.ExportName = v
}

// GetObjectProperties returns the ObjectProperties field value
func (o *PublicExportViewRequest) GetObjectProperties() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value
// and a boolean to check if the value has been set.
func (o *PublicExportViewRequest) GetObjectPropertiesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectProperties, true
}

// SetObjectProperties sets field value
func (o *PublicExportViewRequest) SetObjectProperties(v []string) {
	o.ObjectProperties = v
}

// GetAssociatedObjectType returns the AssociatedObjectType field value if set, zero value otherwise.
func (o *PublicExportViewRequest) GetAssociatedObjectType() string {
	if o == nil || IsNil(o.AssociatedObjectType) {
		var ret string
		return ret
	}
	return *o.AssociatedObjectType
}

// GetAssociatedObjectTypeOk returns a tuple with the AssociatedObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicExportViewRequest) GetAssociatedObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AssociatedObjectType) {
		return nil, false
	}
	return o.AssociatedObjectType, true
}

// HasAssociatedObjectType returns a boolean if a field has been set.
func (o *PublicExportViewRequest) HasAssociatedObjectType() bool {
	if o != nil && !IsNil(o.AssociatedObjectType) {
		return true
	}

	return false
}

// SetAssociatedObjectType gets a reference to the given string and assigns it to the AssociatedObjectType field.
func (o *PublicExportViewRequest) SetAssociatedObjectType(v string) {
	o.AssociatedObjectType = &v
}

// GetObjectType returns the ObjectType field value
func (o *PublicExportViewRequest) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *PublicExportViewRequest) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *PublicExportViewRequest) SetObjectType(v string) {
	o.ObjectType = v
}

// GetLanguage returns the Language field value
func (o *PublicExportViewRequest) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *PublicExportViewRequest) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *PublicExportViewRequest) SetLanguage(v string) {
	o.Language = v
}

// GetExportInternalValuesOptions returns the ExportInternalValuesOptions field value
func (o *PublicExportViewRequest) GetExportInternalValuesOptions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ExportInternalValuesOptions
}

// GetExportInternalValuesOptionsOk returns a tuple with the ExportInternalValuesOptions field value
// and a boolean to check if the value has been set.
func (o *PublicExportViewRequest) GetExportInternalValuesOptionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExportInternalValuesOptions, true
}

// SetExportInternalValuesOptions sets field value
func (o *PublicExportViewRequest) SetExportInternalValuesOptions(v []string) {
	o.ExportInternalValuesOptions = v
}

// GetOverrideAssociatedObjectsPerDefinitionPerRowLimit returns the OverrideAssociatedObjectsPerDefinitionPerRowLimit field value
func (o *PublicExportViewRequest) GetOverrideAssociatedObjectsPerDefinitionPerRowLimit() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OverrideAssociatedObjectsPerDefinitionPerRowLimit
}

// GetOverrideAssociatedObjectsPerDefinitionPerRowLimitOk returns a tuple with the OverrideAssociatedObjectsPerDefinitionPerRowLimit field value
// and a boolean to check if the value has been set.
func (o *PublicExportViewRequest) GetOverrideAssociatedObjectsPerDefinitionPerRowLimitOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OverrideAssociatedObjectsPerDefinitionPerRowLimit, true
}

// SetOverrideAssociatedObjectsPerDefinitionPerRowLimit sets field value
func (o *PublicExportViewRequest) SetOverrideAssociatedObjectsPerDefinitionPerRowLimit(v bool) {
	o.OverrideAssociatedObjectsPerDefinitionPerRowLimit = v
}

// GetPublicCrmSearchRequest returns the PublicCrmSearchRequest field value if set, zero value otherwise.
func (o *PublicExportViewRequest) GetPublicCrmSearchRequest() PublicCrmSearchRequest {
	if o == nil || IsNil(o.PublicCrmSearchRequest) {
		var ret PublicCrmSearchRequest
		return ret
	}
	return *o.PublicCrmSearchRequest
}

// GetPublicCrmSearchRequestOk returns a tuple with the PublicCrmSearchRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicExportViewRequest) GetPublicCrmSearchRequestOk() (*PublicCrmSearchRequest, bool) {
	if o == nil || IsNil(o.PublicCrmSearchRequest) {
		return nil, false
	}
	return o.PublicCrmSearchRequest, true
}

// HasPublicCrmSearchRequest returns a boolean if a field has been set.
func (o *PublicExportViewRequest) HasPublicCrmSearchRequest() bool {
	if o != nil && !IsNil(o.PublicCrmSearchRequest) {
		return true
	}

	return false
}

// SetPublicCrmSearchRequest gets a reference to the given PublicCrmSearchRequest and assigns it to the PublicCrmSearchRequest field.
func (o *PublicExportViewRequest) SetPublicCrmSearchRequest(v PublicCrmSearchRequest) {
	o.PublicCrmSearchRequest = &v
}

// GetListId returns the ListId field value
func (o *PublicExportViewRequest) GetListId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ListId
}

// GetListIdOk returns a tuple with the ListId field value
// and a boolean to check if the value has been set.
func (o *PublicExportViewRequest) GetListIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ListId, true
}

// SetListId sets field value
func (o *PublicExportViewRequest) SetListId(v string) {
	o.ListId = v
}

func (o PublicExportViewRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicExportViewRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["exportType"] = o.ExportType
	toSerialize["format"] = o.Format
	toSerialize["exportName"] = o.ExportName
	toSerialize["objectProperties"] = o.ObjectProperties
	if !IsNil(o.AssociatedObjectType) {
		toSerialize["associatedObjectType"] = o.AssociatedObjectType
	}
	toSerialize["objectType"] = o.ObjectType
	toSerialize["language"] = o.Language
	toSerialize["exportInternalValuesOptions"] = o.ExportInternalValuesOptions
	toSerialize["overrideAssociatedObjectsPerDefinitionPerRowLimit"] = o.OverrideAssociatedObjectsPerDefinitionPerRowLimit
	if !IsNil(o.PublicCrmSearchRequest) {
		toSerialize["publicCrmSearchRequest"] = o.PublicCrmSearchRequest
	}
	toSerialize["listId"] = o.ListId
	return toSerialize, nil
}

func (o *PublicExportViewRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"exportType",
		"format",
		"exportName",
		"objectProperties",
		"objectType",
		"language",
		"exportInternalValuesOptions",
		"overrideAssociatedObjectsPerDefinitionPerRowLimit",
		"listId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicExportViewRequest := _PublicExportViewRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicExportViewRequest)

	if err != nil {
		return err
	}

	*o = PublicExportViewRequest(varPublicExportViewRequest)

	return err
}

type NullablePublicExportViewRequest struct {
	value *PublicExportViewRequest
	isSet bool
}

func (v NullablePublicExportViewRequest) Get() *PublicExportViewRequest {
	return v.value
}

func (v *NullablePublicExportViewRequest) Set(val *PublicExportViewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicExportViewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicExportViewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicExportViewRequest(val *PublicExportViewRequest) *NullablePublicExportViewRequest {
	return &NullablePublicExportViewRequest{value: val, isSet: true}
}

func (v NullablePublicExportViewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicExportViewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


