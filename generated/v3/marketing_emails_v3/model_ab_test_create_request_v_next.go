/*
Marketing Emails V3

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_emails_v3

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AbTestCreateRequestVNext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AbTestCreateRequestVNext{}

// AbTestCreateRequestVNext Request body object for creating A/B tests.
type AbTestCreateRequestVNext struct {
	VariationName string `json:"variationName"`
	// ID of the object to test.
	ContentId string `json:"contentId"`
}

type _AbTestCreateRequestVNext AbTestCreateRequestVNext

// NewAbTestCreateRequestVNext instantiates a new AbTestCreateRequestVNext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbTestCreateRequestVNext(variationName string, contentId string) *AbTestCreateRequestVNext {
	this := AbTestCreateRequestVNext{}
	this.VariationName = variationName
	this.ContentId = contentId
	return &this
}

// NewAbTestCreateRequestVNextWithDefaults instantiates a new AbTestCreateRequestVNext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbTestCreateRequestVNextWithDefaults() *AbTestCreateRequestVNext {
	this := AbTestCreateRequestVNext{}
	return &this
}

// GetVariationName returns the VariationName field value
func (o *AbTestCreateRequestVNext) GetVariationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VariationName
}

// GetVariationNameOk returns a tuple with the VariationName field value
// and a boolean to check if the value has been set.
func (o *AbTestCreateRequestVNext) GetVariationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VariationName, true
}

// SetVariationName sets field value
func (o *AbTestCreateRequestVNext) SetVariationName(v string) {
	o.VariationName = v
}

// GetContentId returns the ContentId field value
func (o *AbTestCreateRequestVNext) GetContentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentId
}

// GetContentIdOk returns a tuple with the ContentId field value
// and a boolean to check if the value has been set.
func (o *AbTestCreateRequestVNext) GetContentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentId, true
}

// SetContentId sets field value
func (o *AbTestCreateRequestVNext) SetContentId(v string) {
	o.ContentId = v
}

func (o AbTestCreateRequestVNext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AbTestCreateRequestVNext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["variationName"] = o.VariationName
	toSerialize["contentId"] = o.ContentId
	return toSerialize, nil
}

func (o *AbTestCreateRequestVNext) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"variationName",
		"contentId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAbTestCreateRequestVNext := _AbTestCreateRequestVNext{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAbTestCreateRequestVNext)

	if err != nil {
		return err
	}

	*o = AbTestCreateRequestVNext(varAbTestCreateRequestVNext)

	return err
}

type NullableAbTestCreateRequestVNext struct {
	value *AbTestCreateRequestVNext
	isSet bool
}

func (v NullableAbTestCreateRequestVNext) Get() *AbTestCreateRequestVNext {
	return v.value
}

func (v *NullableAbTestCreateRequestVNext) Set(val *AbTestCreateRequestVNext) {
	v.value = val
	v.isSet = true
}

func (v NullableAbTestCreateRequestVNext) IsSet() bool {
	return v.isSet
}

func (v *NullableAbTestCreateRequestVNext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbTestCreateRequestVNext(val *AbTestCreateRequestVNext) *NullableAbTestCreateRequestVNext {
	return &NullableAbTestCreateRequestVNext{value: val, isSet: true}
}

func (v NullableAbTestCreateRequestVNext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbTestCreateRequestVNext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


