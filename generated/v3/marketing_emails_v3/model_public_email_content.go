/*
Marketing Emails V3

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_emails_v3

import (
	"encoding/json"
)

// checks if the PublicEmailContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicEmailContent{}

// PublicEmailContent Data structure representing the content of the email.
type PublicEmailContent struct {
	// 
	SmartFields map[string]map[string]interface{} `json:"smartFields,omitempty"`
	// 
	ThemeSettingsValues map[string]map[string]interface{} `json:"themeSettingsValues,omitempty"`
	// 
	FlexAreas map[string]map[string]interface{} `json:"flexAreas,omitempty"`
	// 
	Widgets map[string]map[string]interface{} `json:"widgets,omitempty"`
	// 
	PlainTextVersion *string `json:"plainTextVersion,omitempty"`
	// 
	TemplatePath *string `json:"templatePath,omitempty"`
	// 
	WidgetContainers map[string]map[string]interface{} `json:"widgetContainers,omitempty"`
	StyleSettings map[string]interface{} `json:"styleSettings,omitempty"`
}

// NewPublicEmailContent instantiates a new PublicEmailContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicEmailContent() *PublicEmailContent {
	this := PublicEmailContent{}
	return &this
}

// NewPublicEmailContentWithDefaults instantiates a new PublicEmailContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicEmailContentWithDefaults() *PublicEmailContent {
	this := PublicEmailContent{}
	return &this
}

// GetSmartFields returns the SmartFields field value if set, zero value otherwise.
func (o *PublicEmailContent) GetSmartFields() map[string]map[string]interface{} {
	if o == nil || IsNil(o.SmartFields) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.SmartFields
}

// GetSmartFieldsOk returns a tuple with the SmartFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailContent) GetSmartFieldsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.SmartFields) {
		return map[string]map[string]interface{}{}, false
	}
	return o.SmartFields, true
}

// HasSmartFields returns a boolean if a field has been set.
func (o *PublicEmailContent) HasSmartFields() bool {
	if o != nil && !IsNil(o.SmartFields) {
		return true
	}

	return false
}

// SetSmartFields gets a reference to the given map[string]map[string]interface{} and assigns it to the SmartFields field.
func (o *PublicEmailContent) SetSmartFields(v map[string]map[string]interface{}) {
	o.SmartFields = v
}

// GetThemeSettingsValues returns the ThemeSettingsValues field value if set, zero value otherwise.
func (o *PublicEmailContent) GetThemeSettingsValues() map[string]map[string]interface{} {
	if o == nil || IsNil(o.ThemeSettingsValues) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.ThemeSettingsValues
}

// GetThemeSettingsValuesOk returns a tuple with the ThemeSettingsValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailContent) GetThemeSettingsValuesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.ThemeSettingsValues) {
		return map[string]map[string]interface{}{}, false
	}
	return o.ThemeSettingsValues, true
}

// HasThemeSettingsValues returns a boolean if a field has been set.
func (o *PublicEmailContent) HasThemeSettingsValues() bool {
	if o != nil && !IsNil(o.ThemeSettingsValues) {
		return true
	}

	return false
}

// SetThemeSettingsValues gets a reference to the given map[string]map[string]interface{} and assigns it to the ThemeSettingsValues field.
func (o *PublicEmailContent) SetThemeSettingsValues(v map[string]map[string]interface{}) {
	o.ThemeSettingsValues = v
}

// GetFlexAreas returns the FlexAreas field value if set, zero value otherwise.
func (o *PublicEmailContent) GetFlexAreas() map[string]map[string]interface{} {
	if o == nil || IsNil(o.FlexAreas) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.FlexAreas
}

// GetFlexAreasOk returns a tuple with the FlexAreas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailContent) GetFlexAreasOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.FlexAreas) {
		return map[string]map[string]interface{}{}, false
	}
	return o.FlexAreas, true
}

// HasFlexAreas returns a boolean if a field has been set.
func (o *PublicEmailContent) HasFlexAreas() bool {
	if o != nil && !IsNil(o.FlexAreas) {
		return true
	}

	return false
}

// SetFlexAreas gets a reference to the given map[string]map[string]interface{} and assigns it to the FlexAreas field.
func (o *PublicEmailContent) SetFlexAreas(v map[string]map[string]interface{}) {
	o.FlexAreas = v
}

// GetWidgets returns the Widgets field value if set, zero value otherwise.
func (o *PublicEmailContent) GetWidgets() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Widgets) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Widgets
}

// GetWidgetsOk returns a tuple with the Widgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailContent) GetWidgetsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Widgets) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Widgets, true
}

// HasWidgets returns a boolean if a field has been set.
func (o *PublicEmailContent) HasWidgets() bool {
	if o != nil && !IsNil(o.Widgets) {
		return true
	}

	return false
}

// SetWidgets gets a reference to the given map[string]map[string]interface{} and assigns it to the Widgets field.
func (o *PublicEmailContent) SetWidgets(v map[string]map[string]interface{}) {
	o.Widgets = v
}

// GetPlainTextVersion returns the PlainTextVersion field value if set, zero value otherwise.
func (o *PublicEmailContent) GetPlainTextVersion() string {
	if o == nil || IsNil(o.PlainTextVersion) {
		var ret string
		return ret
	}
	return *o.PlainTextVersion
}

// GetPlainTextVersionOk returns a tuple with the PlainTextVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailContent) GetPlainTextVersionOk() (*string, bool) {
	if o == nil || IsNil(o.PlainTextVersion) {
		return nil, false
	}
	return o.PlainTextVersion, true
}

// HasPlainTextVersion returns a boolean if a field has been set.
func (o *PublicEmailContent) HasPlainTextVersion() bool {
	if o != nil && !IsNil(o.PlainTextVersion) {
		return true
	}

	return false
}

// SetPlainTextVersion gets a reference to the given string and assigns it to the PlainTextVersion field.
func (o *PublicEmailContent) SetPlainTextVersion(v string) {
	o.PlainTextVersion = &v
}

// GetTemplatePath returns the TemplatePath field value if set, zero value otherwise.
func (o *PublicEmailContent) GetTemplatePath() string {
	if o == nil || IsNil(o.TemplatePath) {
		var ret string
		return ret
	}
	return *o.TemplatePath
}

// GetTemplatePathOk returns a tuple with the TemplatePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailContent) GetTemplatePathOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatePath) {
		return nil, false
	}
	return o.TemplatePath, true
}

// HasTemplatePath returns a boolean if a field has been set.
func (o *PublicEmailContent) HasTemplatePath() bool {
	if o != nil && !IsNil(o.TemplatePath) {
		return true
	}

	return false
}

// SetTemplatePath gets a reference to the given string and assigns it to the TemplatePath field.
func (o *PublicEmailContent) SetTemplatePath(v string) {
	o.TemplatePath = &v
}

// GetWidgetContainers returns the WidgetContainers field value if set, zero value otherwise.
func (o *PublicEmailContent) GetWidgetContainers() map[string]map[string]interface{} {
	if o == nil || IsNil(o.WidgetContainers) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.WidgetContainers
}

// GetWidgetContainersOk returns a tuple with the WidgetContainers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailContent) GetWidgetContainersOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.WidgetContainers) {
		return map[string]map[string]interface{}{}, false
	}
	return o.WidgetContainers, true
}

// HasWidgetContainers returns a boolean if a field has been set.
func (o *PublicEmailContent) HasWidgetContainers() bool {
	if o != nil && !IsNil(o.WidgetContainers) {
		return true
	}

	return false
}

// SetWidgetContainers gets a reference to the given map[string]map[string]interface{} and assigns it to the WidgetContainers field.
func (o *PublicEmailContent) SetWidgetContainers(v map[string]map[string]interface{}) {
	o.WidgetContainers = v
}

// GetStyleSettings returns the StyleSettings field value if set, zero value otherwise.
func (o *PublicEmailContent) GetStyleSettings() map[string]interface{} {
	if o == nil || IsNil(o.StyleSettings) {
		var ret map[string]interface{}
		return ret
	}
	return o.StyleSettings
}

// GetStyleSettingsOk returns a tuple with the StyleSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicEmailContent) GetStyleSettingsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.StyleSettings) {
		return map[string]interface{}{}, false
	}
	return o.StyleSettings, true
}

// HasStyleSettings returns a boolean if a field has been set.
func (o *PublicEmailContent) HasStyleSettings() bool {
	if o != nil && !IsNil(o.StyleSettings) {
		return true
	}

	return false
}

// SetStyleSettings gets a reference to the given map[string]interface{} and assigns it to the StyleSettings field.
func (o *PublicEmailContent) SetStyleSettings(v map[string]interface{}) {
	o.StyleSettings = v
}

func (o PublicEmailContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicEmailContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SmartFields) {
		toSerialize["smartFields"] = o.SmartFields
	}
	if !IsNil(o.ThemeSettingsValues) {
		toSerialize["themeSettingsValues"] = o.ThemeSettingsValues
	}
	if !IsNil(o.FlexAreas) {
		toSerialize["flexAreas"] = o.FlexAreas
	}
	if !IsNil(o.Widgets) {
		toSerialize["widgets"] = o.Widgets
	}
	if !IsNil(o.PlainTextVersion) {
		toSerialize["plainTextVersion"] = o.PlainTextVersion
	}
	if !IsNil(o.TemplatePath) {
		toSerialize["templatePath"] = o.TemplatePath
	}
	if !IsNil(o.WidgetContainers) {
		toSerialize["widgetContainers"] = o.WidgetContainers
	}
	if !IsNil(o.StyleSettings) {
		toSerialize["styleSettings"] = o.StyleSettings
	}
	return toSerialize, nil
}

type NullablePublicEmailContent struct {
	value *PublicEmailContent
	isSet bool
}

func (v NullablePublicEmailContent) Get() *PublicEmailContent {
	return v.value
}

func (v *NullablePublicEmailContent) Set(val *PublicEmailContent) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicEmailContent) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicEmailContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicEmailContent(val *PublicEmailContent) *NullablePublicEmailContent {
	return &NullablePublicEmailContent{value: val, isSet: true}
}

func (v NullablePublicEmailContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicEmailContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


