/*
Marketing Emails V3

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_emails_v3

import (
	"encoding/json"
	"time"
)

// checks if the PublicWebversionDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicWebversionDetails{}

// PublicWebversionDetails struct for PublicWebversionDetails
type PublicWebversionDetails struct {
	// 
	Domain *string `json:"domain,omitempty"`
	// 
	RedirectToPageId *string `json:"redirectToPageId,omitempty"`
	// 
	RedirectToUrl *string `json:"redirectToUrl,omitempty"`
	// 
	Title *string `json:"title,omitempty"`
	// 
	MetaDescription *string `json:"metaDescription,omitempty"`
	// 
	Slug *string `json:"slug,omitempty"`
	// 
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`
}

// NewPublicWebversionDetails instantiates a new PublicWebversionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicWebversionDetails() *PublicWebversionDetails {
	this := PublicWebversionDetails{}
	return &this
}

// NewPublicWebversionDetailsWithDefaults instantiates a new PublicWebversionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicWebversionDetailsWithDefaults() *PublicWebversionDetails {
	this := PublicWebversionDetails{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *PublicWebversionDetails) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicWebversionDetails) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *PublicWebversionDetails) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *PublicWebversionDetails) SetDomain(v string) {
	o.Domain = &v
}

// GetRedirectToPageId returns the RedirectToPageId field value if set, zero value otherwise.
func (o *PublicWebversionDetails) GetRedirectToPageId() string {
	if o == nil || IsNil(o.RedirectToPageId) {
		var ret string
		return ret
	}
	return *o.RedirectToPageId
}

// GetRedirectToPageIdOk returns a tuple with the RedirectToPageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicWebversionDetails) GetRedirectToPageIdOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectToPageId) {
		return nil, false
	}
	return o.RedirectToPageId, true
}

// HasRedirectToPageId returns a boolean if a field has been set.
func (o *PublicWebversionDetails) HasRedirectToPageId() bool {
	if o != nil && !IsNil(o.RedirectToPageId) {
		return true
	}

	return false
}

// SetRedirectToPageId gets a reference to the given string and assigns it to the RedirectToPageId field.
func (o *PublicWebversionDetails) SetRedirectToPageId(v string) {
	o.RedirectToPageId = &v
}

// GetRedirectToUrl returns the RedirectToUrl field value if set, zero value otherwise.
func (o *PublicWebversionDetails) GetRedirectToUrl() string {
	if o == nil || IsNil(o.RedirectToUrl) {
		var ret string
		return ret
	}
	return *o.RedirectToUrl
}

// GetRedirectToUrlOk returns a tuple with the RedirectToUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicWebversionDetails) GetRedirectToUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectToUrl) {
		return nil, false
	}
	return o.RedirectToUrl, true
}

// HasRedirectToUrl returns a boolean if a field has been set.
func (o *PublicWebversionDetails) HasRedirectToUrl() bool {
	if o != nil && !IsNil(o.RedirectToUrl) {
		return true
	}

	return false
}

// SetRedirectToUrl gets a reference to the given string and assigns it to the RedirectToUrl field.
func (o *PublicWebversionDetails) SetRedirectToUrl(v string) {
	o.RedirectToUrl = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PublicWebversionDetails) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicWebversionDetails) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PublicWebversionDetails) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PublicWebversionDetails) SetTitle(v string) {
	o.Title = &v
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise.
func (o *PublicWebversionDetails) GetMetaDescription() string {
	if o == nil || IsNil(o.MetaDescription) {
		var ret string
		return ret
	}
	return *o.MetaDescription
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicWebversionDetails) GetMetaDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MetaDescription) {
		return nil, false
	}
	return o.MetaDescription, true
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *PublicWebversionDetails) HasMetaDescription() bool {
	if o != nil && !IsNil(o.MetaDescription) {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given string and assigns it to the MetaDescription field.
func (o *PublicWebversionDetails) SetMetaDescription(v string) {
	o.MetaDescription = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *PublicWebversionDetails) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicWebversionDetails) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *PublicWebversionDetails) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *PublicWebversionDetails) SetSlug(v string) {
	o.Slug = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *PublicWebversionDetails) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicWebversionDetails) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *PublicWebversionDetails) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *PublicWebversionDetails) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

func (o PublicWebversionDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicWebversionDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.RedirectToPageId) {
		toSerialize["redirectToPageId"] = o.RedirectToPageId
	}
	if !IsNil(o.RedirectToUrl) {
		toSerialize["redirectToUrl"] = o.RedirectToUrl
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.MetaDescription) {
		toSerialize["metaDescription"] = o.MetaDescription
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	return toSerialize, nil
}

type NullablePublicWebversionDetails struct {
	value *PublicWebversionDetails
	isSet bool
}

func (v NullablePublicWebversionDetails) Get() *PublicWebversionDetails {
	return v.value
}

func (v *NullablePublicWebversionDetails) Set(val *PublicWebversionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicWebversionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicWebversionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicWebversionDetails(val *PublicWebversionDetails) *NullablePublicWebversionDetails {
	return &NullablePublicWebversionDetails{value: val, isSet: true}
}

func (v NullablePublicWebversionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicWebversionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


