/*
Object Library

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package object_library

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PortalObjectTypeEnablementPublicResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortalObjectTypeEnablementPublicResponse{}

// PortalObjectTypeEnablementPublicResponse struct for PortalObjectTypeEnablementPublicResponse
type PortalObjectTypeEnablementPublicResponse struct {
	EnablementByObjectTypeId map[string]bool `json:"enablementByObjectTypeId"`
}

type _PortalObjectTypeEnablementPublicResponse PortalObjectTypeEnablementPublicResponse

// NewPortalObjectTypeEnablementPublicResponse instantiates a new PortalObjectTypeEnablementPublicResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortalObjectTypeEnablementPublicResponse(enablementByObjectTypeId map[string]bool) *PortalObjectTypeEnablementPublicResponse {
	this := PortalObjectTypeEnablementPublicResponse{}
	this.EnablementByObjectTypeId = enablementByObjectTypeId
	return &this
}

// NewPortalObjectTypeEnablementPublicResponseWithDefaults instantiates a new PortalObjectTypeEnablementPublicResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortalObjectTypeEnablementPublicResponseWithDefaults() *PortalObjectTypeEnablementPublicResponse {
	this := PortalObjectTypeEnablementPublicResponse{}
	return &this
}

// GetEnablementByObjectTypeId returns the EnablementByObjectTypeId field value
func (o *PortalObjectTypeEnablementPublicResponse) GetEnablementByObjectTypeId() map[string]bool {
	if o == nil {
		var ret map[string]bool
		return ret
	}

	return o.EnablementByObjectTypeId
}

// GetEnablementByObjectTypeIdOk returns a tuple with the EnablementByObjectTypeId field value
// and a boolean to check if the value has been set.
func (o *PortalObjectTypeEnablementPublicResponse) GetEnablementByObjectTypeIdOk() (*map[string]bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnablementByObjectTypeId, true
}

// SetEnablementByObjectTypeId sets field value
func (o *PortalObjectTypeEnablementPublicResponse) SetEnablementByObjectTypeId(v map[string]bool) {
	o.EnablementByObjectTypeId = v
}

func (o PortalObjectTypeEnablementPublicResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortalObjectTypeEnablementPublicResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enablementByObjectTypeId"] = o.EnablementByObjectTypeId
	return toSerialize, nil
}

func (o *PortalObjectTypeEnablementPublicResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enablementByObjectTypeId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPortalObjectTypeEnablementPublicResponse := _PortalObjectTypeEnablementPublicResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPortalObjectTypeEnablementPublicResponse)

	if err != nil {
		return err
	}

	*o = PortalObjectTypeEnablementPublicResponse(varPortalObjectTypeEnablementPublicResponse)

	return err
}

type NullablePortalObjectTypeEnablementPublicResponse struct {
	value *PortalObjectTypeEnablementPublicResponse
	isSet bool
}

func (v NullablePortalObjectTypeEnablementPublicResponse) Get() *PortalObjectTypeEnablementPublicResponse {
	return v.value
}

func (v *NullablePortalObjectTypeEnablementPublicResponse) Set(val *PortalObjectTypeEnablementPublicResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePortalObjectTypeEnablementPublicResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePortalObjectTypeEnablementPublicResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortalObjectTypeEnablementPublicResponse(val *PortalObjectTypeEnablementPublicResponse) *NullablePortalObjectTypeEnablementPublicResponse {
	return &NullablePortalObjectTypeEnablementPublicResponse{value: val, isSet: true}
}

func (v NullablePortalObjectTypeEnablementPublicResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortalObjectTypeEnablementPublicResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


