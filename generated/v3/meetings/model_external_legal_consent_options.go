/*
Scheduler Meetings

Meetings Service For HubSpot Sales

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meetings

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalLegalConsentOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalLegalConsentOptions{}

// ExternalLegalConsentOptions struct for ExternalLegalConsentOptions
type ExternalLegalConsentOptions struct {
	LegitimateInterestSubscriptionTypes []int64 `json:"legitimateInterestSubscriptionTypes"`
	ProcessingConsentCheckboxLabel string `json:"processingConsentCheckboxLabel"`
	CommunicationConsentText string `json:"communicationConsentText"`
	LegitimateInterestLegalBasis *string `json:"legitimateInterestLegalBasis,omitempty"`
	ProcessingConsentType string `json:"processingConsentType"`
	PrivacyPolicyText string `json:"privacyPolicyText"`
	ProcessingConsentText string `json:"processingConsentText"`
	CommunicationConsentCheckboxes []ExternalCommunicationConsentCheckbox `json:"communicationConsentCheckboxes"`
	ProcessingConsentFooterText string `json:"processingConsentFooterText"`
	IsLegitimateInterest bool `json:"isLegitimateInterest"`
}

type _ExternalLegalConsentOptions ExternalLegalConsentOptions

// NewExternalLegalConsentOptions instantiates a new ExternalLegalConsentOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalLegalConsentOptions(legitimateInterestSubscriptionTypes []int64, processingConsentCheckboxLabel string, communicationConsentText string, processingConsentType string, privacyPolicyText string, processingConsentText string, communicationConsentCheckboxes []ExternalCommunicationConsentCheckbox, processingConsentFooterText string, isLegitimateInterest bool) *ExternalLegalConsentOptions {
	this := ExternalLegalConsentOptions{}
	this.LegitimateInterestSubscriptionTypes = legitimateInterestSubscriptionTypes
	this.ProcessingConsentCheckboxLabel = processingConsentCheckboxLabel
	this.CommunicationConsentText = communicationConsentText
	this.ProcessingConsentType = processingConsentType
	this.PrivacyPolicyText = privacyPolicyText
	this.ProcessingConsentText = processingConsentText
	this.CommunicationConsentCheckboxes = communicationConsentCheckboxes
	this.ProcessingConsentFooterText = processingConsentFooterText
	this.IsLegitimateInterest = isLegitimateInterest
	return &this
}

// NewExternalLegalConsentOptionsWithDefaults instantiates a new ExternalLegalConsentOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalLegalConsentOptionsWithDefaults() *ExternalLegalConsentOptions {
	this := ExternalLegalConsentOptions{}
	return &this
}

// GetLegitimateInterestSubscriptionTypes returns the LegitimateInterestSubscriptionTypes field value
func (o *ExternalLegalConsentOptions) GetLegitimateInterestSubscriptionTypes() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.LegitimateInterestSubscriptionTypes
}

// GetLegitimateInterestSubscriptionTypesOk returns a tuple with the LegitimateInterestSubscriptionTypes field value
// and a boolean to check if the value has been set.
func (o *ExternalLegalConsentOptions) GetLegitimateInterestSubscriptionTypesOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LegitimateInterestSubscriptionTypes, true
}

// SetLegitimateInterestSubscriptionTypes sets field value
func (o *ExternalLegalConsentOptions) SetLegitimateInterestSubscriptionTypes(v []int64) {
	o.LegitimateInterestSubscriptionTypes = v
}

// GetProcessingConsentCheckboxLabel returns the ProcessingConsentCheckboxLabel field value
func (o *ExternalLegalConsentOptions) GetProcessingConsentCheckboxLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessingConsentCheckboxLabel
}

// GetProcessingConsentCheckboxLabelOk returns a tuple with the ProcessingConsentCheckboxLabel field value
// and a boolean to check if the value has been set.
func (o *ExternalLegalConsentOptions) GetProcessingConsentCheckboxLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessingConsentCheckboxLabel, true
}

// SetProcessingConsentCheckboxLabel sets field value
func (o *ExternalLegalConsentOptions) SetProcessingConsentCheckboxLabel(v string) {
	o.ProcessingConsentCheckboxLabel = v
}

// GetCommunicationConsentText returns the CommunicationConsentText field value
func (o *ExternalLegalConsentOptions) GetCommunicationConsentText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommunicationConsentText
}

// GetCommunicationConsentTextOk returns a tuple with the CommunicationConsentText field value
// and a boolean to check if the value has been set.
func (o *ExternalLegalConsentOptions) GetCommunicationConsentTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommunicationConsentText, true
}

// SetCommunicationConsentText sets field value
func (o *ExternalLegalConsentOptions) SetCommunicationConsentText(v string) {
	o.CommunicationConsentText = v
}

// GetLegitimateInterestLegalBasis returns the LegitimateInterestLegalBasis field value if set, zero value otherwise.
func (o *ExternalLegalConsentOptions) GetLegitimateInterestLegalBasis() string {
	if o == nil || IsNil(o.LegitimateInterestLegalBasis) {
		var ret string
		return ret
	}
	return *o.LegitimateInterestLegalBasis
}

// GetLegitimateInterestLegalBasisOk returns a tuple with the LegitimateInterestLegalBasis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalLegalConsentOptions) GetLegitimateInterestLegalBasisOk() (*string, bool) {
	if o == nil || IsNil(o.LegitimateInterestLegalBasis) {
		return nil, false
	}
	return o.LegitimateInterestLegalBasis, true
}

// HasLegitimateInterestLegalBasis returns a boolean if a field has been set.
func (o *ExternalLegalConsentOptions) HasLegitimateInterestLegalBasis() bool {
	if o != nil && !IsNil(o.LegitimateInterestLegalBasis) {
		return true
	}

	return false
}

// SetLegitimateInterestLegalBasis gets a reference to the given string and assigns it to the LegitimateInterestLegalBasis field.
func (o *ExternalLegalConsentOptions) SetLegitimateInterestLegalBasis(v string) {
	o.LegitimateInterestLegalBasis = &v
}

// GetProcessingConsentType returns the ProcessingConsentType field value
func (o *ExternalLegalConsentOptions) GetProcessingConsentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessingConsentType
}

// GetProcessingConsentTypeOk returns a tuple with the ProcessingConsentType field value
// and a boolean to check if the value has been set.
func (o *ExternalLegalConsentOptions) GetProcessingConsentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessingConsentType, true
}

// SetProcessingConsentType sets field value
func (o *ExternalLegalConsentOptions) SetProcessingConsentType(v string) {
	o.ProcessingConsentType = v
}

// GetPrivacyPolicyText returns the PrivacyPolicyText field value
func (o *ExternalLegalConsentOptions) GetPrivacyPolicyText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivacyPolicyText
}

// GetPrivacyPolicyTextOk returns a tuple with the PrivacyPolicyText field value
// and a boolean to check if the value has been set.
func (o *ExternalLegalConsentOptions) GetPrivacyPolicyTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivacyPolicyText, true
}

// SetPrivacyPolicyText sets field value
func (o *ExternalLegalConsentOptions) SetPrivacyPolicyText(v string) {
	o.PrivacyPolicyText = v
}

// GetProcessingConsentText returns the ProcessingConsentText field value
func (o *ExternalLegalConsentOptions) GetProcessingConsentText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessingConsentText
}

// GetProcessingConsentTextOk returns a tuple with the ProcessingConsentText field value
// and a boolean to check if the value has been set.
func (o *ExternalLegalConsentOptions) GetProcessingConsentTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessingConsentText, true
}

// SetProcessingConsentText sets field value
func (o *ExternalLegalConsentOptions) SetProcessingConsentText(v string) {
	o.ProcessingConsentText = v
}

// GetCommunicationConsentCheckboxes returns the CommunicationConsentCheckboxes field value
func (o *ExternalLegalConsentOptions) GetCommunicationConsentCheckboxes() []ExternalCommunicationConsentCheckbox {
	if o == nil {
		var ret []ExternalCommunicationConsentCheckbox
		return ret
	}

	return o.CommunicationConsentCheckboxes
}

// GetCommunicationConsentCheckboxesOk returns a tuple with the CommunicationConsentCheckboxes field value
// and a boolean to check if the value has been set.
func (o *ExternalLegalConsentOptions) GetCommunicationConsentCheckboxesOk() ([]ExternalCommunicationConsentCheckbox, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommunicationConsentCheckboxes, true
}

// SetCommunicationConsentCheckboxes sets field value
func (o *ExternalLegalConsentOptions) SetCommunicationConsentCheckboxes(v []ExternalCommunicationConsentCheckbox) {
	o.CommunicationConsentCheckboxes = v
}

// GetProcessingConsentFooterText returns the ProcessingConsentFooterText field value
func (o *ExternalLegalConsentOptions) GetProcessingConsentFooterText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessingConsentFooterText
}

// GetProcessingConsentFooterTextOk returns a tuple with the ProcessingConsentFooterText field value
// and a boolean to check if the value has been set.
func (o *ExternalLegalConsentOptions) GetProcessingConsentFooterTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessingConsentFooterText, true
}

// SetProcessingConsentFooterText sets field value
func (o *ExternalLegalConsentOptions) SetProcessingConsentFooterText(v string) {
	o.ProcessingConsentFooterText = v
}

// GetIsLegitimateInterest returns the IsLegitimateInterest field value
func (o *ExternalLegalConsentOptions) GetIsLegitimateInterest() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsLegitimateInterest
}

// GetIsLegitimateInterestOk returns a tuple with the IsLegitimateInterest field value
// and a boolean to check if the value has been set.
func (o *ExternalLegalConsentOptions) GetIsLegitimateInterestOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsLegitimateInterest, true
}

// SetIsLegitimateInterest sets field value
func (o *ExternalLegalConsentOptions) SetIsLegitimateInterest(v bool) {
	o.IsLegitimateInterest = v
}

func (o ExternalLegalConsentOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalLegalConsentOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["legitimateInterestSubscriptionTypes"] = o.LegitimateInterestSubscriptionTypes
	toSerialize["processingConsentCheckboxLabel"] = o.ProcessingConsentCheckboxLabel
	toSerialize["communicationConsentText"] = o.CommunicationConsentText
	if !IsNil(o.LegitimateInterestLegalBasis) {
		toSerialize["legitimateInterestLegalBasis"] = o.LegitimateInterestLegalBasis
	}
	toSerialize["processingConsentType"] = o.ProcessingConsentType
	toSerialize["privacyPolicyText"] = o.PrivacyPolicyText
	toSerialize["processingConsentText"] = o.ProcessingConsentText
	toSerialize["communicationConsentCheckboxes"] = o.CommunicationConsentCheckboxes
	toSerialize["processingConsentFooterText"] = o.ProcessingConsentFooterText
	toSerialize["isLegitimateInterest"] = o.IsLegitimateInterest
	return toSerialize, nil
}

func (o *ExternalLegalConsentOptions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"legitimateInterestSubscriptionTypes",
		"processingConsentCheckboxLabel",
		"communicationConsentText",
		"processingConsentType",
		"privacyPolicyText",
		"processingConsentText",
		"communicationConsentCheckboxes",
		"processingConsentFooterText",
		"isLegitimateInterest",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalLegalConsentOptions := _ExternalLegalConsentOptions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalLegalConsentOptions)

	if err != nil {
		return err
	}

	*o = ExternalLegalConsentOptions(varExternalLegalConsentOptions)

	return err
}

type NullableExternalLegalConsentOptions struct {
	value *ExternalLegalConsentOptions
	isSet bool
}

func (v NullableExternalLegalConsentOptions) Get() *ExternalLegalConsentOptions {
	return v.value
}

func (v *NullableExternalLegalConsentOptions) Set(val *ExternalLegalConsentOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalLegalConsentOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalLegalConsentOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalLegalConsentOptions(val *ExternalLegalConsentOptions) *NullableExternalLegalConsentOptions {
	return &NullableExternalLegalConsentOptions{value: val, isSet: true}
}

func (v NullableExternalLegalConsentOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalLegalConsentOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


