/*
Scheduler Meetings

Meetings Service For HubSpot Sales

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meetings

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalOption{}

// ExternalOption struct for ExternalOption
type ExternalOption struct {
	Hidden bool `json:"hidden"`
	DisplayOrder int32 `json:"displayOrder"`
	DoubleData float32 `json:"doubleData"`
	Description string `json:"description"`
	ReadOnly bool `json:"readOnly"`
	Label string `json:"label"`
	Value string `json:"value"`
}

type _ExternalOption ExternalOption

// NewExternalOption instantiates a new ExternalOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalOption(hidden bool, displayOrder int32, doubleData float32, description string, readOnly bool, label string, value string) *ExternalOption {
	this := ExternalOption{}
	this.Hidden = hidden
	this.DisplayOrder = displayOrder
	this.DoubleData = doubleData
	this.Description = description
	this.ReadOnly = readOnly
	this.Label = label
	this.Value = value
	return &this
}

// NewExternalOptionWithDefaults instantiates a new ExternalOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalOptionWithDefaults() *ExternalOption {
	this := ExternalOption{}
	return &this
}

// GetHidden returns the Hidden field value
func (o *ExternalOption) GetHidden() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value
// and a boolean to check if the value has been set.
func (o *ExternalOption) GetHiddenOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hidden, true
}

// SetHidden sets field value
func (o *ExternalOption) SetHidden(v bool) {
	o.Hidden = v
}

// GetDisplayOrder returns the DisplayOrder field value
func (o *ExternalOption) GetDisplayOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value
// and a boolean to check if the value has been set.
func (o *ExternalOption) GetDisplayOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayOrder, true
}

// SetDisplayOrder sets field value
func (o *ExternalOption) SetDisplayOrder(v int32) {
	o.DisplayOrder = v
}

// GetDoubleData returns the DoubleData field value
func (o *ExternalOption) GetDoubleData() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DoubleData
}

// GetDoubleDataOk returns a tuple with the DoubleData field value
// and a boolean to check if the value has been set.
func (o *ExternalOption) GetDoubleDataOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DoubleData, true
}

// SetDoubleData sets field value
func (o *ExternalOption) SetDoubleData(v float32) {
	o.DoubleData = v
}

// GetDescription returns the Description field value
func (o *ExternalOption) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ExternalOption) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ExternalOption) SetDescription(v string) {
	o.Description = v
}

// GetReadOnly returns the ReadOnly field value
func (o *ExternalOption) GetReadOnly() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value
// and a boolean to check if the value has been set.
func (o *ExternalOption) GetReadOnlyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadOnly, true
}

// SetReadOnly sets field value
func (o *ExternalOption) SetReadOnly(v bool) {
	o.ReadOnly = v
}

// GetLabel returns the Label field value
func (o *ExternalOption) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *ExternalOption) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *ExternalOption) SetLabel(v string) {
	o.Label = v
}

// GetValue returns the Value field value
func (o *ExternalOption) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ExternalOption) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ExternalOption) SetValue(v string) {
	o.Value = v
}

func (o ExternalOption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hidden"] = o.Hidden
	toSerialize["displayOrder"] = o.DisplayOrder
	toSerialize["doubleData"] = o.DoubleData
	toSerialize["description"] = o.Description
	toSerialize["readOnly"] = o.ReadOnly
	toSerialize["label"] = o.Label
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *ExternalOption) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hidden",
		"displayOrder",
		"doubleData",
		"description",
		"readOnly",
		"label",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalOption := _ExternalOption{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalOption)

	if err != nil {
		return err
	}

	*o = ExternalOption(varExternalOption)

	return err
}

type NullableExternalOption struct {
	value *ExternalOption
	isSet bool
}

func (v NullableExternalOption) Get() *ExternalOption {
	return v.value
}

func (v *NullableExternalOption) Set(val *ExternalOption) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalOption) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalOption(val *ExternalOption) *NullableExternalOption {
	return &NullableExternalOption{value: val, isSet: true}
}

func (v NullableExternalOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


