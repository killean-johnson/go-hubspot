/*
Scheduler Meetings

Meetings Service For HubSpot Sales

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meetings

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalUserBusyTimes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalUserBusyTimes{}

// ExternalUserBusyTimes struct for ExternalUserBusyTimes
type ExternalUserBusyTimes struct {
	MeetingsUser ExternalMeetingsUser `json:"meetingsUser"`
	BusyTimes []ExternalTimeRange `json:"busyTimes"`
	IsOffline bool `json:"isOffline"`
}

type _ExternalUserBusyTimes ExternalUserBusyTimes

// NewExternalUserBusyTimes instantiates a new ExternalUserBusyTimes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalUserBusyTimes(meetingsUser ExternalMeetingsUser, busyTimes []ExternalTimeRange, isOffline bool) *ExternalUserBusyTimes {
	this := ExternalUserBusyTimes{}
	this.MeetingsUser = meetingsUser
	this.BusyTimes = busyTimes
	this.IsOffline = isOffline
	return &this
}

// NewExternalUserBusyTimesWithDefaults instantiates a new ExternalUserBusyTimes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalUserBusyTimesWithDefaults() *ExternalUserBusyTimes {
	this := ExternalUserBusyTimes{}
	return &this
}

// GetMeetingsUser returns the MeetingsUser field value
func (o *ExternalUserBusyTimes) GetMeetingsUser() ExternalMeetingsUser {
	if o == nil {
		var ret ExternalMeetingsUser
		return ret
	}

	return o.MeetingsUser
}

// GetMeetingsUserOk returns a tuple with the MeetingsUser field value
// and a boolean to check if the value has been set.
func (o *ExternalUserBusyTimes) GetMeetingsUserOk() (*ExternalMeetingsUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MeetingsUser, true
}

// SetMeetingsUser sets field value
func (o *ExternalUserBusyTimes) SetMeetingsUser(v ExternalMeetingsUser) {
	o.MeetingsUser = v
}

// GetBusyTimes returns the BusyTimes field value
func (o *ExternalUserBusyTimes) GetBusyTimes() []ExternalTimeRange {
	if o == nil {
		var ret []ExternalTimeRange
		return ret
	}

	return o.BusyTimes
}

// GetBusyTimesOk returns a tuple with the BusyTimes field value
// and a boolean to check if the value has been set.
func (o *ExternalUserBusyTimes) GetBusyTimesOk() ([]ExternalTimeRange, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusyTimes, true
}

// SetBusyTimes sets field value
func (o *ExternalUserBusyTimes) SetBusyTimes(v []ExternalTimeRange) {
	o.BusyTimes = v
}

// GetIsOffline returns the IsOffline field value
func (o *ExternalUserBusyTimes) GetIsOffline() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOffline
}

// GetIsOfflineOk returns a tuple with the IsOffline field value
// and a boolean to check if the value has been set.
func (o *ExternalUserBusyTimes) GetIsOfflineOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsOffline, true
}

// SetIsOffline sets field value
func (o *ExternalUserBusyTimes) SetIsOffline(v bool) {
	o.IsOffline = v
}

func (o ExternalUserBusyTimes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalUserBusyTimes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["meetingsUser"] = o.MeetingsUser
	toSerialize["busyTimes"] = o.BusyTimes
	toSerialize["isOffline"] = o.IsOffline
	return toSerialize, nil
}

func (o *ExternalUserBusyTimes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"meetingsUser",
		"busyTimes",
		"isOffline",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalUserBusyTimes := _ExternalUserBusyTimes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalUserBusyTimes)

	if err != nil {
		return err
	}

	*o = ExternalUserBusyTimes(varExternalUserBusyTimes)

	return err
}

type NullableExternalUserBusyTimes struct {
	value *ExternalUserBusyTimes
	isSet bool
}

func (v NullableExternalUserBusyTimes) Get() *ExternalUserBusyTimes {
	return v.value
}

func (v *NullableExternalUserBusyTimes) Set(val *ExternalUserBusyTimes) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalUserBusyTimes) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalUserBusyTimes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalUserBusyTimes(val *ExternalUserBusyTimes) *NullableExternalUserBusyTimes {
	return &NullableExternalUserBusyTimes{value: val, isSet: true}
}

func (v NullableExternalUserBusyTimes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalUserBusyTimes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


