/*
Scheduler Meetings

Meetings Service For HubSpot Sales

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meetings

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ExternalLinkMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalLinkMetadata{}

// ExternalLinkMetadata struct for ExternalLinkMetadata
type ExternalLinkMetadata struct {
	UserIdsOfLinkMembers []string `json:"userIdsOfLinkMembers"`
	CreatedAt time.Time `json:"createdAt"`
	Link string `json:"link"`
	Name *string `json:"name,omitempty"`
	OrganizerUserId string `json:"organizerUserId"`
	Id string `json:"id"`
	DefaultLink bool `json:"defaultLink"`
	Type string `json:"type"`
	Slug string `json:"slug"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

type _ExternalLinkMetadata ExternalLinkMetadata

// NewExternalLinkMetadata instantiates a new ExternalLinkMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalLinkMetadata(userIdsOfLinkMembers []string, createdAt time.Time, link string, organizerUserId string, id string, defaultLink bool, type_ string, slug string) *ExternalLinkMetadata {
	this := ExternalLinkMetadata{}
	this.UserIdsOfLinkMembers = userIdsOfLinkMembers
	this.CreatedAt = createdAt
	this.Link = link
	this.OrganizerUserId = organizerUserId
	this.Id = id
	this.DefaultLink = defaultLink
	this.Type = type_
	this.Slug = slug
	return &this
}

// NewExternalLinkMetadataWithDefaults instantiates a new ExternalLinkMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalLinkMetadataWithDefaults() *ExternalLinkMetadata {
	this := ExternalLinkMetadata{}
	return &this
}

// GetUserIdsOfLinkMembers returns the UserIdsOfLinkMembers field value
func (o *ExternalLinkMetadata) GetUserIdsOfLinkMembers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UserIdsOfLinkMembers
}

// GetUserIdsOfLinkMembersOk returns a tuple with the UserIdsOfLinkMembers field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkMetadata) GetUserIdsOfLinkMembersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserIdsOfLinkMembers, true
}

// SetUserIdsOfLinkMembers sets field value
func (o *ExternalLinkMetadata) SetUserIdsOfLinkMembers(v []string) {
	o.UserIdsOfLinkMembers = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ExternalLinkMetadata) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkMetadata) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ExternalLinkMetadata) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetLink returns the Link field value
func (o *ExternalLinkMetadata) GetLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Link
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkMetadata) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Link, true
}

// SetLink sets field value
func (o *ExternalLinkMetadata) SetLink(v string) {
	o.Link = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExternalLinkMetadata) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalLinkMetadata) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExternalLinkMetadata) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExternalLinkMetadata) SetName(v string) {
	o.Name = &v
}

// GetOrganizerUserId returns the OrganizerUserId field value
func (o *ExternalLinkMetadata) GetOrganizerUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizerUserId
}

// GetOrganizerUserIdOk returns a tuple with the OrganizerUserId field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkMetadata) GetOrganizerUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizerUserId, true
}

// SetOrganizerUserId sets field value
func (o *ExternalLinkMetadata) SetOrganizerUserId(v string) {
	o.OrganizerUserId = v
}

// GetId returns the Id field value
func (o *ExternalLinkMetadata) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkMetadata) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExternalLinkMetadata) SetId(v string) {
	o.Id = v
}

// GetDefaultLink returns the DefaultLink field value
func (o *ExternalLinkMetadata) GetDefaultLink() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DefaultLink
}

// GetDefaultLinkOk returns a tuple with the DefaultLink field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkMetadata) GetDefaultLinkOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultLink, true
}

// SetDefaultLink sets field value
func (o *ExternalLinkMetadata) SetDefaultLink(v bool) {
	o.DefaultLink = v
}

// GetType returns the Type field value
func (o *ExternalLinkMetadata) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkMetadata) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ExternalLinkMetadata) SetType(v string) {
	o.Type = v
}

// GetSlug returns the Slug field value
func (o *ExternalLinkMetadata) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkMetadata) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *ExternalLinkMetadata) SetSlug(v string) {
	o.Slug = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ExternalLinkMetadata) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalLinkMetadata) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ExternalLinkMetadata) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ExternalLinkMetadata) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ExternalLinkMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalLinkMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userIdsOfLinkMembers"] = o.UserIdsOfLinkMembers
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["link"] = o.Link
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["organizerUserId"] = o.OrganizerUserId
	toSerialize["id"] = o.Id
	toSerialize["defaultLink"] = o.DefaultLink
	toSerialize["type"] = o.Type
	toSerialize["slug"] = o.Slug
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

func (o *ExternalLinkMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userIdsOfLinkMembers",
		"createdAt",
		"link",
		"organizerUserId",
		"id",
		"defaultLink",
		"type",
		"slug",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalLinkMetadata := _ExternalLinkMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalLinkMetadata)

	if err != nil {
		return err
	}

	*o = ExternalLinkMetadata(varExternalLinkMetadata)

	return err
}

type NullableExternalLinkMetadata struct {
	value *ExternalLinkMetadata
	isSet bool
}

func (v NullableExternalLinkMetadata) Get() *ExternalLinkMetadata {
	return v.value
}

func (v *NullableExternalLinkMetadata) Set(val *ExternalLinkMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalLinkMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalLinkMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalLinkMetadata(val *ExternalLinkMetadata) *NullableExternalLinkMetadata {
	return &NullableExternalLinkMetadata{value: val, isSet: true}
}

func (v NullableExternalLinkMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalLinkMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


