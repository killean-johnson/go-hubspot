/*
Scheduler Meetings

Meetings Service For HubSpot Sales

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meetings

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalMeetingAvailability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalMeetingAvailability{}

// ExternalMeetingAvailability struct for ExternalMeetingAvailability
type ExternalMeetingAvailability struct {
	StartMillisUtc int32 `json:"startMillisUtc"`
	EndMillisUtc int32 `json:"endMillisUtc"`
}

type _ExternalMeetingAvailability ExternalMeetingAvailability

// NewExternalMeetingAvailability instantiates a new ExternalMeetingAvailability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalMeetingAvailability(startMillisUtc int32, endMillisUtc int32) *ExternalMeetingAvailability {
	this := ExternalMeetingAvailability{}
	this.StartMillisUtc = startMillisUtc
	this.EndMillisUtc = endMillisUtc
	return &this
}

// NewExternalMeetingAvailabilityWithDefaults instantiates a new ExternalMeetingAvailability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalMeetingAvailabilityWithDefaults() *ExternalMeetingAvailability {
	this := ExternalMeetingAvailability{}
	return &this
}

// GetStartMillisUtc returns the StartMillisUtc field value
func (o *ExternalMeetingAvailability) GetStartMillisUtc() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StartMillisUtc
}

// GetStartMillisUtcOk returns a tuple with the StartMillisUtc field value
// and a boolean to check if the value has been set.
func (o *ExternalMeetingAvailability) GetStartMillisUtcOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartMillisUtc, true
}

// SetStartMillisUtc sets field value
func (o *ExternalMeetingAvailability) SetStartMillisUtc(v int32) {
	o.StartMillisUtc = v
}

// GetEndMillisUtc returns the EndMillisUtc field value
func (o *ExternalMeetingAvailability) GetEndMillisUtc() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EndMillisUtc
}

// GetEndMillisUtcOk returns a tuple with the EndMillisUtc field value
// and a boolean to check if the value has been set.
func (o *ExternalMeetingAvailability) GetEndMillisUtcOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndMillisUtc, true
}

// SetEndMillisUtc sets field value
func (o *ExternalMeetingAvailability) SetEndMillisUtc(v int32) {
	o.EndMillisUtc = v
}

func (o ExternalMeetingAvailability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalMeetingAvailability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startMillisUtc"] = o.StartMillisUtc
	toSerialize["endMillisUtc"] = o.EndMillisUtc
	return toSerialize, nil
}

func (o *ExternalMeetingAvailability) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"startMillisUtc",
		"endMillisUtc",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalMeetingAvailability := _ExternalMeetingAvailability{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalMeetingAvailability)

	if err != nil {
		return err
	}

	*o = ExternalMeetingAvailability(varExternalMeetingAvailability)

	return err
}

type NullableExternalMeetingAvailability struct {
	value *ExternalMeetingAvailability
	isSet bool
}

func (v NullableExternalMeetingAvailability) Get() *ExternalMeetingAvailability {
	return v.value
}

func (v *NullableExternalMeetingAvailability) Set(val *ExternalMeetingAvailability) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalMeetingAvailability) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalMeetingAvailability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalMeetingAvailability(val *ExternalMeetingAvailability) *NullableExternalMeetingAvailability {
	return &NullableExternalMeetingAvailability{value: val, isSet: true}
}

func (v NullableExternalMeetingAvailability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalMeetingAvailability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


