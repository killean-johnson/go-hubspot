openapi: 3.0.1
info:
  title: Hubdb
  version: v3
  x-hubspot-product-tier-requirements:
    marketing: PROFESSIONAL
    cms: PROFESSIONAL
  x-hubspot-api-use-case: Store inventory data in HubDB tables for both record keeping
    and generating dynamic pages for listing products on your website.
  x-hubspot-related-documentation:
  - name: HubDB Guide
    url: https://developers.hubspot.com/docs/guides/api/cms/hubdb
  x-hubspot-introduction: "Use the HubDB API to create and manage HubDB tables in\
    \ the account, as well as import, retrieve, and manage individual table data."
servers:
- url: https://api.hubapi.com
tags:
- name: Tables
- name: Rows
- name: Rows Batch
paths:
  /cms/v3/hubdb/tables/{tableIdOrName}/draft/export:
    get:
      description: Exports the draft version of a table to CSV / EXCEL format.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/draft/export_exportDraftTable"
      parameters:
      - description: The ID or name of the table to export.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "The file format to export. Possible values include `CSV`, `XLSX`,\
          \ and `XLS`."
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                format: binary
                type: string
            text/csv:
              schema:
                format: binary
                type: string
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Export a draft table
      tags:
      - Tables
  /cms/v3/hubdb/tables/draft:
    get:
      description: "Returns the details for each draft table defined in the specified\
        \ account, including column definitions."
      operationId: get-/cms/v3/hubdb/tables/draft_getAllDraftTables
      parameters:
      - description: "Specifies which fields to use for sorting results. Valid fields\
          \ are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt`\
          \ will be used by default."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The cursor token value to get the next set of results. You can
          get this from the `paging.next.after` JSON property of a paged response
          containing more results.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to return. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Only return tables created at exactly the specified time.
        explode: true
        in: query
        name: createdAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables created after the specified time.
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables created before the specified time.
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated at exactly the specified time.
        explode: true
        in: query
        name: updatedAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated after the specified time.
        explode: true
        in: query
        name: updatedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated before the specified time.
        explode: true
        in: query
        name: updatedBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: contentType
        required: false
        schema:
          type: string
        style: form
      - description: Specifies whether to return archived tables. Defaults to `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseWithTotalHubDbTableV3ForwardPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Return all draft tables
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft:
    get:
      description: "Returns rows in the draft version of the specified table. Row\
        \ results can be filtered and sorted. Filtering and sorting options will be\
        \ sent as query parameters to the API request. For example, by adding the\
        \ query parameters `column1__gt=5&sort=-column1`, API returns the rows with\
        \ values for column `column1` greater than 5 and in the descending order of\
        \ `column1` values. Refer to the [overview section](https://developers.hubspot.com/docs/api/cms/hubdb#filtering-and-sorting-table-rows)\
        \ for detailed filtering and sorting options."
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft_readDraftTableRows"
      parameters:
      - description: The ID or name of the table to query.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the column names to sort the results by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The cursor token value to get the next set of results. You can
          get this from the `paging.next.after` JSON property of a paged response
          containing more results.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to return. Default is `1000`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Specify the column names to get results containing only the\
          \ required columns instead of all column details. If you want to include\
          \ multiple columns in the result, use this query param as many times. "
        explode: true
        in: query
        name: properties
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: ""
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCollectionResponseWithTotalBaseHubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Get rows from draft table
      tags:
      - Rows
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}:
    get:
      description: |-
        Get a single row by ID from the published version of a table.
        **Note:** This endpoint can be accessed without any authentication, if the table is set to be allowed for public access.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}_getTableRow"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Get a table row
      tags:
      - Rows
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft/clone:
    post:
      description: Clones a single row in the draft version of a table.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft/clone_cloneDraftTableRow"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Clone a row
      tags:
      - Rows
  /cms/v3/hubdb/tables/{tableIdOrName}/draft/reset:
    post:
      description: Replaces the data in the draft version of the table with values
        from the published version. Any unpublished changes in the draft will be lost
        after this call is made.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/reset_resetDraftTable"
      parameters:
      - description: The ID or name of the table to reset.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to `true` to populate foreign ID values in the response.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Reset a draft table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/export:
    get:
      description: Exports the published version of a table in a specified format.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/export_exportTable"
      parameters:
      - description: The ID or name of the table to export.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "The file format to export. Possible values include `CSV`, `XLSX`,\
          \ and `XLS`."
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                format: binary
                type: string
            text/csv:
              schema:
                format: binary
                type: string
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Export a published version of a table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/replace:
    post:
      description: "Replaces multiple rows as a batch in the draft version of the\
        \ table, with a maximum of 100 rows per call. See the endpoint `PUT /tables/{tableIdOrName}/rows/{rowId}/draft`\
        \ for details on updating a single row."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/replace_replaceDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputHubDbTableRowV3BatchUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3WithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Replace rows in batch in draft table
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}/draft/clone:
    post:
      description: Clone an existing HubDB table. The `newName` and `newLabel` of
        the new table can be sent as JSON in the request body. This will create the
        cloned table as a draft.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/clone_cloneDraftTable"
      parameters:
      - description: The ID or name of the table to clone.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableCloneRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Clone a table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/purge:
    post:
      description: "Permanently deletes rows from the draft version of the table,\
        \ given a set of row IDs. Maximum of 100 row IDs per call."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/purge_purgeDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputString'
        required: true
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Permanently deletes rows
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}/draft/import:
    post:
      description: |-
        Import the contents of a CSV file into an existing HubDB table. The data will always be imported into the draft version of the table. Use the `/publish` endpoint to push these changes to the published version.
        This endpoint takes a multi-part POST request. The first part will be a set of JSON-formatted options for the import and you can specify this with the name as `config`.  The second part will be the CSV file you want to import and you can specify this with the name as `file`. Refer the [overview section](https://developers.hubspot.com/docs/api/cms/hubdb#importing-tables) to check the details and format of the JSON-formatted options for the import.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/import_importDraftTable"
      parameters:
      - description: The ID of the destination table where data will be imported.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/post__cms_v3_hubdb_tables__tableIdOrName__draft_import_importDraftTable_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportResult'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Import data into draft table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft:
    delete:
      description: Permanently deletes a row from a table's draft version.
      operationId: "delete-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_purgeDraftTableRow"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Permanently deletes a row
      tags:
      - Rows
    get:
      description: Get a single row by ID from a table's draft version.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_getDraftTableRowById"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Get a row from the draft table
      tags:
      - Rows
    patch:
      description: |-
        Sparse updates a single row in the table's draft version.
        All the column values need not be specified. Only the columns or fields that needs to be modified can be specified.
        See the "Create a row" endpoint for instructions on how to format the JSON row definitions.
      operationId: "patch-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_updateDraftTableRow"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableRowV3Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Updates an existing row
      tags:
      - Rows
    put:
      description: |-
        Replace a single row in the draft version of a table. All column values must be specified. If a column has a value in the target table and this request doesn't define that value, it will be deleted.
        See the "Create a row" endpoint for instructions on how to format the JSON row definitions.
      operationId: "put-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_replaceDraftTableRow"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableRowV3Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Replaces an existing row
      tags:
      - Rows
  /cms/v3/hubdb/tables/{tableIdOrName}/rows:
    get:
      description: |-
        Returns a set of rows in the published version of the specified table. Row results can be filtered and sorted. Filtering and sorting options will be sent as query parameters to the API request. For example, by adding the query parameters `column1__gt=5&sort=-column1`, API returns the rows with values for column `column1` greater than 5 and in the descending order of `column1` values. Refer to the [overview section](https://developers.hubspot.com/docs/api/cms/hubdb#filtering-and-sorting-table-rows) for detailed filtering and sorting options.
        **Note:** This endpoint can be accessed without any authentication, if the table is set to be allowed for public access.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows_getTableRows"
      parameters:
      - description: The ID or name of the table to query.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the column names to sort the results by. See the above
          description for more details.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The cursor token value to get the next set of results. You can
          get this from the `paging.next.after` JSON property of a paged response
          containing more results.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to return. Default is `1000`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Specify the column names to get results containing only the required
          columns instead of all column details.
        explode: true
        in: query
        name: properties
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: ""
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCollectionResponseWithTotalBaseHubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Get rows for a table
      tags:
      - Rows
    post:
      description: Add a new row to a HubDB table. New rows will be added to the draft
        version of the table. Use the `/publish` endpoint to push these changes to
        published version.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows_createTableRow"
      parameters:
      - description: The ID or name of the target table.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableRowV3Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Add a new row to a table
      tags:
      - Rows
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/batch/read:
    post:
      description: |-
        Returns rows in the published version of the specified table, given a set of row IDs.
        **Note:** This endpoint can be accessed without any authentication if the table is set to be allowed for public access.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/batch/read_readTableRows"
      parameters:
      - description: The ID or name of the table to query.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputString'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3WithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Get a set of rows
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/create:
    post:
      description: "Creates rows in the draft version of the specified table, given\
        \ an array of row objects. Maximum of 100 row object per call. See the overview\
        \ section for more details with an example."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/create_createDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputHubDbTableRowV3Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3WithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Create rows in batch
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}:
    delete:
      description: Archive (soft delete) an existing HubDB table. This archives both
        the published and draft versions.
      operationId: "delete-/cms/v3/hubdb/tables/{tableIdOrName}_archiveTable"
      parameters:
      - description: The ID or name of the table to archive.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Archive a table
      tags:
      - Tables
    get:
      description: |-
        Returns the details for the published version of the specified table. This will include the definitions for the columns in the table and the number of rows in the table.

        **Note:** This endpoint can be accessed without any authentication if the table is set to be allowed for public access. To do so, you'll need to include the HubSpot account ID in a `portalId` query parameter.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}_getTableDetails"
      parameters:
      - description: The ID or name of the table to return.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: isGetLocalizedSchema
        required: false
        schema:
          type: boolean
        style: form
      - description: Set this to `true` to return details for an archived table. Defaults
          to `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      - description: Set this to `true` to populate foreign ID values in the result.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Get details of a published table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/read:
    post:
      description: "Returns rows in the draft version of the specified table, given\
        \ a set of row IDs."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/read_readDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputString'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3WithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Get a set of rows from draft table
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/clone:
    post:
      description: "Clones rows in the draft version of the specified table, given\
        \ a set of row ids. Maximum of 100 row ids per call."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/clone_cloneDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputHubDbTableRowBatchCloneRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Clone rows in batch
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables:
    get:
      description: "Returns the details for the published version of each table defined\
        \ in an account, including column definitions."
      operationId: get-/cms/v3/hubdb/tables_getAllTables
      parameters:
      - description: "Specifies which fields to use for sorting results. Valid fields\
          \ are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt`\
          \ will be used by default."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The cursor token value to get the next set of results. You can
          get this from the `paging.next.after` JSON property of a paged response
          containing more results.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to return. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Only return tables created at exactly the specified time.
        explode: true
        in: query
        name: createdAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables created after the specified time.
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables created before the specified time.
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated at exactly the specified time.
        explode: true
        in: query
        name: updatedAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated after the specified time.
        explode: true
        in: query
        name: updatedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated before the specified time.
        explode: true
        in: query
        name: updatedBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: contentType
        required: false
        schema:
          type: string
        style: form
      - description: Specifies whether to return archived tables. Defaults to `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseWithTotalHubDbTableV3ForwardPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Get all published tables
      tags:
      - Tables
    post:
      description: Creates a new draft HubDB table given a JSON schema. The table
        name and label should be unique for each account.
      operationId: post-/cms/v3/hubdb/tables_createTable
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableV3Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Create a new table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/unpublish:
    post:
      description: "Unpublishes the table, meaning any website pages using data from\
        \ the table will not render any data."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/unpublish_unpublishTable"
      parameters:
      - description: The ID or name of the table to publish.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to `true` to populate foreign ID values in the response.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Unpublish a table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/draft:
    get:
      description: Get the details for the draft version of a specific HubDB table.
        This will include the definitions for the columns in the table and the number
        of rows in the table.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/draft_getDraftTableDetailsById"
      parameters:
      - description: The ID or name of the table to return.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: isGetLocalizedSchema
        required: false
        schema:
          type: boolean
        style: form
      - description: Set this to `true` to return an archived table. Defaults to `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      - description: Set this to `true` to populate foreign ID values in the result.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Get details for a draft table
      tags:
      - Tables
    patch:
      description: |-
        Update an existing HubDB table. You can use this endpoint to add or remove columns to the table as well as restore an archived table. Tables updated using the endpoint will only modify the draft verion of the table. Use the `/publish` endpoint to push all the changes to the published version. To restore a table, include the query parameter `archived=true` and `"archived": false` in the json body.
        **Note:** You need to include all the columns in the input when you are adding/removing/updating a column. If you do not include an already existing column in the request, it will be deleted.
      operationId: "patch-/cms/v3/hubdb/tables/{tableIdOrName}/draft_updateDraftTable"
      parameters:
      - description: The ID or name of the table to update.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: isGetLocalizedSchema
        required: false
        schema:
          type: boolean
        style: form
      - description: Specifies whether to return archived tables. Defaults to `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      - description: Set this to `true` to populate foreign ID values in the result.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableV3Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Update an existing table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/draft/publish:
    post:
      description: "Publishes the table by copying the data and table schema changes\
        \ from draft version to the published version, meaning any website pages using\
        \ data from the table will be updated."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/publish_publishDraftTable"
      parameters:
      - description: The ID or name of the table to publish.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to `true` to populate foreign ID values in the response.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Publish a table from draft
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/update:
    post:
      description: "Updates multiple rows as a batch in the draft version of the table,\
        \ with a maximum of 100 rows per call. See the endpoint `PATCH /tables/{tableIdOrName}/rows/{rowId}/draft`\
        \ for details on updating a single row."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/update_updateDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputHubDbTableRowV3BatchUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3WithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - hubdb
      - oauth2:
        - hubdb
      summary: Update rows in batch in draft table
      tags:
      - Rows Batch
components:
  responses:
    Error:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: An error occurred.
  schemas:
    BatchInputString:
      example:
        inputs:
        - inputs
        - inputs
      properties:
        inputs:
          description: ""
          items:
            type: string
          type: array
      required:
      - inputs
      type: object
    StandardError:
      example:
        subCategory: "{}"
        context:
          key:
          - context
          - context
        links:
          key: links
        id: id
        category: category
        message: message
        errors:
        - subCategory: subCategory
          code: code
          in: in
          context:
            missingScopes:
            - scope1
            - scope2
          message: message
        - subCategory: subCategory
          code: code
          in: in
          context:
            missingScopes:
            - scope1
            - scope2
          message: message
        status: status
      properties:
        subCategory:
          description: "Identifies the subcategory of the error, providing more specific\
            \ context within the main category."
          properties: {}
          type: object
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: An object containing context-specific information pertinent
            to the error.
          type: object
        links:
          additionalProperties:
            type: string
          description: "An object containing links related to the error, such as documentation\
            \ URLs or support contact pages."
          type: object
        id:
          description: The unique ID of the error instance.
          type: string
        category:
          description: "Specifies the main category of the error, determining the\
            \ broad area of issue."
          type: string
        message:
          description: 'A detailed message describing the error. '
          type: string
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
        status:
          description: 'The HTTP status code associated with the error. '
          type: string
      required:
      - category
      - context
      - errors
      - links
      - message
      - status
      type: object
    BoundedNextPage:
      properties:
        offset:
          format: int32
          type: integer
        link:
          type: string
      required:
      - offset
      type: object
    HubDbTableCloneRequest:
      example:
        newName: test_table_new
        isHubspotDefined: true
        newLabel: Test Table New
        copyRows: true
      properties:
        newName:
          description: The new name for the cloned table
          example: test_table_new
          type: string
        isHubspotDefined:
          type: boolean
        newLabel:
          description: The new label for the cloned table
          example: Test Table New
          type: string
        copyRows:
          description: Specifies whether to copy the rows during clone
          example: true
          type: boolean
      required:
      - copyRows
      - isHubspotDefined
      type: object
    SimpleUser:
      example:
        firstName: firstName
        lastName: lastName
        id: id
        email: email
      properties:
        firstName:
          description: ""
          type: string
        lastName:
          description: ""
          type: string
        id:
          description: ""
          type: string
        email:
          description: ""
          type: string
      required:
      - email
      - firstName
      - id
      - lastName
      type: object
    CollectionResponseWithTotalHubDbTableV3ForwardPaging:
      example:
        total: 0
        paging:
          next:
            link: link
            after: after
        results:
        - dynamicMetaTags:
            DESCRIPTION: 1
            FEATURED_IMAGE_URL: 2
            LINK_REL_CANONICAL_URL: 3
          updatedBy:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          allowPublicApiAccess: false
          useForPages: true
          publishedAt: 2000-01-23T04:56:07.000+00:00
          columns:
          - id: "1"
            name: text_column
            type: TEXT
            label: Text Column
            archived: false
            foreignIdsById: {}
            foreignIdsByName: {}
          label: Test Table
          published: true
          columnCount: 3
          allowChildTables: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          createdBy:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          name: test_table
          enableChildTablePages: false
          id: "1630034"
          rowCount: 0
          isOrderedManually: true
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - dynamicMetaTags:
            DESCRIPTION: 1
            FEATURED_IMAGE_URL: 2
            LINK_REL_CANONICAL_URL: 3
          updatedBy:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          allowPublicApiAccess: false
          useForPages: true
          publishedAt: 2000-01-23T04:56:07.000+00:00
          columns:
          - id: "1"
            name: text_column
            type: TEXT
            label: Text Column
            archived: false
            foreignIdsById: {}
            foreignIdsByName: {}
          label: Test Table
          published: true
          columnCount: 3
          allowChildTables: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          createdBy:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          name: test_table
          enableChildTablePages: false
          id: "1630034"
          rowCount: 0
          isOrderedManually: true
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          description: ""
          format: int32
          type: integer
        paging:
          $ref: '#/components/schemas/ForwardPaging'
        results:
          description: ""
          items:
            $ref: '#/components/schemas/HubDbTableV3'
          type: array
      required:
      - results
      - total
      type: object
    BoundedPaging:
      properties:
        next:
          $ref: '#/components/schemas/BoundedNextPage'
      type: object
    BatchInputHubDbTableRowBatchCloneRequest:
      example:
        inputs:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/HubDbTableRowBatchCloneRequest'
          type: array
      required:
      - inputs
      type: object
    BatchInputHubDbTableRowV3Request:
      example:
        inputs:
        - path: test_path
          childTableId: 1902373
          values:
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
            text_column: sample text value
            number_column: 76
          name: test_title
          displayIndex: 0
        - path: test_path
          childTableId: 1902373
          values:
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
            text_column: sample text value
            number_column: 76
          name: test_title
          displayIndex: 0
      properties:
        inputs:
          description: ""
          items:
            $ref: '#/components/schemas/HubDbTableRowV3Request'
          type: array
      required:
      - inputs
      type: object
    ErrorDetail:
      example:
        subCategory: subCategory
        code: code
        in: in
        context:
          missingScopes:
          - scope1
          - scope2
        message: message
      properties:
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        code:
          description: The status code associated with the error detail
          type: string
        in:
          description: The name of the field or parameter in which the error was found.
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
          type: object
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          type: string
      required:
      - message
      type: object
    ForwardPaging:
      example:
        next:
          link: link
          after: after
      properties:
        next:
          $ref: '#/components/schemas/NextPage'
      type: object
    HubDbTableRowBatchCloneRequest:
      example:
        name: name
        id: id
      properties:
        name:
          type: string
        id:
          type: string
      required:
      - id
      type: object
    UnifiedCollectionResponseWithTotalBaseHubDbTableRowV3:
      example: {}
      oneOf:
      - $ref: '#/components/schemas/RandomAccessCollectionResponseWithTotalHubDbTableRowV3'
      - $ref: '#/components/schemas/StreamingCollectionResponseWithTotalHubDbTableRowV3'
      properties: {}
    Column:
      properties:
        createdByUserId:
          format: int32
          type: integer
        foreignTableId:
          description: Foreign table id referenced
          format: int64
          type: integer
        updatedBy:
          $ref: '#/components/schemas/SimpleUser'
        description:
          type: string
        label:
          description: Label of the column
          example: Text Column
          type: string
        updatedByUserId:
          format: int32
          type: integer
        type:
          description: Type of the column
          enum:
          - "NULL"
          - TEXT
          - NUMBER
          - URL
          - IMAGE
          - SELECT
          - MULTISELECT
          - BOOLEAN
          - LOCATION
          - DATE
          - DATETIME
          - CURRENCY
          - RICHTEXT
          - FOREIGN_ID
          - VIDEO
          - CTA
          - FILE
          - JSON
          - COMPOSITE
          - CODE
          example: TEXT
          type: string
        optionCount:
          description: Number of options available
          format: int32
          type: integer
        foreignIds:
          description: Foreign Ids
          items:
            $ref: '#/components/schemas/ForeignId'
          type: array
        createdAt:
          format: date-time
          type: string
        deleted:
          type: boolean
        createdBy:
          $ref: '#/components/schemas/SimpleUser'
        name:
          description: Name of the column
          example: text_column
          type: string
        options:
          description: Options to choose for select and multi-select columns
          items:
            $ref: '#/components/schemas/Option'
          type: array
        width:
          description: Column width for HubDB UI
          format: int32
          type: integer
        id:
          description: Column Id
          example: "1"
          type: string
        foreignIdsById:
          additionalProperties:
            $ref: '#/components/schemas/ForeignId'
          description: Foreign ids
          type: object
        foreignColumnId:
          description: Foreign Column id
          format: int32
          type: integer
        foreignIdsByName:
          additionalProperties:
            $ref: '#/components/schemas/ForeignId'
          description: Foreign ids by name
          type: object
        updatedAt:
          format: date-time
          type: string
      required:
      - label
      - name
      - type
      type: object
    StreamingCollectionResponseWithTotalHubDbTableRowV3:
      properties:
        total:
          format: int32
          type: integer
        paging:
          $ref: '#/components/schemas/Paging'
        type:
          default: STREAMING
          enum:
          - STREAMING
          type: string
        results:
          items:
            $ref: '#/components/schemas/HubDbTableRowV3'
          type: array
      required:
      - results
      - total
      - type
      title: STREAMING
      type: object
    HubDbTableV3:
      example:
        dynamicMetaTags:
          DESCRIPTION: 1
          FEATURED_IMAGE_URL: 2
          LINK_REL_CANONICAL_URL: 3
        updatedBy:
          firstName: firstName
          lastName: lastName
          id: id
          email: email
        allowPublicApiAccess: false
        useForPages: true
        publishedAt: 2000-01-23T04:56:07.000+00:00
        columns:
        - id: "1"
          name: text_column
          type: TEXT
          label: Text Column
          archived: false
          foreignIdsById: {}
          foreignIdsByName: {}
        label: Test Table
        published: true
        columnCount: 3
        allowChildTables: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        deleted: true
        createdBy:
          firstName: firstName
          lastName: lastName
          id: id
          email: email
        name: test_table
        enableChildTablePages: false
        id: "1630034"
        rowCount: 0
        isOrderedManually: true
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        dynamicMetaTags:
          additionalProperties:
            format: int32
            type: integer
          description: "Specifies the key value pairs of the [metadata fields](https://developers.hubspot.com/docs/cms/guides/dynamic-pages/hubdb#dynamic-pages)\
            \ with the associated column IDs."
          example:
            DESCRIPTION: 1
            FEATURED_IMAGE_URL: 2
            LINK_REL_CANONICAL_URL: 3
          type: object
        updatedBy:
          $ref: '#/components/schemas/SimpleUser'
        allowPublicApiAccess:
          description: Specifies whether the table can be read by public without authorization
          example: false
          type: boolean
        useForPages:
          description: Specifies whether the table can be used for creation of dynamic
            pages
          example: true
          type: boolean
        publishedAt:
          description: Timestamp at which the table is published recently
          format: date-time
          type: string
        columns:
          description: List of columns in the table
          example:
          - id: "1"
            name: text_column
            type: TEXT
            label: Text Column
            archived: false
            foreignIdsById: {}
            foreignIdsByName: {}
          items:
            $ref: '#/components/schemas/Column'
          type: array
        label:
          description: Label of the table
          example: Test Table
          type: string
        published:
          type: boolean
        columnCount:
          description: Number of columns including deleted
          example: 3
          format: int32
          type: integer
        allowChildTables:
          description: Specifies whether child tables can be created
          example: true
          type: boolean
        createdAt:
          description: Timestamp at which the table is created
          format: date-time
          type: string
        deleted:
          type: boolean
        createdBy:
          $ref: '#/components/schemas/SimpleUser'
        name:
          description: Name of the table
          example: test_table
          type: string
        enableChildTablePages:
          description: Specifies creation of multi-level dynamic pages using child
            tables
          example: false
          type: boolean
        id:
          description: Id of the table
          example: "1630034"
          type: string
        rowCount:
          description: Number of rows in the table
          example: 0
          format: int32
          type: integer
        isOrderedManually:
          type: boolean
        updatedAt:
          description: Timestamp at which the table is updated recently
          format: date-time
          type: string
      required:
      - label
      - name
      type: object
    BatchResponseHubDbTableRowV3:
      example:
        completedAt: 2000-01-23T04:56:07.000+00:00
        requestedAt: 2000-01-23T04:56:07.000+00:00
        startedAt: 2000-01-23T04:56:07.000+00:00
        links:
          key: links
        results:
        - path: test_path
          createdAt: 2000-01-23T04:56:07.000+00:00
          childTableId: "1902373"
          publishedAt: 2000-01-23T04:56:07.000+00:00
          values:
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
            text_column: sample text value
            number_column: 76
          name: test_title
          id: "4099275931"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: test_path
          createdAt: 2000-01-23T04:56:07.000+00:00
          childTableId: "1902373"
          publishedAt: 2000-01-23T04:56:07.000+00:00
          values:
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
            text_column: sample text value
            number_column: 76
          name: test_title
          id: "4099275931"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        status: PENDING
      properties:
        completedAt:
          format: date-time
          type: string
        requestedAt:
          format: date-time
          type: string
        startedAt:
          format: date-time
          type: string
        links:
          additionalProperties:
            type: string
          type: object
        results:
          items:
            $ref: '#/components/schemas/HubDbTableRowV3'
          type: array
        status:
          enum:
          - PENDING
          - PROCESSING
          - CANCELED
          - COMPLETE
          type: string
      type: object
    ForeignId:
      properties:
        name:
          description: ""
          type: string
        id:
          description: ""
          type: string
        type:
          description: ""
          type: string
      required:
      - id
      - name
      - type
      type: object
    RandomAccessCollectionResponseWithTotalHubDbTableRowV3:
      properties:
        total:
          format: int32
          type: integer
        paging:
          $ref: '#/components/schemas/BoundedPaging'
        type:
          default: RANDOM_ACCESS
          enum:
          - RANDOM_ACCESS
          type: string
        results:
          items:
            $ref: '#/components/schemas/HubDbTableRowV3'
          type: array
      required:
      - results
      - total
      - type
      title: RANDOM_ACCESS
      type: object
    ImportResult:
      example:
        rowLimitExceeded: true
        duplicateRows: 0
        rowsImported: 6
        errors:
        - message: Invalid input (details will vary based on the error)
          correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
          category: VALIDATION_ERROR
          links:
            knowledge-base: https://www.hubspot.com/products/service/knowledge-base
        - message: Invalid input (details will vary based on the error)
          correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
          category: VALIDATION_ERROR
          links:
            knowledge-base: https://www.hubspot.com/products/service/knowledge-base
      properties:
        rowLimitExceeded:
          description: Specifies whether row limit exceeded during import
          type: boolean
        duplicateRows:
          description: Specifies number of duplicate rows
          format: int32
          type: integer
        rowsImported:
          description: Specifies number of rows imported
          format: int32
          type: integer
        errors:
          description: List of errors during import
          items:
            $ref: '#/components/schemas/Error'
          type: array
      required:
      - duplicateRows
      - errors
      - rowLimitExceeded
      - rowsImported
      type: object
    Paging:
      properties:
        next:
          $ref: '#/components/schemas/NextPage'
        prev:
          $ref: '#/components/schemas/PreviousPage'
      type: object
    HubDbTableV3Request:
      example:
        dynamicMetaTags:
          DESCRIPTION: 1
          FEATURED_IMAGE_URL: 2
          LINK_REL_CANONICAL_URL: 3
        allowPublicApiAccess: false
        useForPages: true
        columns:
        - id: "1"
          name: text_column
          type: TEXT
          label: Text Column
        name: test_table
        enableChildTablePages: false
        label: Test Table
        allowChildTables: true
      properties:
        dynamicMetaTags:
          additionalProperties:
            format: int32
            type: integer
          description: "Specifies the key value pairs of the [metadata fields](https://developers.hubspot.com/docs/cms/guides/dynamic-pages/hubdb#dynamic-pages)\
            \ with the associated column IDs."
          example:
            DESCRIPTION: 1
            FEATURED_IMAGE_URL: 2
            LINK_REL_CANONICAL_URL: 3
          type: object
        allowPublicApiAccess:
          description: Specifies whether the table can be read by public without authorization
          example: false
          type: boolean
        useForPages:
          description: Specifies whether the table can be used for creation of dynamic
            pages
          example: true
          type: boolean
        columns:
          description: List of columns in the table
          example:
          - id: "1"
            name: text_column
            type: TEXT
            label: Text Column
          items:
            $ref: '#/components/schemas/ColumnRequest'
          type: array
        name:
          description: Name of the table
          example: test_table
          type: string
        enableChildTablePages:
          description: Specifies creation of multi-level dynamic pages using child
            tables
          example: false
          type: boolean
        label:
          description: Label of the table
          example: Test Table
          type: string
        allowChildTables:
          description: Specifies whether child tables can be created
          example: true
          type: boolean
      required:
      - label
      - name
      type: object
    Error:
      example:
        message: Invalid input (details will vary based on the error)
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        category: VALIDATION_ERROR
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
      properties:
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
            invalidPropertyName:
            - propertyValue
          type: object
        correlationId:
          description: A unique identifier for the request. Include this value with
            any error reports or support tickets
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
          format: uuid
          type: string
        links:
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation
            about the error or recommended remediation steps
          example:
            knowledge-base: https://www.hubspot.com/products/service/knowledge-base
          type: object
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          example: Invalid input (details will vary based on the error)
          type: string
        category:
          description: The error category
          example: VALIDATION_ERROR
          type: string
        errors:
          description: further information about the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
      required:
      - category
      - correlationId
      - message
      type: object
    BatchResponseHubDbTableRowV3WithErrors:
      example:
        completedAt: 2000-01-23T04:56:07.000+00:00
        numErrors: 0
        requestedAt: 2000-01-23T04:56:07.000+00:00
        startedAt: 2000-01-23T04:56:07.000+00:00
        links:
          key: links
        results:
        - path: test_path
          createdAt: 2000-01-23T04:56:07.000+00:00
          childTableId: "1902373"
          publishedAt: 2000-01-23T04:56:07.000+00:00
          values:
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
            text_column: sample text value
            number_column: 76
          name: test_title
          id: "4099275931"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: test_path
          createdAt: 2000-01-23T04:56:07.000+00:00
          childTableId: "1902373"
          publishedAt: 2000-01-23T04:56:07.000+00:00
          values:
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
            text_column: sample text value
            number_column: 76
          name: test_title
          id: "4099275931"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        errors:
        - subCategory: "{}"
          context:
            key:
            - context
            - context
          links:
            key: links
          id: id
          category: category
          message: message
          errors:
          - subCategory: subCategory
            code: code
            in: in
            context:
              missingScopes:
              - scope1
              - scope2
            message: message
          - subCategory: subCategory
            code: code
            in: in
            context:
              missingScopes:
              - scope1
              - scope2
            message: message
          status: status
        - subCategory: "{}"
          context:
            key:
            - context
            - context
          links:
            key: links
          id: id
          category: category
          message: message
          errors:
          - subCategory: subCategory
            code: code
            in: in
            context:
              missingScopes:
              - scope1
              - scope2
            message: message
          - subCategory: subCategory
            code: code
            in: in
            context:
              missingScopes:
              - scope1
              - scope2
            message: message
          status: status
        status: PENDING
      properties:
        completedAt:
          description: ""
          format: date-time
          type: string
        numErrors:
          description: ""
          format: int32
          type: integer
        requestedAt:
          description: ""
          format: date-time
          type: string
        startedAt:
          description: ""
          format: date-time
          type: string
        links:
          additionalProperties:
            type: string
          description: ""
          type: object
        results:
          description: ""
          items:
            $ref: '#/components/schemas/HubDbTableRowV3'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/StandardError'
          type: array
        status:
          description: ""
          enum:
          - PENDING
          - PROCESSING
          - CANCELED
          - COMPLETE
          type: string
      required:
      - completedAt
      - results
      - startedAt
      - status
      type: object
    ColumnRequest:
      properties:
        foreignTableId:
          description: The id of another table to which the column refers/points to.
          format: int64
          type: integer
        name:
          description: Name of the column
          example: text_column
          type: string
        options:
          description: Options to choose for select and multi-select columns
          items:
            $ref: '#/components/schemas/Option'
          type: array
        id:
          description: Column Id
          example: 1
          format: int32
          type: integer
        label:
          description: Label of the column
          example: Text Column
          type: string
        type:
          description: Type of the column
          enum:
          - "NULL"
          - TEXT
          - NUMBER
          - URL
          - IMAGE
          - SELECT
          - MULTISELECT
          - BOOLEAN
          - LOCATION
          - DATE
          - DATETIME
          - CURRENCY
          - RICHTEXT
          - FOREIGN_ID
          - VIDEO
          - CTA
          - FILE
          - JSON
          - COMPOSITE
          - CODE
          example: TEXT
          type: string
        foreignColumnId:
          description: The id of the column from another table to which the column
            refers/points to.
          format: int32
          type: integer
      required:
      - id
      - label
      - name
      - options
      - type
      type: object
    Variant:
      properties: {}
      type: object
    HubDbTableRowV3BatchUpdateRequest:
      example:
        path: test_path
        childTableId: 1902373
        values:
          multiselect:
          - id: "1"
            name: Option 1
            type: option
            order: 0
          - id: "2"
            name: Option 2
            type: option
            order: 1
          text_column: sample text value
          number_column: 76
        name: test_title
        id: "4099275931"
        displayIndex: 0
      properties:
        path:
          description: "Specifies the value for `hs_path` column, which will be used\
            \ as slug in the dynamic pages"
          example: test_path
          type: string
        childTableId:
          description: Specifies the value for the column child table id
          example: 1902373
          format: int32
          type: integer
        values:
          additionalProperties:
            $ref: '#/components/schemas/Variant'
          description: List of key value pairs with the column name and column value
          example:
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
            text_column: sample text value
            number_column: 76
          type: object
        name:
          description: "Specifies the value for `hs_name` column, which will be used\
            \ as title in the dynamic pages"
          example: test_title
          type: string
        id:
          description: The id of the table row
          example: "4099275931"
          type: string
        displayIndex:
          format: int32
          type: integer
      required:
      - id
      - values
      type: object
    PreviousPage:
      properties:
        before:
          type: string
        link:
          type: string
      required:
      - before
      type: object
    HubDbTableRowV3:
      example:
        path: test_path
        createdAt: 2000-01-23T04:56:07.000+00:00
        childTableId: "1902373"
        publishedAt: 2000-01-23T04:56:07.000+00:00
        values:
          multiselect:
          - id: "1"
            name: Option 1
            type: option
            order: 0
          - id: "2"
            name: Option 2
            type: option
            order: 1
          text_column: sample text value
          number_column: 76
        name: test_title
        id: "4099275931"
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        path:
          description: "Specifies the value for `hs_path` column, which will be used\
            \ as slug in the dynamic pages"
          example: test_path
          type: string
        createdAt:
          description: Timestamp at which the row is created
          format: date-time
          type: string
        childTableId:
          description: Specifies the value for the column child table id
          example: "1902373"
          type: string
        publishedAt:
          format: date-time
          type: string
        values:
          additionalProperties:
            properties: {}
            type: object
          description: List of key value pairs with the column name and column value
          example:
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
            text_column: sample text value
            number_column: 76
          type: object
        name:
          description: "Specifies the value for `hs_name` column, which will be used\
            \ as title in the dynamic pages"
          example: test_title
          type: string
        id:
          description: The id of the table row
          example: "4099275931"
          type: string
        updatedAt:
          description: Timestamp at which the row is updated last time
          format: date-time
          type: string
      required:
      - values
      type: object
    HubDbTableRowV3Request:
      example:
        path: test_path
        childTableId: 1902373
        values:
          multiselect:
          - id: "1"
            name: Option 1
            type: option
            order: 0
          - id: "2"
            name: Option 2
            type: option
            order: 1
          text_column: sample text value
          number_column: 76
        name: test_title
        displayIndex: 0
      properties:
        path:
          description: "Specifies the value for `hs_path` column, which will be used\
            \ as slug in the dynamic pages"
          example: test_path
          type: string
        childTableId:
          description: Specifies the value for the column child table id
          example: 1902373
          format: int64
          type: integer
        values:
          additionalProperties:
            $ref: '#/components/schemas/Variant'
          description: List of key value pairs with the column name and column value
          example:
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
            text_column: sample text value
            number_column: 76
          type: object
        name:
          description: "Specifies the value for `hs_name` column, which will be used\
            \ as title in the dynamic pages"
          example: test_title
          type: string
        displayIndex:
          format: int32
          type: integer
      required:
      - values
      type: object
    Option:
      properties:
        createdByUserId:
          format: int32
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/SimpleUser'
        createdBy:
          $ref: '#/components/schemas/SimpleUser'
        name:
          description: ""
          type: string
        id:
          description: ""
          type: string
        label:
          type: string
        updatedByUserId:
          format: int32
          type: integer
        type:
          description: ""
          type: string
        order:
          description: ""
          format: int32
          type: integer
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - name
      - order
      - type
      - updatedAt
      type: object
    NextPage:
      example:
        link: link
        after: after
      properties:
        link:
          description: ""
          type: string
        after:
          description: ""
          type: string
      required:
      - after
      type: object
    BatchInputHubDbTableRowV3BatchUpdateRequest:
      example:
        inputs:
        - path: test_path
          childTableId: 1902373
          values:
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
            text_column: sample text value
            number_column: 76
          name: test_title
          id: "4099275931"
          displayIndex: 0
        - path: test_path
          childTableId: 1902373
          values:
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
            text_column: sample text value
            number_column: 76
          name: test_title
          id: "4099275931"
          displayIndex: 0
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/HubDbTableRowV3BatchUpdateRequest'
          type: array
      required:
      - inputs
      type: object
    post__cms_v3_hubdb_tables__tableIdOrName__draft_import_importDraftTable_request:
      properties:
        config:
          type: string
        file:
          format: binary
          type: string
      type: object
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          scopes:
            hubdb: Read from and write to my HubDB
          tokenUrl: https://api.hubapi.com/oauth/v1/token
      type: oauth2
    private_apps:
      in: header
      name: private-app
      type: apiKey
x-hubspot-available-client-libraries:
- PHP
- Node
- Ruby
- Python
x-hubspot-product-tier-requirements:
  marketing: PROFESSIONAL
  cms: PROFESSIONAL
