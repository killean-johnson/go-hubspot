/*
Hubdb

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hubdb

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HubDbTableCloneRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HubDbTableCloneRequest{}

// HubDbTableCloneRequest struct for HubDbTableCloneRequest
type HubDbTableCloneRequest struct {
	// The new name for the cloned table
	NewName *string `json:"newName,omitempty"`
	IsHubspotDefined bool `json:"isHubspotDefined"`
	// The new label for the cloned table
	NewLabel *string `json:"newLabel,omitempty"`
	// Specifies whether to copy the rows during clone
	CopyRows bool `json:"copyRows"`
}

type _HubDbTableCloneRequest HubDbTableCloneRequest

// NewHubDbTableCloneRequest instantiates a new HubDbTableCloneRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHubDbTableCloneRequest(isHubspotDefined bool, copyRows bool) *HubDbTableCloneRequest {
	this := HubDbTableCloneRequest{}
	this.IsHubspotDefined = isHubspotDefined
	this.CopyRows = copyRows
	return &this
}

// NewHubDbTableCloneRequestWithDefaults instantiates a new HubDbTableCloneRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHubDbTableCloneRequestWithDefaults() *HubDbTableCloneRequest {
	this := HubDbTableCloneRequest{}
	return &this
}

// GetNewName returns the NewName field value if set, zero value otherwise.
func (o *HubDbTableCloneRequest) GetNewName() string {
	if o == nil || IsNil(o.NewName) {
		var ret string
		return ret
	}
	return *o.NewName
}

// GetNewNameOk returns a tuple with the NewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HubDbTableCloneRequest) GetNewNameOk() (*string, bool) {
	if o == nil || IsNil(o.NewName) {
		return nil, false
	}
	return o.NewName, true
}

// HasNewName returns a boolean if a field has been set.
func (o *HubDbTableCloneRequest) HasNewName() bool {
	if o != nil && !IsNil(o.NewName) {
		return true
	}

	return false
}

// SetNewName gets a reference to the given string and assigns it to the NewName field.
func (o *HubDbTableCloneRequest) SetNewName(v string) {
	o.NewName = &v
}

// GetIsHubspotDefined returns the IsHubspotDefined field value
func (o *HubDbTableCloneRequest) GetIsHubspotDefined() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsHubspotDefined
}

// GetIsHubspotDefinedOk returns a tuple with the IsHubspotDefined field value
// and a boolean to check if the value has been set.
func (o *HubDbTableCloneRequest) GetIsHubspotDefinedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsHubspotDefined, true
}

// SetIsHubspotDefined sets field value
func (o *HubDbTableCloneRequest) SetIsHubspotDefined(v bool) {
	o.IsHubspotDefined = v
}

// GetNewLabel returns the NewLabel field value if set, zero value otherwise.
func (o *HubDbTableCloneRequest) GetNewLabel() string {
	if o == nil || IsNil(o.NewLabel) {
		var ret string
		return ret
	}
	return *o.NewLabel
}

// GetNewLabelOk returns a tuple with the NewLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HubDbTableCloneRequest) GetNewLabelOk() (*string, bool) {
	if o == nil || IsNil(o.NewLabel) {
		return nil, false
	}
	return o.NewLabel, true
}

// HasNewLabel returns a boolean if a field has been set.
func (o *HubDbTableCloneRequest) HasNewLabel() bool {
	if o != nil && !IsNil(o.NewLabel) {
		return true
	}

	return false
}

// SetNewLabel gets a reference to the given string and assigns it to the NewLabel field.
func (o *HubDbTableCloneRequest) SetNewLabel(v string) {
	o.NewLabel = &v
}

// GetCopyRows returns the CopyRows field value
func (o *HubDbTableCloneRequest) GetCopyRows() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CopyRows
}

// GetCopyRowsOk returns a tuple with the CopyRows field value
// and a boolean to check if the value has been set.
func (o *HubDbTableCloneRequest) GetCopyRowsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CopyRows, true
}

// SetCopyRows sets field value
func (o *HubDbTableCloneRequest) SetCopyRows(v bool) {
	o.CopyRows = v
}

func (o HubDbTableCloneRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HubDbTableCloneRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewName) {
		toSerialize["newName"] = o.NewName
	}
	toSerialize["isHubspotDefined"] = o.IsHubspotDefined
	if !IsNil(o.NewLabel) {
		toSerialize["newLabel"] = o.NewLabel
	}
	toSerialize["copyRows"] = o.CopyRows
	return toSerialize, nil
}

func (o *HubDbTableCloneRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"isHubspotDefined",
		"copyRows",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHubDbTableCloneRequest := _HubDbTableCloneRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHubDbTableCloneRequest)

	if err != nil {
		return err
	}

	*o = HubDbTableCloneRequest(varHubDbTableCloneRequest)

	return err
}

type NullableHubDbTableCloneRequest struct {
	value *HubDbTableCloneRequest
	isSet bool
}

func (v NullableHubDbTableCloneRequest) Get() *HubDbTableCloneRequest {
	return v.value
}

func (v *NullableHubDbTableCloneRequest) Set(val *HubDbTableCloneRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHubDbTableCloneRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHubDbTableCloneRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHubDbTableCloneRequest(val *HubDbTableCloneRequest) *NullableHubDbTableCloneRequest {
	return &NullableHubDbTableCloneRequest{value: val, isSet: true}
}

func (v NullableHubDbTableCloneRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHubDbTableCloneRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


