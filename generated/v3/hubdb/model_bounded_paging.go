/*
Hubdb

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hubdb

import (
	"encoding/json"
)

// checks if the BoundedPaging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BoundedPaging{}

// BoundedPaging struct for BoundedPaging
type BoundedPaging struct {
	Next *BoundedNextPage `json:"next,omitempty"`
}

// NewBoundedPaging instantiates a new BoundedPaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBoundedPaging() *BoundedPaging {
	this := BoundedPaging{}
	return &this
}

// NewBoundedPagingWithDefaults instantiates a new BoundedPaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBoundedPagingWithDefaults() *BoundedPaging {
	this := BoundedPaging{}
	return &this
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *BoundedPaging) GetNext() BoundedNextPage {
	if o == nil || IsNil(o.Next) {
		var ret BoundedNextPage
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BoundedPaging) GetNextOk() (*BoundedNextPage, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *BoundedPaging) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given BoundedNextPage and assigns it to the Next field.
func (o *BoundedPaging) SetNext(v BoundedNextPage) {
	o.Next = &v
}

func (o BoundedPaging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BoundedPaging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	return toSerialize, nil
}

type NullableBoundedPaging struct {
	value *BoundedPaging
	isSet bool
}

func (v NullableBoundedPaging) Get() *BoundedPaging {
	return v.value
}

func (v *NullableBoundedPaging) Set(val *BoundedPaging) {
	v.value = val
	v.isSet = true
}

func (v NullableBoundedPaging) IsSet() bool {
	return v.isSet
}

func (v *NullableBoundedPaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBoundedPaging(val *BoundedPaging) *NullableBoundedPaging {
	return &NullableBoundedPaging{value: val, isSet: true}
}

func (v NullableBoundedPaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBoundedPaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


