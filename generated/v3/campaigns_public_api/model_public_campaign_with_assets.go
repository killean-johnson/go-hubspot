/*
Campaigns Public Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package campaigns_public_api

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PublicCampaignWithAssets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicCampaignWithAssets{}

// PublicCampaignWithAssets struct for PublicCampaignWithAssets
type PublicCampaignWithAssets struct {
	CreatedAt time.Time `json:"createdAt"`
	Assets map[string]CollectionResponsePublicCampaignAsset `json:"assets"`
	Id string `json:"id"`
	Properties map[string]string `json:"properties"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type _PublicCampaignWithAssets PublicCampaignWithAssets

// NewPublicCampaignWithAssets instantiates a new PublicCampaignWithAssets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicCampaignWithAssets(createdAt time.Time, assets map[string]CollectionResponsePublicCampaignAsset, id string, properties map[string]string, updatedAt time.Time) *PublicCampaignWithAssets {
	this := PublicCampaignWithAssets{}
	this.CreatedAt = createdAt
	this.Assets = assets
	this.Id = id
	this.Properties = properties
	this.UpdatedAt = updatedAt
	return &this
}

// NewPublicCampaignWithAssetsWithDefaults instantiates a new PublicCampaignWithAssets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicCampaignWithAssetsWithDefaults() *PublicCampaignWithAssets {
	this := PublicCampaignWithAssets{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *PublicCampaignWithAssets) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PublicCampaignWithAssets) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PublicCampaignWithAssets) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetAssets returns the Assets field value
func (o *PublicCampaignWithAssets) GetAssets() map[string]CollectionResponsePublicCampaignAsset {
	if o == nil {
		var ret map[string]CollectionResponsePublicCampaignAsset
		return ret
	}

	return o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value
// and a boolean to check if the value has been set.
func (o *PublicCampaignWithAssets) GetAssetsOk() (*map[string]CollectionResponsePublicCampaignAsset, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assets, true
}

// SetAssets sets field value
func (o *PublicCampaignWithAssets) SetAssets(v map[string]CollectionResponsePublicCampaignAsset) {
	o.Assets = v
}

// GetId returns the Id field value
func (o *PublicCampaignWithAssets) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PublicCampaignWithAssets) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PublicCampaignWithAssets) SetId(v string) {
	o.Id = v
}

// GetProperties returns the Properties field value
func (o *PublicCampaignWithAssets) GetProperties() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *PublicCampaignWithAssets) GetPropertiesOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *PublicCampaignWithAssets) SetProperties(v map[string]string) {
	o.Properties = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PublicCampaignWithAssets) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PublicCampaignWithAssets) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PublicCampaignWithAssets) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o PublicCampaignWithAssets) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicCampaignWithAssets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["assets"] = o.Assets
	toSerialize["id"] = o.Id
	toSerialize["properties"] = o.Properties
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *PublicCampaignWithAssets) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"assets",
		"id",
		"properties",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicCampaignWithAssets := _PublicCampaignWithAssets{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicCampaignWithAssets)

	if err != nil {
		return err
	}

	*o = PublicCampaignWithAssets(varPublicCampaignWithAssets)

	return err
}

type NullablePublicCampaignWithAssets struct {
	value *PublicCampaignWithAssets
	isSet bool
}

func (v NullablePublicCampaignWithAssets) Get() *PublicCampaignWithAssets {
	return v.value
}

func (v *NullablePublicCampaignWithAssets) Set(val *PublicCampaignWithAssets) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicCampaignWithAssets) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicCampaignWithAssets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicCampaignWithAssets(val *PublicCampaignWithAssets) *NullablePublicCampaignWithAssets {
	return &NullablePublicCampaignWithAssets{value: val, isSet: true}
}

func (v NullablePublicCampaignWithAssets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicCampaignWithAssets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


