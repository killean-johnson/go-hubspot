/*
Campaigns Public Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package campaigns_public_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MetricsCounters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricsCounters{}

// MetricsCounters struct for MetricsCounters
type MetricsCounters struct {
	Sessions int32 `json:"sessions"`
	NewContactsFirstTouch int32 `json:"newContactsFirstTouch"`
	InfluencedContacts int32 `json:"influencedContacts"`
	NewContactsLastTouch int32 `json:"newContactsLastTouch"`
}

type _MetricsCounters MetricsCounters

// NewMetricsCounters instantiates a new MetricsCounters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsCounters(sessions int32, newContactsFirstTouch int32, influencedContacts int32, newContactsLastTouch int32) *MetricsCounters {
	this := MetricsCounters{}
	this.Sessions = sessions
	this.NewContactsFirstTouch = newContactsFirstTouch
	this.InfluencedContacts = influencedContacts
	this.NewContactsLastTouch = newContactsLastTouch
	return &this
}

// NewMetricsCountersWithDefaults instantiates a new MetricsCounters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsCountersWithDefaults() *MetricsCounters {
	this := MetricsCounters{}
	return &this
}

// GetSessions returns the Sessions field value
func (o *MetricsCounters) GetSessions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Sessions
}

// GetSessionsOk returns a tuple with the Sessions field value
// and a boolean to check if the value has been set.
func (o *MetricsCounters) GetSessionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sessions, true
}

// SetSessions sets field value
func (o *MetricsCounters) SetSessions(v int32) {
	o.Sessions = v
}

// GetNewContactsFirstTouch returns the NewContactsFirstTouch field value
func (o *MetricsCounters) GetNewContactsFirstTouch() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NewContactsFirstTouch
}

// GetNewContactsFirstTouchOk returns a tuple with the NewContactsFirstTouch field value
// and a boolean to check if the value has been set.
func (o *MetricsCounters) GetNewContactsFirstTouchOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewContactsFirstTouch, true
}

// SetNewContactsFirstTouch sets field value
func (o *MetricsCounters) SetNewContactsFirstTouch(v int32) {
	o.NewContactsFirstTouch = v
}

// GetInfluencedContacts returns the InfluencedContacts field value
func (o *MetricsCounters) GetInfluencedContacts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InfluencedContacts
}

// GetInfluencedContactsOk returns a tuple with the InfluencedContacts field value
// and a boolean to check if the value has been set.
func (o *MetricsCounters) GetInfluencedContactsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InfluencedContacts, true
}

// SetInfluencedContacts sets field value
func (o *MetricsCounters) SetInfluencedContacts(v int32) {
	o.InfluencedContacts = v
}

// GetNewContactsLastTouch returns the NewContactsLastTouch field value
func (o *MetricsCounters) GetNewContactsLastTouch() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NewContactsLastTouch
}

// GetNewContactsLastTouchOk returns a tuple with the NewContactsLastTouch field value
// and a boolean to check if the value has been set.
func (o *MetricsCounters) GetNewContactsLastTouchOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewContactsLastTouch, true
}

// SetNewContactsLastTouch sets field value
func (o *MetricsCounters) SetNewContactsLastTouch(v int32) {
	o.NewContactsLastTouch = v
}

func (o MetricsCounters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricsCounters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sessions"] = o.Sessions
	toSerialize["newContactsFirstTouch"] = o.NewContactsFirstTouch
	toSerialize["influencedContacts"] = o.InfluencedContacts
	toSerialize["newContactsLastTouch"] = o.NewContactsLastTouch
	return toSerialize, nil
}

func (o *MetricsCounters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sessions",
		"newContactsFirstTouch",
		"influencedContacts",
		"newContactsLastTouch",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMetricsCounters := _MetricsCounters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMetricsCounters)

	if err != nil {
		return err
	}

	*o = MetricsCounters(varMetricsCounters)

	return err
}

type NullableMetricsCounters struct {
	value *MetricsCounters
	isSet bool
}

func (v NullableMetricsCounters) Get() *MetricsCounters {
	return v.value
}

func (v *NullableMetricsCounters) Set(val *MetricsCounters) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsCounters) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsCounters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsCounters(val *MetricsCounters) *NullableMetricsCounters {
	return &NullableMetricsCounters{value: val, isSet: true}
}

func (v NullableMetricsCounters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsCounters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


