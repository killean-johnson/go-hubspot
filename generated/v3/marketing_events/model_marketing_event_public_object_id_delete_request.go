/*
Marketing Events

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_events

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MarketingEventPublicObjectIdDeleteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketingEventPublicObjectIdDeleteRequest{}

// MarketingEventPublicObjectIdDeleteRequest struct for MarketingEventPublicObjectIdDeleteRequest
type MarketingEventPublicObjectIdDeleteRequest struct {
	ObjectId string `json:"objectId"`
}

type _MarketingEventPublicObjectIdDeleteRequest MarketingEventPublicObjectIdDeleteRequest

// NewMarketingEventPublicObjectIdDeleteRequest instantiates a new MarketingEventPublicObjectIdDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketingEventPublicObjectIdDeleteRequest(objectId string) *MarketingEventPublicObjectIdDeleteRequest {
	this := MarketingEventPublicObjectIdDeleteRequest{}
	this.ObjectId = objectId
	return &this
}

// NewMarketingEventPublicObjectIdDeleteRequestWithDefaults instantiates a new MarketingEventPublicObjectIdDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketingEventPublicObjectIdDeleteRequestWithDefaults() *MarketingEventPublicObjectIdDeleteRequest {
	this := MarketingEventPublicObjectIdDeleteRequest{}
	return &this
}

// GetObjectId returns the ObjectId field value
func (o *MarketingEventPublicObjectIdDeleteRequest) GetObjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicObjectIdDeleteRequest) GetObjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectId, true
}

// SetObjectId sets field value
func (o *MarketingEventPublicObjectIdDeleteRequest) SetObjectId(v string) {
	o.ObjectId = v
}

func (o MarketingEventPublicObjectIdDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketingEventPublicObjectIdDeleteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objectId"] = o.ObjectId
	return toSerialize, nil
}

func (o *MarketingEventPublicObjectIdDeleteRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMarketingEventPublicObjectIdDeleteRequest := _MarketingEventPublicObjectIdDeleteRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMarketingEventPublicObjectIdDeleteRequest)

	if err != nil {
		return err
	}

	*o = MarketingEventPublicObjectIdDeleteRequest(varMarketingEventPublicObjectIdDeleteRequest)

	return err
}

type NullableMarketingEventPublicObjectIdDeleteRequest struct {
	value *MarketingEventPublicObjectIdDeleteRequest
	isSet bool
}

func (v NullableMarketingEventPublicObjectIdDeleteRequest) Get() *MarketingEventPublicObjectIdDeleteRequest {
	return v.value
}

func (v *NullableMarketingEventPublicObjectIdDeleteRequest) Set(val *MarketingEventPublicObjectIdDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketingEventPublicObjectIdDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketingEventPublicObjectIdDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketingEventPublicObjectIdDeleteRequest(val *MarketingEventPublicObjectIdDeleteRequest) *NullableMarketingEventPublicObjectIdDeleteRequest {
	return &NullableMarketingEventPublicObjectIdDeleteRequest{value: val, isSet: true}
}

func (v NullableMarketingEventPublicObjectIdDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketingEventPublicObjectIdDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


