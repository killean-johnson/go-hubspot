/*
Marketing Events

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_events

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the MarketingEventPublicUpdateRequestFullV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketingEventPublicUpdateRequestFullV2{}

// MarketingEventPublicUpdateRequestFullV2 struct for MarketingEventPublicUpdateRequestFullV2
type MarketingEventPublicUpdateRequestFullV2 struct {
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	CustomProperties []PropertyValue `json:"customProperties"`
	EventCancelled *bool `json:"eventCancelled,omitempty"`
	EventOrganizer *string `json:"eventOrganizer,omitempty"`
	EventUrl *string `json:"eventUrl,omitempty"`
	EventDescription *string `json:"eventDescription,omitempty"`
	EventName *string `json:"eventName,omitempty"`
	EventType *string `json:"eventType,omitempty"`
	EndDateTime *time.Time `json:"endDateTime,omitempty"`
	ObjectId string `json:"objectId"`
}

type _MarketingEventPublicUpdateRequestFullV2 MarketingEventPublicUpdateRequestFullV2

// NewMarketingEventPublicUpdateRequestFullV2 instantiates a new MarketingEventPublicUpdateRequestFullV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketingEventPublicUpdateRequestFullV2(customProperties []PropertyValue, objectId string) *MarketingEventPublicUpdateRequestFullV2 {
	this := MarketingEventPublicUpdateRequestFullV2{}
	this.CustomProperties = customProperties
	this.ObjectId = objectId
	return &this
}

// NewMarketingEventPublicUpdateRequestFullV2WithDefaults instantiates a new MarketingEventPublicUpdateRequestFullV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketingEventPublicUpdateRequestFullV2WithDefaults() *MarketingEventPublicUpdateRequestFullV2 {
	this := MarketingEventPublicUpdateRequestFullV2{}
	return &this
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *MarketingEventPublicUpdateRequestFullV2) GetStartDateTime() time.Time {
	if o == nil || IsNil(o.StartDateTime) {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDateTime) {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) HasStartDateTime() bool {
	if o != nil && !IsNil(o.StartDateTime) {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given time.Time and assigns it to the StartDateTime field.
func (o *MarketingEventPublicUpdateRequestFullV2) SetStartDateTime(v time.Time) {
	o.StartDateTime = &v
}

// GetCustomProperties returns the CustomProperties field value
func (o *MarketingEventPublicUpdateRequestFullV2) GetCustomProperties() []PropertyValue {
	if o == nil {
		var ret []PropertyValue
		return ret
	}

	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) GetCustomPropertiesOk() ([]PropertyValue, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomProperties, true
}

// SetCustomProperties sets field value
func (o *MarketingEventPublicUpdateRequestFullV2) SetCustomProperties(v []PropertyValue) {
	o.CustomProperties = v
}

// GetEventCancelled returns the EventCancelled field value if set, zero value otherwise.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventCancelled() bool {
	if o == nil || IsNil(o.EventCancelled) {
		var ret bool
		return ret
	}
	return *o.EventCancelled
}

// GetEventCancelledOk returns a tuple with the EventCancelled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventCancelledOk() (*bool, bool) {
	if o == nil || IsNil(o.EventCancelled) {
		return nil, false
	}
	return o.EventCancelled, true
}

// HasEventCancelled returns a boolean if a field has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) HasEventCancelled() bool {
	if o != nil && !IsNil(o.EventCancelled) {
		return true
	}

	return false
}

// SetEventCancelled gets a reference to the given bool and assigns it to the EventCancelled field.
func (o *MarketingEventPublicUpdateRequestFullV2) SetEventCancelled(v bool) {
	o.EventCancelled = &v
}

// GetEventOrganizer returns the EventOrganizer field value if set, zero value otherwise.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventOrganizer() string {
	if o == nil || IsNil(o.EventOrganizer) {
		var ret string
		return ret
	}
	return *o.EventOrganizer
}

// GetEventOrganizerOk returns a tuple with the EventOrganizer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventOrganizerOk() (*string, bool) {
	if o == nil || IsNil(o.EventOrganizer) {
		return nil, false
	}
	return o.EventOrganizer, true
}

// HasEventOrganizer returns a boolean if a field has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) HasEventOrganizer() bool {
	if o != nil && !IsNil(o.EventOrganizer) {
		return true
	}

	return false
}

// SetEventOrganizer gets a reference to the given string and assigns it to the EventOrganizer field.
func (o *MarketingEventPublicUpdateRequestFullV2) SetEventOrganizer(v string) {
	o.EventOrganizer = &v
}

// GetEventUrl returns the EventUrl field value if set, zero value otherwise.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventUrl() string {
	if o == nil || IsNil(o.EventUrl) {
		var ret string
		return ret
	}
	return *o.EventUrl
}

// GetEventUrlOk returns a tuple with the EventUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventUrlOk() (*string, bool) {
	if o == nil || IsNil(o.EventUrl) {
		return nil, false
	}
	return o.EventUrl, true
}

// HasEventUrl returns a boolean if a field has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) HasEventUrl() bool {
	if o != nil && !IsNil(o.EventUrl) {
		return true
	}

	return false
}

// SetEventUrl gets a reference to the given string and assigns it to the EventUrl field.
func (o *MarketingEventPublicUpdateRequestFullV2) SetEventUrl(v string) {
	o.EventUrl = &v
}

// GetEventDescription returns the EventDescription field value if set, zero value otherwise.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventDescription() string {
	if o == nil || IsNil(o.EventDescription) {
		var ret string
		return ret
	}
	return *o.EventDescription
}

// GetEventDescriptionOk returns a tuple with the EventDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.EventDescription) {
		return nil, false
	}
	return o.EventDescription, true
}

// HasEventDescription returns a boolean if a field has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) HasEventDescription() bool {
	if o != nil && !IsNil(o.EventDescription) {
		return true
	}

	return false
}

// SetEventDescription gets a reference to the given string and assigns it to the EventDescription field.
func (o *MarketingEventPublicUpdateRequestFullV2) SetEventDescription(v string) {
	o.EventDescription = &v
}

// GetEventName returns the EventName field value if set, zero value otherwise.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventName() string {
	if o == nil || IsNil(o.EventName) {
		var ret string
		return ret
	}
	return *o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventNameOk() (*string, bool) {
	if o == nil || IsNil(o.EventName) {
		return nil, false
	}
	return o.EventName, true
}

// HasEventName returns a boolean if a field has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) HasEventName() bool {
	if o != nil && !IsNil(o.EventName) {
		return true
	}

	return false
}

// SetEventName gets a reference to the given string and assigns it to the EventName field.
func (o *MarketingEventPublicUpdateRequestFullV2) SetEventName(v string) {
	o.EventName = &v
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventType() string {
	if o == nil || IsNil(o.EventType) {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEventTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EventType) {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) HasEventType() bool {
	if o != nil && !IsNil(o.EventType) {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *MarketingEventPublicUpdateRequestFullV2) SetEventType(v string) {
	o.EventType = &v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEndDateTime() time.Time {
	if o == nil || IsNil(o.EndDateTime) {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDateTime) {
		return nil, false
	}
	return o.EndDateTime, true
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) HasEndDateTime() bool {
	if o != nil && !IsNil(o.EndDateTime) {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given time.Time and assigns it to the EndDateTime field.
func (o *MarketingEventPublicUpdateRequestFullV2) SetEndDateTime(v time.Time) {
	o.EndDateTime = &v
}

// GetObjectId returns the ObjectId field value
func (o *MarketingEventPublicUpdateRequestFullV2) GetObjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicUpdateRequestFullV2) GetObjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectId, true
}

// SetObjectId sets field value
func (o *MarketingEventPublicUpdateRequestFullV2) SetObjectId(v string) {
	o.ObjectId = v
}

func (o MarketingEventPublicUpdateRequestFullV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketingEventPublicUpdateRequestFullV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartDateTime) {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	toSerialize["customProperties"] = o.CustomProperties
	if !IsNil(o.EventCancelled) {
		toSerialize["eventCancelled"] = o.EventCancelled
	}
	if !IsNil(o.EventOrganizer) {
		toSerialize["eventOrganizer"] = o.EventOrganizer
	}
	if !IsNil(o.EventUrl) {
		toSerialize["eventUrl"] = o.EventUrl
	}
	if !IsNil(o.EventDescription) {
		toSerialize["eventDescription"] = o.EventDescription
	}
	if !IsNil(o.EventName) {
		toSerialize["eventName"] = o.EventName
	}
	if !IsNil(o.EventType) {
		toSerialize["eventType"] = o.EventType
	}
	if !IsNil(o.EndDateTime) {
		toSerialize["endDateTime"] = o.EndDateTime
	}
	toSerialize["objectId"] = o.ObjectId
	return toSerialize, nil
}

func (o *MarketingEventPublicUpdateRequestFullV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customProperties",
		"objectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMarketingEventPublicUpdateRequestFullV2 := _MarketingEventPublicUpdateRequestFullV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMarketingEventPublicUpdateRequestFullV2)

	if err != nil {
		return err
	}

	*o = MarketingEventPublicUpdateRequestFullV2(varMarketingEventPublicUpdateRequestFullV2)

	return err
}

type NullableMarketingEventPublicUpdateRequestFullV2 struct {
	value *MarketingEventPublicUpdateRequestFullV2
	isSet bool
}

func (v NullableMarketingEventPublicUpdateRequestFullV2) Get() *MarketingEventPublicUpdateRequestFullV2 {
	return v.value
}

func (v *NullableMarketingEventPublicUpdateRequestFullV2) Set(val *MarketingEventPublicUpdateRequestFullV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketingEventPublicUpdateRequestFullV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketingEventPublicUpdateRequestFullV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketingEventPublicUpdateRequestFullV2(val *MarketingEventPublicUpdateRequestFullV2) *NullableMarketingEventPublicUpdateRequestFullV2 {
	return &NullableMarketingEventPublicUpdateRequestFullV2{value: val, isSet: true}
}

func (v NullableMarketingEventPublicUpdateRequestFullV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketingEventPublicUpdateRequestFullV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


