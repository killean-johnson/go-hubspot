/*
Marketing Events

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_events

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the MarketingEventPublicReadResponseV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketingEventPublicReadResponseV2{}

// MarketingEventPublicReadResponseV2 struct for MarketingEventPublicReadResponseV2
type MarketingEventPublicReadResponseV2 struct {
	Registrants *int32 `json:"registrants,omitempty"`
	EventOrganizer *string `json:"eventOrganizer,omitempty"`
	EventUrl *string `json:"eventUrl,omitempty"`
	Attendees *int32 `json:"attendees,omitempty"`
	AppInfo *AppInfo `json:"appInfo,omitempty"`
	EventType *string `json:"eventType,omitempty"`
	EventCompleted *bool `json:"eventCompleted,omitempty"`
	EndDateTime *time.Time `json:"endDateTime,omitempty"`
	NoShows *int32 `json:"noShows,omitempty"`
	Cancellations *int32 `json:"cancellations,omitempty"`
	CreatedAt time.Time `json:"createdAt"`
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	CustomProperties []CrmPropertyWrapper `json:"customProperties"`
	EventCancelled *bool `json:"eventCancelled,omitempty"`
	ExternalEventId *string `json:"externalEventId,omitempty"`
	EventStatus *string `json:"eventStatus,omitempty"`
	EventDescription *string `json:"eventDescription,omitempty"`
	EventName string `json:"eventName"`
	ObjectId string `json:"objectId"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type _MarketingEventPublicReadResponseV2 MarketingEventPublicReadResponseV2

// NewMarketingEventPublicReadResponseV2 instantiates a new MarketingEventPublicReadResponseV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketingEventPublicReadResponseV2(createdAt time.Time, customProperties []CrmPropertyWrapper, eventName string, objectId string, updatedAt time.Time) *MarketingEventPublicReadResponseV2 {
	this := MarketingEventPublicReadResponseV2{}
	this.CreatedAt = createdAt
	this.CustomProperties = customProperties
	this.EventName = eventName
	this.ObjectId = objectId
	this.UpdatedAt = updatedAt
	return &this
}

// NewMarketingEventPublicReadResponseV2WithDefaults instantiates a new MarketingEventPublicReadResponseV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketingEventPublicReadResponseV2WithDefaults() *MarketingEventPublicReadResponseV2 {
	this := MarketingEventPublicReadResponseV2{}
	return &this
}

// GetRegistrants returns the Registrants field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetRegistrants() int32 {
	if o == nil || IsNil(o.Registrants) {
		var ret int32
		return ret
	}
	return *o.Registrants
}

// GetRegistrantsOk returns a tuple with the Registrants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetRegistrantsOk() (*int32, bool) {
	if o == nil || IsNil(o.Registrants) {
		return nil, false
	}
	return o.Registrants, true
}

// HasRegistrants returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasRegistrants() bool {
	if o != nil && !IsNil(o.Registrants) {
		return true
	}

	return false
}

// SetRegistrants gets a reference to the given int32 and assigns it to the Registrants field.
func (o *MarketingEventPublicReadResponseV2) SetRegistrants(v int32) {
	o.Registrants = &v
}

// GetEventOrganizer returns the EventOrganizer field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetEventOrganizer() string {
	if o == nil || IsNil(o.EventOrganizer) {
		var ret string
		return ret
	}
	return *o.EventOrganizer
}

// GetEventOrganizerOk returns a tuple with the EventOrganizer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetEventOrganizerOk() (*string, bool) {
	if o == nil || IsNil(o.EventOrganizer) {
		return nil, false
	}
	return o.EventOrganizer, true
}

// HasEventOrganizer returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasEventOrganizer() bool {
	if o != nil && !IsNil(o.EventOrganizer) {
		return true
	}

	return false
}

// SetEventOrganizer gets a reference to the given string and assigns it to the EventOrganizer field.
func (o *MarketingEventPublicReadResponseV2) SetEventOrganizer(v string) {
	o.EventOrganizer = &v
}

// GetEventUrl returns the EventUrl field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetEventUrl() string {
	if o == nil || IsNil(o.EventUrl) {
		var ret string
		return ret
	}
	return *o.EventUrl
}

// GetEventUrlOk returns a tuple with the EventUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetEventUrlOk() (*string, bool) {
	if o == nil || IsNil(o.EventUrl) {
		return nil, false
	}
	return o.EventUrl, true
}

// HasEventUrl returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasEventUrl() bool {
	if o != nil && !IsNil(o.EventUrl) {
		return true
	}

	return false
}

// SetEventUrl gets a reference to the given string and assigns it to the EventUrl field.
func (o *MarketingEventPublicReadResponseV2) SetEventUrl(v string) {
	o.EventUrl = &v
}

// GetAttendees returns the Attendees field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetAttendees() int32 {
	if o == nil || IsNil(o.Attendees) {
		var ret int32
		return ret
	}
	return *o.Attendees
}

// GetAttendeesOk returns a tuple with the Attendees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetAttendeesOk() (*int32, bool) {
	if o == nil || IsNil(o.Attendees) {
		return nil, false
	}
	return o.Attendees, true
}

// HasAttendees returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasAttendees() bool {
	if o != nil && !IsNil(o.Attendees) {
		return true
	}

	return false
}

// SetAttendees gets a reference to the given int32 and assigns it to the Attendees field.
func (o *MarketingEventPublicReadResponseV2) SetAttendees(v int32) {
	o.Attendees = &v
}

// GetAppInfo returns the AppInfo field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetAppInfo() AppInfo {
	if o == nil || IsNil(o.AppInfo) {
		var ret AppInfo
		return ret
	}
	return *o.AppInfo
}

// GetAppInfoOk returns a tuple with the AppInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetAppInfoOk() (*AppInfo, bool) {
	if o == nil || IsNil(o.AppInfo) {
		return nil, false
	}
	return o.AppInfo, true
}

// HasAppInfo returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasAppInfo() bool {
	if o != nil && !IsNil(o.AppInfo) {
		return true
	}

	return false
}

// SetAppInfo gets a reference to the given AppInfo and assigns it to the AppInfo field.
func (o *MarketingEventPublicReadResponseV2) SetAppInfo(v AppInfo) {
	o.AppInfo = &v
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetEventType() string {
	if o == nil || IsNil(o.EventType) {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetEventTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EventType) {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasEventType() bool {
	if o != nil && !IsNil(o.EventType) {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *MarketingEventPublicReadResponseV2) SetEventType(v string) {
	o.EventType = &v
}

// GetEventCompleted returns the EventCompleted field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetEventCompleted() bool {
	if o == nil || IsNil(o.EventCompleted) {
		var ret bool
		return ret
	}
	return *o.EventCompleted
}

// GetEventCompletedOk returns a tuple with the EventCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetEventCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.EventCompleted) {
		return nil, false
	}
	return o.EventCompleted, true
}

// HasEventCompleted returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasEventCompleted() bool {
	if o != nil && !IsNil(o.EventCompleted) {
		return true
	}

	return false
}

// SetEventCompleted gets a reference to the given bool and assigns it to the EventCompleted field.
func (o *MarketingEventPublicReadResponseV2) SetEventCompleted(v bool) {
	o.EventCompleted = &v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetEndDateTime() time.Time {
	if o == nil || IsNil(o.EndDateTime) {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDateTime) {
		return nil, false
	}
	return o.EndDateTime, true
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasEndDateTime() bool {
	if o != nil && !IsNil(o.EndDateTime) {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given time.Time and assigns it to the EndDateTime field.
func (o *MarketingEventPublicReadResponseV2) SetEndDateTime(v time.Time) {
	o.EndDateTime = &v
}

// GetNoShows returns the NoShows field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetNoShows() int32 {
	if o == nil || IsNil(o.NoShows) {
		var ret int32
		return ret
	}
	return *o.NoShows
}

// GetNoShowsOk returns a tuple with the NoShows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetNoShowsOk() (*int32, bool) {
	if o == nil || IsNil(o.NoShows) {
		return nil, false
	}
	return o.NoShows, true
}

// HasNoShows returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasNoShows() bool {
	if o != nil && !IsNil(o.NoShows) {
		return true
	}

	return false
}

// SetNoShows gets a reference to the given int32 and assigns it to the NoShows field.
func (o *MarketingEventPublicReadResponseV2) SetNoShows(v int32) {
	o.NoShows = &v
}

// GetCancellations returns the Cancellations field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetCancellations() int32 {
	if o == nil || IsNil(o.Cancellations) {
		var ret int32
		return ret
	}
	return *o.Cancellations
}

// GetCancellationsOk returns a tuple with the Cancellations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetCancellationsOk() (*int32, bool) {
	if o == nil || IsNil(o.Cancellations) {
		return nil, false
	}
	return o.Cancellations, true
}

// HasCancellations returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasCancellations() bool {
	if o != nil && !IsNil(o.Cancellations) {
		return true
	}

	return false
}

// SetCancellations gets a reference to the given int32 and assigns it to the Cancellations field.
func (o *MarketingEventPublicReadResponseV2) SetCancellations(v int32) {
	o.Cancellations = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *MarketingEventPublicReadResponseV2) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *MarketingEventPublicReadResponseV2) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetStartDateTime() time.Time {
	if o == nil || IsNil(o.StartDateTime) {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDateTime) {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasStartDateTime() bool {
	if o != nil && !IsNil(o.StartDateTime) {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given time.Time and assigns it to the StartDateTime field.
func (o *MarketingEventPublicReadResponseV2) SetStartDateTime(v time.Time) {
	o.StartDateTime = &v
}

// GetCustomProperties returns the CustomProperties field value
func (o *MarketingEventPublicReadResponseV2) GetCustomProperties() []CrmPropertyWrapper {
	if o == nil {
		var ret []CrmPropertyWrapper
		return ret
	}

	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetCustomPropertiesOk() ([]CrmPropertyWrapper, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomProperties, true
}

// SetCustomProperties sets field value
func (o *MarketingEventPublicReadResponseV2) SetCustomProperties(v []CrmPropertyWrapper) {
	o.CustomProperties = v
}

// GetEventCancelled returns the EventCancelled field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetEventCancelled() bool {
	if o == nil || IsNil(o.EventCancelled) {
		var ret bool
		return ret
	}
	return *o.EventCancelled
}

// GetEventCancelledOk returns a tuple with the EventCancelled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetEventCancelledOk() (*bool, bool) {
	if o == nil || IsNil(o.EventCancelled) {
		return nil, false
	}
	return o.EventCancelled, true
}

// HasEventCancelled returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasEventCancelled() bool {
	if o != nil && !IsNil(o.EventCancelled) {
		return true
	}

	return false
}

// SetEventCancelled gets a reference to the given bool and assigns it to the EventCancelled field.
func (o *MarketingEventPublicReadResponseV2) SetEventCancelled(v bool) {
	o.EventCancelled = &v
}

// GetExternalEventId returns the ExternalEventId field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetExternalEventId() string {
	if o == nil || IsNil(o.ExternalEventId) {
		var ret string
		return ret
	}
	return *o.ExternalEventId
}

// GetExternalEventIdOk returns a tuple with the ExternalEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetExternalEventIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalEventId) {
		return nil, false
	}
	return o.ExternalEventId, true
}

// HasExternalEventId returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasExternalEventId() bool {
	if o != nil && !IsNil(o.ExternalEventId) {
		return true
	}

	return false
}

// SetExternalEventId gets a reference to the given string and assigns it to the ExternalEventId field.
func (o *MarketingEventPublicReadResponseV2) SetExternalEventId(v string) {
	o.ExternalEventId = &v
}

// GetEventStatus returns the EventStatus field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetEventStatus() string {
	if o == nil || IsNil(o.EventStatus) {
		var ret string
		return ret
	}
	return *o.EventStatus
}

// GetEventStatusOk returns a tuple with the EventStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetEventStatusOk() (*string, bool) {
	if o == nil || IsNil(o.EventStatus) {
		return nil, false
	}
	return o.EventStatus, true
}

// HasEventStatus returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasEventStatus() bool {
	if o != nil && !IsNil(o.EventStatus) {
		return true
	}

	return false
}

// SetEventStatus gets a reference to the given string and assigns it to the EventStatus field.
func (o *MarketingEventPublicReadResponseV2) SetEventStatus(v string) {
	o.EventStatus = &v
}

// GetEventDescription returns the EventDescription field value if set, zero value otherwise.
func (o *MarketingEventPublicReadResponseV2) GetEventDescription() string {
	if o == nil || IsNil(o.EventDescription) {
		var ret string
		return ret
	}
	return *o.EventDescription
}

// GetEventDescriptionOk returns a tuple with the EventDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetEventDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.EventDescription) {
		return nil, false
	}
	return o.EventDescription, true
}

// HasEventDescription returns a boolean if a field has been set.
func (o *MarketingEventPublicReadResponseV2) HasEventDescription() bool {
	if o != nil && !IsNil(o.EventDescription) {
		return true
	}

	return false
}

// SetEventDescription gets a reference to the given string and assigns it to the EventDescription field.
func (o *MarketingEventPublicReadResponseV2) SetEventDescription(v string) {
	o.EventDescription = &v
}

// GetEventName returns the EventName field value
func (o *MarketingEventPublicReadResponseV2) GetEventName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetEventNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventName, true
}

// SetEventName sets field value
func (o *MarketingEventPublicReadResponseV2) SetEventName(v string) {
	o.EventName = v
}

// GetObjectId returns the ObjectId field value
func (o *MarketingEventPublicReadResponseV2) GetObjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetObjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectId, true
}

// SetObjectId sets field value
func (o *MarketingEventPublicReadResponseV2) SetObjectId(v string) {
	o.ObjectId = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *MarketingEventPublicReadResponseV2) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *MarketingEventPublicReadResponseV2) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *MarketingEventPublicReadResponseV2) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o MarketingEventPublicReadResponseV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketingEventPublicReadResponseV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Registrants) {
		toSerialize["registrants"] = o.Registrants
	}
	if !IsNil(o.EventOrganizer) {
		toSerialize["eventOrganizer"] = o.EventOrganizer
	}
	if !IsNil(o.EventUrl) {
		toSerialize["eventUrl"] = o.EventUrl
	}
	if !IsNil(o.Attendees) {
		toSerialize["attendees"] = o.Attendees
	}
	if !IsNil(o.AppInfo) {
		toSerialize["appInfo"] = o.AppInfo
	}
	if !IsNil(o.EventType) {
		toSerialize["eventType"] = o.EventType
	}
	if !IsNil(o.EventCompleted) {
		toSerialize["eventCompleted"] = o.EventCompleted
	}
	if !IsNil(o.EndDateTime) {
		toSerialize["endDateTime"] = o.EndDateTime
	}
	if !IsNil(o.NoShows) {
		toSerialize["noShows"] = o.NoShows
	}
	if !IsNil(o.Cancellations) {
		toSerialize["cancellations"] = o.Cancellations
	}
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.StartDateTime) {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	toSerialize["customProperties"] = o.CustomProperties
	if !IsNil(o.EventCancelled) {
		toSerialize["eventCancelled"] = o.EventCancelled
	}
	if !IsNil(o.ExternalEventId) {
		toSerialize["externalEventId"] = o.ExternalEventId
	}
	if !IsNil(o.EventStatus) {
		toSerialize["eventStatus"] = o.EventStatus
	}
	if !IsNil(o.EventDescription) {
		toSerialize["eventDescription"] = o.EventDescription
	}
	toSerialize["eventName"] = o.EventName
	toSerialize["objectId"] = o.ObjectId
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *MarketingEventPublicReadResponseV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"customProperties",
		"eventName",
		"objectId",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMarketingEventPublicReadResponseV2 := _MarketingEventPublicReadResponseV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMarketingEventPublicReadResponseV2)

	if err != nil {
		return err
	}

	*o = MarketingEventPublicReadResponseV2(varMarketingEventPublicReadResponseV2)

	return err
}

type NullableMarketingEventPublicReadResponseV2 struct {
	value *MarketingEventPublicReadResponseV2
	isSet bool
}

func (v NullableMarketingEventPublicReadResponseV2) Get() *MarketingEventPublicReadResponseV2 {
	return v.value
}

func (v *NullableMarketingEventPublicReadResponseV2) Set(val *MarketingEventPublicReadResponseV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketingEventPublicReadResponseV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketingEventPublicReadResponseV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketingEventPublicReadResponseV2(val *MarketingEventPublicReadResponseV2) *NullableMarketingEventPublicReadResponseV2 {
	return &NullableMarketingEventPublicReadResponseV2{value: val, isSet: true}
}

func (v NullableMarketingEventPublicReadResponseV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketingEventPublicReadResponseV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


