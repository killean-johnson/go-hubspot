/*
Marketing Events

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_events

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EventDetailSettingsUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventDetailSettingsUrl{}

// EventDetailSettingsUrl struct for EventDetailSettingsUrl
type EventDetailSettingsUrl struct {
	// The url that will be used to fetch marketing event details by id. Must contain a `%s` character sequence that will be substituted with the event id. For example: `https://my.event.app/events/%s`
	EventDetailsUrl string `json:"eventDetailsUrl"`
}

type _EventDetailSettingsUrl EventDetailSettingsUrl

// NewEventDetailSettingsUrl instantiates a new EventDetailSettingsUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventDetailSettingsUrl(eventDetailsUrl string) *EventDetailSettingsUrl {
	this := EventDetailSettingsUrl{}
	this.EventDetailsUrl = eventDetailsUrl
	return &this
}

// NewEventDetailSettingsUrlWithDefaults instantiates a new EventDetailSettingsUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventDetailSettingsUrlWithDefaults() *EventDetailSettingsUrl {
	this := EventDetailSettingsUrl{}
	return &this
}

// GetEventDetailsUrl returns the EventDetailsUrl field value
func (o *EventDetailSettingsUrl) GetEventDetailsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventDetailsUrl
}

// GetEventDetailsUrlOk returns a tuple with the EventDetailsUrl field value
// and a boolean to check if the value has been set.
func (o *EventDetailSettingsUrl) GetEventDetailsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventDetailsUrl, true
}

// SetEventDetailsUrl sets field value
func (o *EventDetailSettingsUrl) SetEventDetailsUrl(v string) {
	o.EventDetailsUrl = v
}

func (o EventDetailSettingsUrl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventDetailSettingsUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["eventDetailsUrl"] = o.EventDetailsUrl
	return toSerialize, nil
}

func (o *EventDetailSettingsUrl) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"eventDetailsUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventDetailSettingsUrl := _EventDetailSettingsUrl{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEventDetailSettingsUrl)

	if err != nil {
		return err
	}

	*o = EventDetailSettingsUrl(varEventDetailSettingsUrl)

	return err
}

type NullableEventDetailSettingsUrl struct {
	value *EventDetailSettingsUrl
	isSet bool
}

func (v NullableEventDetailSettingsUrl) Get() *EventDetailSettingsUrl {
	return v.value
}

func (v *NullableEventDetailSettingsUrl) Set(val *EventDetailSettingsUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableEventDetailSettingsUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableEventDetailSettingsUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventDetailSettingsUrl(val *EventDetailSettingsUrl) *NullableEventDetailSettingsUrl {
	return &NullableEventDetailSettingsUrl{value: val, isSet: true}
}

func (v NullableEventDetailSettingsUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventDetailSettingsUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


