/*
Marketing Events

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_events

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ParticipationProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParticipationProperties{}

// ParticipationProperties struct for ParticipationProperties
type ParticipationProperties struct {
	OccurredAt int64 `json:"occurredAt"`
	AttendancePercentage *string `json:"attendancePercentage,omitempty"`
	AttendanceState string `json:"attendanceState"`
	AttendanceDurationSeconds *int32 `json:"attendanceDurationSeconds,omitempty"`
}

type _ParticipationProperties ParticipationProperties

// NewParticipationProperties instantiates a new ParticipationProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipationProperties(occurredAt int64, attendanceState string) *ParticipationProperties {
	this := ParticipationProperties{}
	this.OccurredAt = occurredAt
	this.AttendanceState = attendanceState
	return &this
}

// NewParticipationPropertiesWithDefaults instantiates a new ParticipationProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipationPropertiesWithDefaults() *ParticipationProperties {
	this := ParticipationProperties{}
	return &this
}

// GetOccurredAt returns the OccurredAt field value
func (o *ParticipationProperties) GetOccurredAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OccurredAt
}

// GetOccurredAtOk returns a tuple with the OccurredAt field value
// and a boolean to check if the value has been set.
func (o *ParticipationProperties) GetOccurredAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OccurredAt, true
}

// SetOccurredAt sets field value
func (o *ParticipationProperties) SetOccurredAt(v int64) {
	o.OccurredAt = v
}

// GetAttendancePercentage returns the AttendancePercentage field value if set, zero value otherwise.
func (o *ParticipationProperties) GetAttendancePercentage() string {
	if o == nil || IsNil(o.AttendancePercentage) {
		var ret string
		return ret
	}
	return *o.AttendancePercentage
}

// GetAttendancePercentageOk returns a tuple with the AttendancePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipationProperties) GetAttendancePercentageOk() (*string, bool) {
	if o == nil || IsNil(o.AttendancePercentage) {
		return nil, false
	}
	return o.AttendancePercentage, true
}

// HasAttendancePercentage returns a boolean if a field has been set.
func (o *ParticipationProperties) HasAttendancePercentage() bool {
	if o != nil && !IsNil(o.AttendancePercentage) {
		return true
	}

	return false
}

// SetAttendancePercentage gets a reference to the given string and assigns it to the AttendancePercentage field.
func (o *ParticipationProperties) SetAttendancePercentage(v string) {
	o.AttendancePercentage = &v
}

// GetAttendanceState returns the AttendanceState field value
func (o *ParticipationProperties) GetAttendanceState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttendanceState
}

// GetAttendanceStateOk returns a tuple with the AttendanceState field value
// and a boolean to check if the value has been set.
func (o *ParticipationProperties) GetAttendanceStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttendanceState, true
}

// SetAttendanceState sets field value
func (o *ParticipationProperties) SetAttendanceState(v string) {
	o.AttendanceState = v
}

// GetAttendanceDurationSeconds returns the AttendanceDurationSeconds field value if set, zero value otherwise.
func (o *ParticipationProperties) GetAttendanceDurationSeconds() int32 {
	if o == nil || IsNil(o.AttendanceDurationSeconds) {
		var ret int32
		return ret
	}
	return *o.AttendanceDurationSeconds
}

// GetAttendanceDurationSecondsOk returns a tuple with the AttendanceDurationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipationProperties) GetAttendanceDurationSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.AttendanceDurationSeconds) {
		return nil, false
	}
	return o.AttendanceDurationSeconds, true
}

// HasAttendanceDurationSeconds returns a boolean if a field has been set.
func (o *ParticipationProperties) HasAttendanceDurationSeconds() bool {
	if o != nil && !IsNil(o.AttendanceDurationSeconds) {
		return true
	}

	return false
}

// SetAttendanceDurationSeconds gets a reference to the given int32 and assigns it to the AttendanceDurationSeconds field.
func (o *ParticipationProperties) SetAttendanceDurationSeconds(v int32) {
	o.AttendanceDurationSeconds = &v
}

func (o ParticipationProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParticipationProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["occurredAt"] = o.OccurredAt
	if !IsNil(o.AttendancePercentage) {
		toSerialize["attendancePercentage"] = o.AttendancePercentage
	}
	toSerialize["attendanceState"] = o.AttendanceState
	if !IsNil(o.AttendanceDurationSeconds) {
		toSerialize["attendanceDurationSeconds"] = o.AttendanceDurationSeconds
	}
	return toSerialize, nil
}

func (o *ParticipationProperties) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"occurredAt",
		"attendanceState",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParticipationProperties := _ParticipationProperties{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParticipationProperties)

	if err != nil {
		return err
	}

	*o = ParticipationProperties(varParticipationProperties)

	return err
}

type NullableParticipationProperties struct {
	value *ParticipationProperties
	isSet bool
}

func (v NullableParticipationProperties) Get() *ParticipationProperties {
	return v.value
}

func (v *NullableParticipationProperties) Set(val *ParticipationProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipationProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipationProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipationProperties(val *ParticipationProperties) *NullableParticipationProperties {
	return &NullableParticipationProperties{value: val, isSet: true}
}

func (v NullableParticipationProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipationProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


