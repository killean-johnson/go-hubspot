/*
Marketing Events

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_events

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MarketingEventAssociation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketingEventAssociation{}

// MarketingEventAssociation struct for MarketingEventAssociation
type MarketingEventAssociation struct {
	ExternalAccountId *string `json:"externalAccountId,omitempty"`
	MarketingEventId string `json:"marketingEventId"`
	ExternalEventId *string `json:"externalEventId,omitempty"`
	Name string `json:"name"`
}

type _MarketingEventAssociation MarketingEventAssociation

// NewMarketingEventAssociation instantiates a new MarketingEventAssociation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketingEventAssociation(marketingEventId string, name string) *MarketingEventAssociation {
	this := MarketingEventAssociation{}
	this.MarketingEventId = marketingEventId
	this.Name = name
	return &this
}

// NewMarketingEventAssociationWithDefaults instantiates a new MarketingEventAssociation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketingEventAssociationWithDefaults() *MarketingEventAssociation {
	this := MarketingEventAssociation{}
	return &this
}

// GetExternalAccountId returns the ExternalAccountId field value if set, zero value otherwise.
func (o *MarketingEventAssociation) GetExternalAccountId() string {
	if o == nil || IsNil(o.ExternalAccountId) {
		var ret string
		return ret
	}
	return *o.ExternalAccountId
}

// GetExternalAccountIdOk returns a tuple with the ExternalAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventAssociation) GetExternalAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalAccountId) {
		return nil, false
	}
	return o.ExternalAccountId, true
}

// HasExternalAccountId returns a boolean if a field has been set.
func (o *MarketingEventAssociation) HasExternalAccountId() bool {
	if o != nil && !IsNil(o.ExternalAccountId) {
		return true
	}

	return false
}

// SetExternalAccountId gets a reference to the given string and assigns it to the ExternalAccountId field.
func (o *MarketingEventAssociation) SetExternalAccountId(v string) {
	o.ExternalAccountId = &v
}

// GetMarketingEventId returns the MarketingEventId field value
func (o *MarketingEventAssociation) GetMarketingEventId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MarketingEventId
}

// GetMarketingEventIdOk returns a tuple with the MarketingEventId field value
// and a boolean to check if the value has been set.
func (o *MarketingEventAssociation) GetMarketingEventIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarketingEventId, true
}

// SetMarketingEventId sets field value
func (o *MarketingEventAssociation) SetMarketingEventId(v string) {
	o.MarketingEventId = v
}

// GetExternalEventId returns the ExternalEventId field value if set, zero value otherwise.
func (o *MarketingEventAssociation) GetExternalEventId() string {
	if o == nil || IsNil(o.ExternalEventId) {
		var ret string
		return ret
	}
	return *o.ExternalEventId
}

// GetExternalEventIdOk returns a tuple with the ExternalEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingEventAssociation) GetExternalEventIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalEventId) {
		return nil, false
	}
	return o.ExternalEventId, true
}

// HasExternalEventId returns a boolean if a field has been set.
func (o *MarketingEventAssociation) HasExternalEventId() bool {
	if o != nil && !IsNil(o.ExternalEventId) {
		return true
	}

	return false
}

// SetExternalEventId gets a reference to the given string and assigns it to the ExternalEventId field.
func (o *MarketingEventAssociation) SetExternalEventId(v string) {
	o.ExternalEventId = &v
}

// GetName returns the Name field value
func (o *MarketingEventAssociation) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MarketingEventAssociation) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MarketingEventAssociation) SetName(v string) {
	o.Name = v
}

func (o MarketingEventAssociation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketingEventAssociation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalAccountId) {
		toSerialize["externalAccountId"] = o.ExternalAccountId
	}
	toSerialize["marketingEventId"] = o.MarketingEventId
	if !IsNil(o.ExternalEventId) {
		toSerialize["externalEventId"] = o.ExternalEventId
	}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *MarketingEventAssociation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"marketingEventId",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMarketingEventAssociation := _MarketingEventAssociation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMarketingEventAssociation)

	if err != nil {
		return err
	}

	*o = MarketingEventAssociation(varMarketingEventAssociation)

	return err
}

type NullableMarketingEventAssociation struct {
	value *MarketingEventAssociation
	isSet bool
}

func (v NullableMarketingEventAssociation) Get() *MarketingEventAssociation {
	return v.value
}

func (v *NullableMarketingEventAssociation) Set(val *MarketingEventAssociation) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketingEventAssociation) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketingEventAssociation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketingEventAssociation(val *MarketingEventAssociation) *NullableMarketingEventAssociation {
	return &NullableMarketingEventAssociation{value: val, isSet: true}
}

func (v NullableMarketingEventAssociation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketingEventAssociation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


