/*
Marketing Events

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketing_events

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the MarketingEventCompleteRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketingEventCompleteRequestParams{}

// MarketingEventCompleteRequestParams struct for MarketingEventCompleteRequestParams
type MarketingEventCompleteRequestParams struct {
	StartDateTime time.Time `json:"startDateTime"`
	EndDateTime time.Time `json:"endDateTime"`
}

type _MarketingEventCompleteRequestParams MarketingEventCompleteRequestParams

// NewMarketingEventCompleteRequestParams instantiates a new MarketingEventCompleteRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketingEventCompleteRequestParams(startDateTime time.Time, endDateTime time.Time) *MarketingEventCompleteRequestParams {
	this := MarketingEventCompleteRequestParams{}
	this.StartDateTime = startDateTime
	this.EndDateTime = endDateTime
	return &this
}

// NewMarketingEventCompleteRequestParamsWithDefaults instantiates a new MarketingEventCompleteRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketingEventCompleteRequestParamsWithDefaults() *MarketingEventCompleteRequestParams {
	this := MarketingEventCompleteRequestParams{}
	return &this
}

// GetStartDateTime returns the StartDateTime field value
func (o *MarketingEventCompleteRequestParams) GetStartDateTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value
// and a boolean to check if the value has been set.
func (o *MarketingEventCompleteRequestParams) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDateTime, true
}

// SetStartDateTime sets field value
func (o *MarketingEventCompleteRequestParams) SetStartDateTime(v time.Time) {
	o.StartDateTime = v
}

// GetEndDateTime returns the EndDateTime field value
func (o *MarketingEventCompleteRequestParams) GetEndDateTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value
// and a boolean to check if the value has been set.
func (o *MarketingEventCompleteRequestParams) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDateTime, true
}

// SetEndDateTime sets field value
func (o *MarketingEventCompleteRequestParams) SetEndDateTime(v time.Time) {
	o.EndDateTime = v
}

func (o MarketingEventCompleteRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketingEventCompleteRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startDateTime"] = o.StartDateTime
	toSerialize["endDateTime"] = o.EndDateTime
	return toSerialize, nil
}

func (o *MarketingEventCompleteRequestParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"startDateTime",
		"endDateTime",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMarketingEventCompleteRequestParams := _MarketingEventCompleteRequestParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMarketingEventCompleteRequestParams)

	if err != nil {
		return err
	}

	*o = MarketingEventCompleteRequestParams(varMarketingEventCompleteRequestParams)

	return err
}

type NullableMarketingEventCompleteRequestParams struct {
	value *MarketingEventCompleteRequestParams
	isSet bool
}

func (v NullableMarketingEventCompleteRequestParams) Get() *MarketingEventCompleteRequestParams {
	return v.value
}

func (v *NullableMarketingEventCompleteRequestParams) Set(val *MarketingEventCompleteRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketingEventCompleteRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketingEventCompleteRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketingEventCompleteRequestParams(val *MarketingEventCompleteRequestParams) *NullableMarketingEventCompleteRequestParams {
	return &NullableMarketingEventCompleteRequestParams{value: val, isSet: true}
}

func (v NullableMarketingEventCompleteRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketingEventCompleteRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


