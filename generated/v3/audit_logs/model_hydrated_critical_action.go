/*
Audit Logs

Get information about a HubSpot account and its API usage.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package audit_logs

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the HydratedCriticalAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HydratedCriticalAction{}

// HydratedCriticalAction Details about the a particular security activity for a HubSpot account.
type HydratedCriticalAction struct {
	// The time the activity took place.
	CreatedAt time.Time `json:"createdAt"`
	// Email address of the user associated with the activity.
	ActingUser *string `json:"actingUser,omitempty"`
	// The approximate region code.
	RegionCode *string `json:"regionCode,omitempty"`
	// A link to the URL where the action was taken in the account.
	InfoUrl *string `json:"infoUrl,omitempty"`
	// The approximate country code.
	CountryCode *string `json:"countryCode,omitempty"`
	// IP address where the activity originated.
	IpAddress *string `json:"ipAddress,omitempty"`
	// 
	Location *string `json:"location,omitempty"`
	// The unique ID of the activity.
	Id string `json:"id"`
	// The type of activity.
	Type string `json:"type"`
	// The user's unique ID.
	UserId int32 `json:"userId"`
	// The ID of the affected object.
	ObjectId *string `json:"objectId,omitempty"`
}

type _HydratedCriticalAction HydratedCriticalAction

// NewHydratedCriticalAction instantiates a new HydratedCriticalAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHydratedCriticalAction(createdAt time.Time, id string, type_ string, userId int32) *HydratedCriticalAction {
	this := HydratedCriticalAction{}
	this.CreatedAt = createdAt
	this.Id = id
	this.Type = type_
	this.UserId = userId
	return &this
}

// NewHydratedCriticalActionWithDefaults instantiates a new HydratedCriticalAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHydratedCriticalActionWithDefaults() *HydratedCriticalAction {
	this := HydratedCriticalAction{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *HydratedCriticalAction) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *HydratedCriticalAction) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *HydratedCriticalAction) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetActingUser returns the ActingUser field value if set, zero value otherwise.
func (o *HydratedCriticalAction) GetActingUser() string {
	if o == nil || IsNil(o.ActingUser) {
		var ret string
		return ret
	}
	return *o.ActingUser
}

// GetActingUserOk returns a tuple with the ActingUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HydratedCriticalAction) GetActingUserOk() (*string, bool) {
	if o == nil || IsNil(o.ActingUser) {
		return nil, false
	}
	return o.ActingUser, true
}

// HasActingUser returns a boolean if a field has been set.
func (o *HydratedCriticalAction) HasActingUser() bool {
	if o != nil && !IsNil(o.ActingUser) {
		return true
	}

	return false
}

// SetActingUser gets a reference to the given string and assigns it to the ActingUser field.
func (o *HydratedCriticalAction) SetActingUser(v string) {
	o.ActingUser = &v
}

// GetRegionCode returns the RegionCode field value if set, zero value otherwise.
func (o *HydratedCriticalAction) GetRegionCode() string {
	if o == nil || IsNil(o.RegionCode) {
		var ret string
		return ret
	}
	return *o.RegionCode
}

// GetRegionCodeOk returns a tuple with the RegionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HydratedCriticalAction) GetRegionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RegionCode) {
		return nil, false
	}
	return o.RegionCode, true
}

// HasRegionCode returns a boolean if a field has been set.
func (o *HydratedCriticalAction) HasRegionCode() bool {
	if o != nil && !IsNil(o.RegionCode) {
		return true
	}

	return false
}

// SetRegionCode gets a reference to the given string and assigns it to the RegionCode field.
func (o *HydratedCriticalAction) SetRegionCode(v string) {
	o.RegionCode = &v
}

// GetInfoUrl returns the InfoUrl field value if set, zero value otherwise.
func (o *HydratedCriticalAction) GetInfoUrl() string {
	if o == nil || IsNil(o.InfoUrl) {
		var ret string
		return ret
	}
	return *o.InfoUrl
}

// GetInfoUrlOk returns a tuple with the InfoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HydratedCriticalAction) GetInfoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.InfoUrl) {
		return nil, false
	}
	return o.InfoUrl, true
}

// HasInfoUrl returns a boolean if a field has been set.
func (o *HydratedCriticalAction) HasInfoUrl() bool {
	if o != nil && !IsNil(o.InfoUrl) {
		return true
	}

	return false
}

// SetInfoUrl gets a reference to the given string and assigns it to the InfoUrl field.
func (o *HydratedCriticalAction) SetInfoUrl(v string) {
	o.InfoUrl = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *HydratedCriticalAction) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HydratedCriticalAction) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *HydratedCriticalAction) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *HydratedCriticalAction) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *HydratedCriticalAction) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HydratedCriticalAction) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *HydratedCriticalAction) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *HydratedCriticalAction) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *HydratedCriticalAction) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HydratedCriticalAction) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *HydratedCriticalAction) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *HydratedCriticalAction) SetLocation(v string) {
	o.Location = &v
}

// GetId returns the Id field value
func (o *HydratedCriticalAction) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *HydratedCriticalAction) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *HydratedCriticalAction) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *HydratedCriticalAction) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *HydratedCriticalAction) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *HydratedCriticalAction) SetType(v string) {
	o.Type = v
}

// GetUserId returns the UserId field value
func (o *HydratedCriticalAction) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *HydratedCriticalAction) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *HydratedCriticalAction) SetUserId(v int32) {
	o.UserId = v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *HydratedCriticalAction) GetObjectId() string {
	if o == nil || IsNil(o.ObjectId) {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HydratedCriticalAction) GetObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *HydratedCriticalAction) HasObjectId() bool {
	if o != nil && !IsNil(o.ObjectId) {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *HydratedCriticalAction) SetObjectId(v string) {
	o.ObjectId = &v
}

func (o HydratedCriticalAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HydratedCriticalAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.ActingUser) {
		toSerialize["actingUser"] = o.ActingUser
	}
	if !IsNil(o.RegionCode) {
		toSerialize["regionCode"] = o.RegionCode
	}
	if !IsNil(o.InfoUrl) {
		toSerialize["infoUrl"] = o.InfoUrl
	}
	if !IsNil(o.CountryCode) {
		toSerialize["countryCode"] = o.CountryCode
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	toSerialize["userId"] = o.UserId
	if !IsNil(o.ObjectId) {
		toSerialize["objectId"] = o.ObjectId
	}
	return toSerialize, nil
}

func (o *HydratedCriticalAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"id",
		"type",
		"userId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHydratedCriticalAction := _HydratedCriticalAction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHydratedCriticalAction)

	if err != nil {
		return err
	}

	*o = HydratedCriticalAction(varHydratedCriticalAction)

	return err
}

type NullableHydratedCriticalAction struct {
	value *HydratedCriticalAction
	isSet bool
}

func (v NullableHydratedCriticalAction) Get() *HydratedCriticalAction {
	return v.value
}

func (v *NullableHydratedCriticalAction) Set(val *HydratedCriticalAction) {
	v.value = val
	v.isSet = true
}

func (v NullableHydratedCriticalAction) IsSet() bool {
	return v.isSet
}

func (v *NullableHydratedCriticalAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHydratedCriticalAction(val *HydratedCriticalAction) *NullableHydratedCriticalAction {
	return &NullableHydratedCriticalAction{value: val, isSet: true}
}

func (v NullableHydratedCriticalAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHydratedCriticalAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


