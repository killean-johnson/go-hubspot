/*
CMS Media Bridge

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package media_bridge

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AttentionSpanEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttentionSpanEvent{}

// AttentionSpanEvent struct for AttentionSpanEvent
type AttentionSpanEvent struct {
	MediaUrl *string `json:"mediaUrl,omitempty"`
	ContactId int64 `json:"contactId"`
	MediaType string `json:"mediaType"`
	SessionId string `json:"sessionId"`
	RawData *string `json:"rawData,omitempty"`
	PageId *int64 `json:"pageId,omitempty"`
	MediaBridgeObjectTypeId string `json:"mediaBridgeObjectTypeId"`
	PageName *string `json:"pageName,omitempty"`
	PageObjectCoordinates *string `json:"pageObjectCoordinates,omitempty"`
	OccurredTimestamp int64 `json:"occurredTimestamp"`
	ProviderId int32 `json:"providerId"`
	PortalId int32 `json:"portalId"`
	TotalPercentPlayed float32 `json:"totalPercentPlayed"`
	TotalSecondsPlayed *int32 `json:"totalSecondsPlayed,omitempty"`
	PageUrl *string `json:"pageUrl,omitempty"`
	MediaBridgeId int64 `json:"mediaBridgeId"`
	PercentRange string `json:"percentRange"`
	MediaBridgeObjectCoordinates string `json:"mediaBridgeObjectCoordinates"`
	MediaName string `json:"mediaName"`
}

type _AttentionSpanEvent AttentionSpanEvent

// NewAttentionSpanEvent instantiates a new AttentionSpanEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttentionSpanEvent(contactId int64, mediaType string, sessionId string, mediaBridgeObjectTypeId string, occurredTimestamp int64, providerId int32, portalId int32, totalPercentPlayed float32, mediaBridgeId int64, percentRange string, mediaBridgeObjectCoordinates string, mediaName string) *AttentionSpanEvent {
	this := AttentionSpanEvent{}
	this.ContactId = contactId
	this.MediaType = mediaType
	this.SessionId = sessionId
	this.MediaBridgeObjectTypeId = mediaBridgeObjectTypeId
	this.OccurredTimestamp = occurredTimestamp
	this.ProviderId = providerId
	this.PortalId = portalId
	this.TotalPercentPlayed = totalPercentPlayed
	this.MediaBridgeId = mediaBridgeId
	this.PercentRange = percentRange
	this.MediaBridgeObjectCoordinates = mediaBridgeObjectCoordinates
	this.MediaName = mediaName
	return &this
}

// NewAttentionSpanEventWithDefaults instantiates a new AttentionSpanEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttentionSpanEventWithDefaults() *AttentionSpanEvent {
	this := AttentionSpanEvent{}
	return &this
}

// GetMediaUrl returns the MediaUrl field value if set, zero value otherwise.
func (o *AttentionSpanEvent) GetMediaUrl() string {
	if o == nil || IsNil(o.MediaUrl) {
		var ret string
		return ret
	}
	return *o.MediaUrl
}

// GetMediaUrlOk returns a tuple with the MediaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetMediaUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MediaUrl) {
		return nil, false
	}
	return o.MediaUrl, true
}

// HasMediaUrl returns a boolean if a field has been set.
func (o *AttentionSpanEvent) HasMediaUrl() bool {
	if o != nil && !IsNil(o.MediaUrl) {
		return true
	}

	return false
}

// SetMediaUrl gets a reference to the given string and assigns it to the MediaUrl field.
func (o *AttentionSpanEvent) SetMediaUrl(v string) {
	o.MediaUrl = &v
}

// GetContactId returns the ContactId field value
func (o *AttentionSpanEvent) GetContactId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ContactId
}

// GetContactIdOk returns a tuple with the ContactId field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetContactIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContactId, true
}

// SetContactId sets field value
func (o *AttentionSpanEvent) SetContactId(v int64) {
	o.ContactId = v
}

// GetMediaType returns the MediaType field value
func (o *AttentionSpanEvent) GetMediaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetMediaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaType, true
}

// SetMediaType sets field value
func (o *AttentionSpanEvent) SetMediaType(v string) {
	o.MediaType = v
}

// GetSessionId returns the SessionId field value
func (o *AttentionSpanEvent) GetSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionId, true
}

// SetSessionId sets field value
func (o *AttentionSpanEvent) SetSessionId(v string) {
	o.SessionId = v
}

// GetRawData returns the RawData field value if set, zero value otherwise.
func (o *AttentionSpanEvent) GetRawData() string {
	if o == nil || IsNil(o.RawData) {
		var ret string
		return ret
	}
	return *o.RawData
}

// GetRawDataOk returns a tuple with the RawData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetRawDataOk() (*string, bool) {
	if o == nil || IsNil(o.RawData) {
		return nil, false
	}
	return o.RawData, true
}

// HasRawData returns a boolean if a field has been set.
func (o *AttentionSpanEvent) HasRawData() bool {
	if o != nil && !IsNil(o.RawData) {
		return true
	}

	return false
}

// SetRawData gets a reference to the given string and assigns it to the RawData field.
func (o *AttentionSpanEvent) SetRawData(v string) {
	o.RawData = &v
}

// GetPageId returns the PageId field value if set, zero value otherwise.
func (o *AttentionSpanEvent) GetPageId() int64 {
	if o == nil || IsNil(o.PageId) {
		var ret int64
		return ret
	}
	return *o.PageId
}

// GetPageIdOk returns a tuple with the PageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetPageIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PageId) {
		return nil, false
	}
	return o.PageId, true
}

// HasPageId returns a boolean if a field has been set.
func (o *AttentionSpanEvent) HasPageId() bool {
	if o != nil && !IsNil(o.PageId) {
		return true
	}

	return false
}

// SetPageId gets a reference to the given int64 and assigns it to the PageId field.
func (o *AttentionSpanEvent) SetPageId(v int64) {
	o.PageId = &v
}

// GetMediaBridgeObjectTypeId returns the MediaBridgeObjectTypeId field value
func (o *AttentionSpanEvent) GetMediaBridgeObjectTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaBridgeObjectTypeId
}

// GetMediaBridgeObjectTypeIdOk returns a tuple with the MediaBridgeObjectTypeId field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetMediaBridgeObjectTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaBridgeObjectTypeId, true
}

// SetMediaBridgeObjectTypeId sets field value
func (o *AttentionSpanEvent) SetMediaBridgeObjectTypeId(v string) {
	o.MediaBridgeObjectTypeId = v
}

// GetPageName returns the PageName field value if set, zero value otherwise.
func (o *AttentionSpanEvent) GetPageName() string {
	if o == nil || IsNil(o.PageName) {
		var ret string
		return ret
	}
	return *o.PageName
}

// GetPageNameOk returns a tuple with the PageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetPageNameOk() (*string, bool) {
	if o == nil || IsNil(o.PageName) {
		return nil, false
	}
	return o.PageName, true
}

// HasPageName returns a boolean if a field has been set.
func (o *AttentionSpanEvent) HasPageName() bool {
	if o != nil && !IsNil(o.PageName) {
		return true
	}

	return false
}

// SetPageName gets a reference to the given string and assigns it to the PageName field.
func (o *AttentionSpanEvent) SetPageName(v string) {
	o.PageName = &v
}

// GetPageObjectCoordinates returns the PageObjectCoordinates field value if set, zero value otherwise.
func (o *AttentionSpanEvent) GetPageObjectCoordinates() string {
	if o == nil || IsNil(o.PageObjectCoordinates) {
		var ret string
		return ret
	}
	return *o.PageObjectCoordinates
}

// GetPageObjectCoordinatesOk returns a tuple with the PageObjectCoordinates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetPageObjectCoordinatesOk() (*string, bool) {
	if o == nil || IsNil(o.PageObjectCoordinates) {
		return nil, false
	}
	return o.PageObjectCoordinates, true
}

// HasPageObjectCoordinates returns a boolean if a field has been set.
func (o *AttentionSpanEvent) HasPageObjectCoordinates() bool {
	if o != nil && !IsNil(o.PageObjectCoordinates) {
		return true
	}

	return false
}

// SetPageObjectCoordinates gets a reference to the given string and assigns it to the PageObjectCoordinates field.
func (o *AttentionSpanEvent) SetPageObjectCoordinates(v string) {
	o.PageObjectCoordinates = &v
}

// GetOccurredTimestamp returns the OccurredTimestamp field value
func (o *AttentionSpanEvent) GetOccurredTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OccurredTimestamp
}

// GetOccurredTimestampOk returns a tuple with the OccurredTimestamp field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetOccurredTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OccurredTimestamp, true
}

// SetOccurredTimestamp sets field value
func (o *AttentionSpanEvent) SetOccurredTimestamp(v int64) {
	o.OccurredTimestamp = v
}

// GetProviderId returns the ProviderId field value
func (o *AttentionSpanEvent) GetProviderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetProviderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderId, true
}

// SetProviderId sets field value
func (o *AttentionSpanEvent) SetProviderId(v int32) {
	o.ProviderId = v
}

// GetPortalId returns the PortalId field value
func (o *AttentionSpanEvent) GetPortalId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PortalId
}

// GetPortalIdOk returns a tuple with the PortalId field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetPortalIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortalId, true
}

// SetPortalId sets field value
func (o *AttentionSpanEvent) SetPortalId(v int32) {
	o.PortalId = v
}

// GetTotalPercentPlayed returns the TotalPercentPlayed field value
func (o *AttentionSpanEvent) GetTotalPercentPlayed() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalPercentPlayed
}

// GetTotalPercentPlayedOk returns a tuple with the TotalPercentPlayed field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetTotalPercentPlayedOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPercentPlayed, true
}

// SetTotalPercentPlayed sets field value
func (o *AttentionSpanEvent) SetTotalPercentPlayed(v float32) {
	o.TotalPercentPlayed = v
}

// GetTotalSecondsPlayed returns the TotalSecondsPlayed field value if set, zero value otherwise.
func (o *AttentionSpanEvent) GetTotalSecondsPlayed() int32 {
	if o == nil || IsNil(o.TotalSecondsPlayed) {
		var ret int32
		return ret
	}
	return *o.TotalSecondsPlayed
}

// GetTotalSecondsPlayedOk returns a tuple with the TotalSecondsPlayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetTotalSecondsPlayedOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSecondsPlayed) {
		return nil, false
	}
	return o.TotalSecondsPlayed, true
}

// HasTotalSecondsPlayed returns a boolean if a field has been set.
func (o *AttentionSpanEvent) HasTotalSecondsPlayed() bool {
	if o != nil && !IsNil(o.TotalSecondsPlayed) {
		return true
	}

	return false
}

// SetTotalSecondsPlayed gets a reference to the given int32 and assigns it to the TotalSecondsPlayed field.
func (o *AttentionSpanEvent) SetTotalSecondsPlayed(v int32) {
	o.TotalSecondsPlayed = &v
}

// GetPageUrl returns the PageUrl field value if set, zero value otherwise.
func (o *AttentionSpanEvent) GetPageUrl() string {
	if o == nil || IsNil(o.PageUrl) {
		var ret string
		return ret
	}
	return *o.PageUrl
}

// GetPageUrlOk returns a tuple with the PageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetPageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PageUrl) {
		return nil, false
	}
	return o.PageUrl, true
}

// HasPageUrl returns a boolean if a field has been set.
func (o *AttentionSpanEvent) HasPageUrl() bool {
	if o != nil && !IsNil(o.PageUrl) {
		return true
	}

	return false
}

// SetPageUrl gets a reference to the given string and assigns it to the PageUrl field.
func (o *AttentionSpanEvent) SetPageUrl(v string) {
	o.PageUrl = &v
}

// GetMediaBridgeId returns the MediaBridgeId field value
func (o *AttentionSpanEvent) GetMediaBridgeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MediaBridgeId
}

// GetMediaBridgeIdOk returns a tuple with the MediaBridgeId field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetMediaBridgeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaBridgeId, true
}

// SetMediaBridgeId sets field value
func (o *AttentionSpanEvent) SetMediaBridgeId(v int64) {
	o.MediaBridgeId = v
}

// GetPercentRange returns the PercentRange field value
func (o *AttentionSpanEvent) GetPercentRange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PercentRange
}

// GetPercentRangeOk returns a tuple with the PercentRange field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetPercentRangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PercentRange, true
}

// SetPercentRange sets field value
func (o *AttentionSpanEvent) SetPercentRange(v string) {
	o.PercentRange = v
}

// GetMediaBridgeObjectCoordinates returns the MediaBridgeObjectCoordinates field value
func (o *AttentionSpanEvent) GetMediaBridgeObjectCoordinates() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaBridgeObjectCoordinates
}

// GetMediaBridgeObjectCoordinatesOk returns a tuple with the MediaBridgeObjectCoordinates field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetMediaBridgeObjectCoordinatesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaBridgeObjectCoordinates, true
}

// SetMediaBridgeObjectCoordinates sets field value
func (o *AttentionSpanEvent) SetMediaBridgeObjectCoordinates(v string) {
	o.MediaBridgeObjectCoordinates = v
}

// GetMediaName returns the MediaName field value
func (o *AttentionSpanEvent) GetMediaName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaName
}

// GetMediaNameOk returns a tuple with the MediaName field value
// and a boolean to check if the value has been set.
func (o *AttentionSpanEvent) GetMediaNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaName, true
}

// SetMediaName sets field value
func (o *AttentionSpanEvent) SetMediaName(v string) {
	o.MediaName = v
}

func (o AttentionSpanEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttentionSpanEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MediaUrl) {
		toSerialize["mediaUrl"] = o.MediaUrl
	}
	toSerialize["contactId"] = o.ContactId
	toSerialize["mediaType"] = o.MediaType
	toSerialize["sessionId"] = o.SessionId
	if !IsNil(o.RawData) {
		toSerialize["rawData"] = o.RawData
	}
	if !IsNil(o.PageId) {
		toSerialize["pageId"] = o.PageId
	}
	toSerialize["mediaBridgeObjectTypeId"] = o.MediaBridgeObjectTypeId
	if !IsNil(o.PageName) {
		toSerialize["pageName"] = o.PageName
	}
	if !IsNil(o.PageObjectCoordinates) {
		toSerialize["pageObjectCoordinates"] = o.PageObjectCoordinates
	}
	toSerialize["occurredTimestamp"] = o.OccurredTimestamp
	toSerialize["providerId"] = o.ProviderId
	toSerialize["portalId"] = o.PortalId
	toSerialize["totalPercentPlayed"] = o.TotalPercentPlayed
	if !IsNil(o.TotalSecondsPlayed) {
		toSerialize["totalSecondsPlayed"] = o.TotalSecondsPlayed
	}
	if !IsNil(o.PageUrl) {
		toSerialize["pageUrl"] = o.PageUrl
	}
	toSerialize["mediaBridgeId"] = o.MediaBridgeId
	toSerialize["percentRange"] = o.PercentRange
	toSerialize["mediaBridgeObjectCoordinates"] = o.MediaBridgeObjectCoordinates
	toSerialize["mediaName"] = o.MediaName
	return toSerialize, nil
}

func (o *AttentionSpanEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contactId",
		"mediaType",
		"sessionId",
		"mediaBridgeObjectTypeId",
		"occurredTimestamp",
		"providerId",
		"portalId",
		"totalPercentPlayed",
		"mediaBridgeId",
		"percentRange",
		"mediaBridgeObjectCoordinates",
		"mediaName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAttentionSpanEvent := _AttentionSpanEvent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAttentionSpanEvent)

	if err != nil {
		return err
	}

	*o = AttentionSpanEvent(varAttentionSpanEvent)

	return err
}

type NullableAttentionSpanEvent struct {
	value *AttentionSpanEvent
	isSet bool
}

func (v NullableAttentionSpanEvent) Get() *AttentionSpanEvent {
	return v.value
}

func (v *NullableAttentionSpanEvent) Set(val *AttentionSpanEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableAttentionSpanEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableAttentionSpanEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttentionSpanEvent(val *AttentionSpanEvent) *NullableAttentionSpanEvent {
	return &NullableAttentionSpanEvent{value: val, isSet: true}
}

func (v NullableAttentionSpanEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttentionSpanEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


