/*
CMS Media Bridge

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package media_bridge

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Property type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Property{}

// Property struct for Property
type Property struct {
	FavoritedOrder int32 `json:"favoritedOrder"`
	ReadOnlyValue bool `json:"readOnlyValue"`
	Hidden bool `json:"hidden"`
	OptionSortStrategy string `json:"optionSortStrategy"`
	DisplayOrder int32 `json:"displayOrder"`
	Description string `json:"description"`
	ShowCurrencySymbol bool `json:"showCurrencySymbol"`
	Type string `json:"type"`
	ReadOnlyDefinition bool `json:"readOnlyDefinition"`
	HubspotDefined bool `json:"hubspotDefined"`
	AllowedObjectTypes []ObjectTypeIdProto `json:"allowedObjectTypes"`
	CreatedAt int64 `json:"createdAt"`
	SearchTextAnalysisMode string `json:"searchTextAnalysisMode"`
	TextDisplayHint string `json:"textDisplayHint"`
	PortalId int64 `json:"portalId"`
	Options []Option `json:"options"`
	IsPartial bool `json:"isPartial"`
	OptionsAreMutable bool `json:"optionsAreMutable"`
	HasUniqueValue bool `json:"hasUniqueValue"`
	Calculated bool `json:"calculated"`
	ExternalOptions bool `json:"externalOptions"`
	Favorited bool `json:"favorited"`
	UpdatedAt int64 `json:"updatedAt"`
	CreatedUserId int64 `json:"createdUserId"`
	FromUserId int64 `json:"fromUserId"`
	MutableDefinitionNotDeletable bool `json:"mutableDefinitionNotDeletable"`
	IsMultiValued bool `json:"isMultiValued"`
	CurrencyPropertyName string `json:"currencyPropertyName"`
	IsCustomizedDefault bool `json:"isCustomizedDefault"`
	Label string `json:"label"`
	FormField bool `json:"formField"`
	DisplayMode string `json:"displayMode"`
	GroupName string `json:"groupName"`
	Deleted bool `json:"deleted"`
	ReferencedObjectType string `json:"referencedObjectType"`
	Name string `json:"name"`
	SearchableInGlobalSearch bool `json:"searchableInGlobalSearch"`
	ExternalOptionsReferenceType string `json:"externalOptionsReferenceType"`
	NumberDisplayHint string `json:"numberDisplayHint"`
	FieldType string `json:"fieldType"`
}

type _Property Property

// NewProperty instantiates a new Property object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProperty(favoritedOrder int32, readOnlyValue bool, hidden bool, optionSortStrategy string, displayOrder int32, description string, showCurrencySymbol bool, type_ string, readOnlyDefinition bool, hubspotDefined bool, allowedObjectTypes []ObjectTypeIdProto, createdAt int64, searchTextAnalysisMode string, textDisplayHint string, portalId int64, options []Option, isPartial bool, optionsAreMutable bool, hasUniqueValue bool, calculated bool, externalOptions bool, favorited bool, updatedAt int64, createdUserId int64, fromUserId int64, mutableDefinitionNotDeletable bool, isMultiValued bool, currencyPropertyName string, isCustomizedDefault bool, label string, formField bool, displayMode string, groupName string, deleted bool, referencedObjectType string, name string, searchableInGlobalSearch bool, externalOptionsReferenceType string, numberDisplayHint string, fieldType string) *Property {
	this := Property{}
	this.FavoritedOrder = favoritedOrder
	this.ReadOnlyValue = readOnlyValue
	this.Hidden = hidden
	this.OptionSortStrategy = optionSortStrategy
	this.DisplayOrder = displayOrder
	this.Description = description
	this.ShowCurrencySymbol = showCurrencySymbol
	this.Type = type_
	this.ReadOnlyDefinition = readOnlyDefinition
	this.HubspotDefined = hubspotDefined
	this.AllowedObjectTypes = allowedObjectTypes
	this.CreatedAt = createdAt
	this.SearchTextAnalysisMode = searchTextAnalysisMode
	this.TextDisplayHint = textDisplayHint
	this.PortalId = portalId
	this.Options = options
	this.IsPartial = isPartial
	this.OptionsAreMutable = optionsAreMutable
	this.HasUniqueValue = hasUniqueValue
	this.Calculated = calculated
	this.ExternalOptions = externalOptions
	this.Favorited = favorited
	this.UpdatedAt = updatedAt
	this.CreatedUserId = createdUserId
	this.FromUserId = fromUserId
	this.MutableDefinitionNotDeletable = mutableDefinitionNotDeletable
	this.IsMultiValued = isMultiValued
	this.CurrencyPropertyName = currencyPropertyName
	this.IsCustomizedDefault = isCustomizedDefault
	this.Label = label
	this.FormField = formField
	this.DisplayMode = displayMode
	this.GroupName = groupName
	this.Deleted = deleted
	this.ReferencedObjectType = referencedObjectType
	this.Name = name
	this.SearchableInGlobalSearch = searchableInGlobalSearch
	this.ExternalOptionsReferenceType = externalOptionsReferenceType
	this.NumberDisplayHint = numberDisplayHint
	this.FieldType = fieldType
	return &this
}

// NewPropertyWithDefaults instantiates a new Property object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyWithDefaults() *Property {
	this := Property{}
	return &this
}

// GetFavoritedOrder returns the FavoritedOrder field value
func (o *Property) GetFavoritedOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FavoritedOrder
}

// GetFavoritedOrderOk returns a tuple with the FavoritedOrder field value
// and a boolean to check if the value has been set.
func (o *Property) GetFavoritedOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FavoritedOrder, true
}

// SetFavoritedOrder sets field value
func (o *Property) SetFavoritedOrder(v int32) {
	o.FavoritedOrder = v
}

// GetReadOnlyValue returns the ReadOnlyValue field value
func (o *Property) GetReadOnlyValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReadOnlyValue
}

// GetReadOnlyValueOk returns a tuple with the ReadOnlyValue field value
// and a boolean to check if the value has been set.
func (o *Property) GetReadOnlyValueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadOnlyValue, true
}

// SetReadOnlyValue sets field value
func (o *Property) SetReadOnlyValue(v bool) {
	o.ReadOnlyValue = v
}

// GetHidden returns the Hidden field value
func (o *Property) GetHidden() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value
// and a boolean to check if the value has been set.
func (o *Property) GetHiddenOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hidden, true
}

// SetHidden sets field value
func (o *Property) SetHidden(v bool) {
	o.Hidden = v
}

// GetOptionSortStrategy returns the OptionSortStrategy field value
func (o *Property) GetOptionSortStrategy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OptionSortStrategy
}

// GetOptionSortStrategyOk returns a tuple with the OptionSortStrategy field value
// and a boolean to check if the value has been set.
func (o *Property) GetOptionSortStrategyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OptionSortStrategy, true
}

// SetOptionSortStrategy sets field value
func (o *Property) SetOptionSortStrategy(v string) {
	o.OptionSortStrategy = v
}

// GetDisplayOrder returns the DisplayOrder field value
func (o *Property) GetDisplayOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value
// and a boolean to check if the value has been set.
func (o *Property) GetDisplayOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayOrder, true
}

// SetDisplayOrder sets field value
func (o *Property) SetDisplayOrder(v int32) {
	o.DisplayOrder = v
}

// GetDescription returns the Description field value
func (o *Property) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Property) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Property) SetDescription(v string) {
	o.Description = v
}

// GetShowCurrencySymbol returns the ShowCurrencySymbol field value
func (o *Property) GetShowCurrencySymbol() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShowCurrencySymbol
}

// GetShowCurrencySymbolOk returns a tuple with the ShowCurrencySymbol field value
// and a boolean to check if the value has been set.
func (o *Property) GetShowCurrencySymbolOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShowCurrencySymbol, true
}

// SetShowCurrencySymbol sets field value
func (o *Property) SetShowCurrencySymbol(v bool) {
	o.ShowCurrencySymbol = v
}

// GetType returns the Type field value
func (o *Property) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Property) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Property) SetType(v string) {
	o.Type = v
}

// GetReadOnlyDefinition returns the ReadOnlyDefinition field value
func (o *Property) GetReadOnlyDefinition() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReadOnlyDefinition
}

// GetReadOnlyDefinitionOk returns a tuple with the ReadOnlyDefinition field value
// and a boolean to check if the value has been set.
func (o *Property) GetReadOnlyDefinitionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadOnlyDefinition, true
}

// SetReadOnlyDefinition sets field value
func (o *Property) SetReadOnlyDefinition(v bool) {
	o.ReadOnlyDefinition = v
}

// GetHubspotDefined returns the HubspotDefined field value
func (o *Property) GetHubspotDefined() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HubspotDefined
}

// GetHubspotDefinedOk returns a tuple with the HubspotDefined field value
// and a boolean to check if the value has been set.
func (o *Property) GetHubspotDefinedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HubspotDefined, true
}

// SetHubspotDefined sets field value
func (o *Property) SetHubspotDefined(v bool) {
	o.HubspotDefined = v
}

// GetAllowedObjectTypes returns the AllowedObjectTypes field value
func (o *Property) GetAllowedObjectTypes() []ObjectTypeIdProto {
	if o == nil {
		var ret []ObjectTypeIdProto
		return ret
	}

	return o.AllowedObjectTypes
}

// GetAllowedObjectTypesOk returns a tuple with the AllowedObjectTypes field value
// and a boolean to check if the value has been set.
func (o *Property) GetAllowedObjectTypesOk() ([]ObjectTypeIdProto, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowedObjectTypes, true
}

// SetAllowedObjectTypes sets field value
func (o *Property) SetAllowedObjectTypes(v []ObjectTypeIdProto) {
	o.AllowedObjectTypes = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Property) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Property) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Property) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetSearchTextAnalysisMode returns the SearchTextAnalysisMode field value
func (o *Property) GetSearchTextAnalysisMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SearchTextAnalysisMode
}

// GetSearchTextAnalysisModeOk returns a tuple with the SearchTextAnalysisMode field value
// and a boolean to check if the value has been set.
func (o *Property) GetSearchTextAnalysisModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SearchTextAnalysisMode, true
}

// SetSearchTextAnalysisMode sets field value
func (o *Property) SetSearchTextAnalysisMode(v string) {
	o.SearchTextAnalysisMode = v
}

// GetTextDisplayHint returns the TextDisplayHint field value
func (o *Property) GetTextDisplayHint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TextDisplayHint
}

// GetTextDisplayHintOk returns a tuple with the TextDisplayHint field value
// and a boolean to check if the value has been set.
func (o *Property) GetTextDisplayHintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TextDisplayHint, true
}

// SetTextDisplayHint sets field value
func (o *Property) SetTextDisplayHint(v string) {
	o.TextDisplayHint = v
}

// GetPortalId returns the PortalId field value
func (o *Property) GetPortalId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PortalId
}

// GetPortalIdOk returns a tuple with the PortalId field value
// and a boolean to check if the value has been set.
func (o *Property) GetPortalIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortalId, true
}

// SetPortalId sets field value
func (o *Property) SetPortalId(v int64) {
	o.PortalId = v
}

// GetOptions returns the Options field value
func (o *Property) GetOptions() []Option {
	if o == nil {
		var ret []Option
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *Property) GetOptionsOk() ([]Option, bool) {
	if o == nil {
		return nil, false
	}
	return o.Options, true
}

// SetOptions sets field value
func (o *Property) SetOptions(v []Option) {
	o.Options = v
}

// GetIsPartial returns the IsPartial field value
func (o *Property) GetIsPartial() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPartial
}

// GetIsPartialOk returns a tuple with the IsPartial field value
// and a boolean to check if the value has been set.
func (o *Property) GetIsPartialOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPartial, true
}

// SetIsPartial sets field value
func (o *Property) SetIsPartial(v bool) {
	o.IsPartial = v
}

// GetOptionsAreMutable returns the OptionsAreMutable field value
func (o *Property) GetOptionsAreMutable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OptionsAreMutable
}

// GetOptionsAreMutableOk returns a tuple with the OptionsAreMutable field value
// and a boolean to check if the value has been set.
func (o *Property) GetOptionsAreMutableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OptionsAreMutable, true
}

// SetOptionsAreMutable sets field value
func (o *Property) SetOptionsAreMutable(v bool) {
	o.OptionsAreMutable = v
}

// GetHasUniqueValue returns the HasUniqueValue field value
func (o *Property) GetHasUniqueValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasUniqueValue
}

// GetHasUniqueValueOk returns a tuple with the HasUniqueValue field value
// and a boolean to check if the value has been set.
func (o *Property) GetHasUniqueValueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasUniqueValue, true
}

// SetHasUniqueValue sets field value
func (o *Property) SetHasUniqueValue(v bool) {
	o.HasUniqueValue = v
}

// GetCalculated returns the Calculated field value
func (o *Property) GetCalculated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Calculated
}

// GetCalculatedOk returns a tuple with the Calculated field value
// and a boolean to check if the value has been set.
func (o *Property) GetCalculatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Calculated, true
}

// SetCalculated sets field value
func (o *Property) SetCalculated(v bool) {
	o.Calculated = v
}

// GetExternalOptions returns the ExternalOptions field value
func (o *Property) GetExternalOptions() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ExternalOptions
}

// GetExternalOptionsOk returns a tuple with the ExternalOptions field value
// and a boolean to check if the value has been set.
func (o *Property) GetExternalOptionsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalOptions, true
}

// SetExternalOptions sets field value
func (o *Property) SetExternalOptions(v bool) {
	o.ExternalOptions = v
}

// GetFavorited returns the Favorited field value
func (o *Property) GetFavorited() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Favorited
}

// GetFavoritedOk returns a tuple with the Favorited field value
// and a boolean to check if the value has been set.
func (o *Property) GetFavoritedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Favorited, true
}

// SetFavorited sets field value
func (o *Property) SetFavorited(v bool) {
	o.Favorited = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Property) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Property) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Property) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

// GetCreatedUserId returns the CreatedUserId field value
func (o *Property) GetCreatedUserId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value
// and a boolean to check if the value has been set.
func (o *Property) GetCreatedUserIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedUserId, true
}

// SetCreatedUserId sets field value
func (o *Property) SetCreatedUserId(v int64) {
	o.CreatedUserId = v
}

// GetFromUserId returns the FromUserId field value
func (o *Property) GetFromUserId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FromUserId
}

// GetFromUserIdOk returns a tuple with the FromUserId field value
// and a boolean to check if the value has been set.
func (o *Property) GetFromUserIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromUserId, true
}

// SetFromUserId sets field value
func (o *Property) SetFromUserId(v int64) {
	o.FromUserId = v
}

// GetMutableDefinitionNotDeletable returns the MutableDefinitionNotDeletable field value
func (o *Property) GetMutableDefinitionNotDeletable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MutableDefinitionNotDeletable
}

// GetMutableDefinitionNotDeletableOk returns a tuple with the MutableDefinitionNotDeletable field value
// and a boolean to check if the value has been set.
func (o *Property) GetMutableDefinitionNotDeletableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MutableDefinitionNotDeletable, true
}

// SetMutableDefinitionNotDeletable sets field value
func (o *Property) SetMutableDefinitionNotDeletable(v bool) {
	o.MutableDefinitionNotDeletable = v
}

// GetIsMultiValued returns the IsMultiValued field value
func (o *Property) GetIsMultiValued() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMultiValued
}

// GetIsMultiValuedOk returns a tuple with the IsMultiValued field value
// and a boolean to check if the value has been set.
func (o *Property) GetIsMultiValuedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsMultiValued, true
}

// SetIsMultiValued sets field value
func (o *Property) SetIsMultiValued(v bool) {
	o.IsMultiValued = v
}

// GetCurrencyPropertyName returns the CurrencyPropertyName field value
func (o *Property) GetCurrencyPropertyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyPropertyName
}

// GetCurrencyPropertyNameOk returns a tuple with the CurrencyPropertyName field value
// and a boolean to check if the value has been set.
func (o *Property) GetCurrencyPropertyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyPropertyName, true
}

// SetCurrencyPropertyName sets field value
func (o *Property) SetCurrencyPropertyName(v string) {
	o.CurrencyPropertyName = v
}

// GetIsCustomizedDefault returns the IsCustomizedDefault field value
func (o *Property) GetIsCustomizedDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsCustomizedDefault
}

// GetIsCustomizedDefaultOk returns a tuple with the IsCustomizedDefault field value
// and a boolean to check if the value has been set.
func (o *Property) GetIsCustomizedDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsCustomizedDefault, true
}

// SetIsCustomizedDefault sets field value
func (o *Property) SetIsCustomizedDefault(v bool) {
	o.IsCustomizedDefault = v
}

// GetLabel returns the Label field value
func (o *Property) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *Property) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *Property) SetLabel(v string) {
	o.Label = v
}

// GetFormField returns the FormField field value
func (o *Property) GetFormField() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FormField
}

// GetFormFieldOk returns a tuple with the FormField field value
// and a boolean to check if the value has been set.
func (o *Property) GetFormFieldOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FormField, true
}

// SetFormField sets field value
func (o *Property) SetFormField(v bool) {
	o.FormField = v
}

// GetDisplayMode returns the DisplayMode field value
func (o *Property) GetDisplayMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayMode
}

// GetDisplayModeOk returns a tuple with the DisplayMode field value
// and a boolean to check if the value has been set.
func (o *Property) GetDisplayModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayMode, true
}

// SetDisplayMode sets field value
func (o *Property) SetDisplayMode(v string) {
	o.DisplayMode = v
}

// GetGroupName returns the GroupName field value
func (o *Property) GetGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value
// and a boolean to check if the value has been set.
func (o *Property) GetGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupName, true
}

// SetGroupName sets field value
func (o *Property) SetGroupName(v string) {
	o.GroupName = v
}

// GetDeleted returns the Deleted field value
func (o *Property) GetDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *Property) GetDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// SetDeleted sets field value
func (o *Property) SetDeleted(v bool) {
	o.Deleted = v
}

// GetReferencedObjectType returns the ReferencedObjectType field value
func (o *Property) GetReferencedObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferencedObjectType
}

// GetReferencedObjectTypeOk returns a tuple with the ReferencedObjectType field value
// and a boolean to check if the value has been set.
func (o *Property) GetReferencedObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferencedObjectType, true
}

// SetReferencedObjectType sets field value
func (o *Property) SetReferencedObjectType(v string) {
	o.ReferencedObjectType = v
}

// GetName returns the Name field value
func (o *Property) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Property) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Property) SetName(v string) {
	o.Name = v
}

// GetSearchableInGlobalSearch returns the SearchableInGlobalSearch field value
func (o *Property) GetSearchableInGlobalSearch() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SearchableInGlobalSearch
}

// GetSearchableInGlobalSearchOk returns a tuple with the SearchableInGlobalSearch field value
// and a boolean to check if the value has been set.
func (o *Property) GetSearchableInGlobalSearchOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SearchableInGlobalSearch, true
}

// SetSearchableInGlobalSearch sets field value
func (o *Property) SetSearchableInGlobalSearch(v bool) {
	o.SearchableInGlobalSearch = v
}

// GetExternalOptionsReferenceType returns the ExternalOptionsReferenceType field value
func (o *Property) GetExternalOptionsReferenceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalOptionsReferenceType
}

// GetExternalOptionsReferenceTypeOk returns a tuple with the ExternalOptionsReferenceType field value
// and a boolean to check if the value has been set.
func (o *Property) GetExternalOptionsReferenceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalOptionsReferenceType, true
}

// SetExternalOptionsReferenceType sets field value
func (o *Property) SetExternalOptionsReferenceType(v string) {
	o.ExternalOptionsReferenceType = v
}

// GetNumberDisplayHint returns the NumberDisplayHint field value
func (o *Property) GetNumberDisplayHint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NumberDisplayHint
}

// GetNumberDisplayHintOk returns a tuple with the NumberDisplayHint field value
// and a boolean to check if the value has been set.
func (o *Property) GetNumberDisplayHintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberDisplayHint, true
}

// SetNumberDisplayHint sets field value
func (o *Property) SetNumberDisplayHint(v string) {
	o.NumberDisplayHint = v
}

// GetFieldType returns the FieldType field value
func (o *Property) GetFieldType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldType
}

// GetFieldTypeOk returns a tuple with the FieldType field value
// and a boolean to check if the value has been set.
func (o *Property) GetFieldTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldType, true
}

// SetFieldType sets field value
func (o *Property) SetFieldType(v string) {
	o.FieldType = v
}

func (o Property) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Property) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["favoritedOrder"] = o.FavoritedOrder
	toSerialize["readOnlyValue"] = o.ReadOnlyValue
	toSerialize["hidden"] = o.Hidden
	toSerialize["optionSortStrategy"] = o.OptionSortStrategy
	toSerialize["displayOrder"] = o.DisplayOrder
	toSerialize["description"] = o.Description
	toSerialize["showCurrencySymbol"] = o.ShowCurrencySymbol
	toSerialize["type"] = o.Type
	toSerialize["readOnlyDefinition"] = o.ReadOnlyDefinition
	toSerialize["hubspotDefined"] = o.HubspotDefined
	toSerialize["allowedObjectTypes"] = o.AllowedObjectTypes
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["searchTextAnalysisMode"] = o.SearchTextAnalysisMode
	toSerialize["textDisplayHint"] = o.TextDisplayHint
	toSerialize["portalId"] = o.PortalId
	toSerialize["options"] = o.Options
	toSerialize["isPartial"] = o.IsPartial
	toSerialize["optionsAreMutable"] = o.OptionsAreMutable
	toSerialize["hasUniqueValue"] = o.HasUniqueValue
	toSerialize["calculated"] = o.Calculated
	toSerialize["externalOptions"] = o.ExternalOptions
	toSerialize["favorited"] = o.Favorited
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["createdUserId"] = o.CreatedUserId
	toSerialize["fromUserId"] = o.FromUserId
	toSerialize["mutableDefinitionNotDeletable"] = o.MutableDefinitionNotDeletable
	toSerialize["isMultiValued"] = o.IsMultiValued
	toSerialize["currencyPropertyName"] = o.CurrencyPropertyName
	toSerialize["isCustomizedDefault"] = o.IsCustomizedDefault
	toSerialize["label"] = o.Label
	toSerialize["formField"] = o.FormField
	toSerialize["displayMode"] = o.DisplayMode
	toSerialize["groupName"] = o.GroupName
	toSerialize["deleted"] = o.Deleted
	toSerialize["referencedObjectType"] = o.ReferencedObjectType
	toSerialize["name"] = o.Name
	toSerialize["searchableInGlobalSearch"] = o.SearchableInGlobalSearch
	toSerialize["externalOptionsReferenceType"] = o.ExternalOptionsReferenceType
	toSerialize["numberDisplayHint"] = o.NumberDisplayHint
	toSerialize["fieldType"] = o.FieldType
	return toSerialize, nil
}

func (o *Property) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"favoritedOrder",
		"readOnlyValue",
		"hidden",
		"optionSortStrategy",
		"displayOrder",
		"description",
		"showCurrencySymbol",
		"type",
		"readOnlyDefinition",
		"hubspotDefined",
		"allowedObjectTypes",
		"createdAt",
		"searchTextAnalysisMode",
		"textDisplayHint",
		"portalId",
		"options",
		"isPartial",
		"optionsAreMutable",
		"hasUniqueValue",
		"calculated",
		"externalOptions",
		"favorited",
		"updatedAt",
		"createdUserId",
		"fromUserId",
		"mutableDefinitionNotDeletable",
		"isMultiValued",
		"currencyPropertyName",
		"isCustomizedDefault",
		"label",
		"formField",
		"displayMode",
		"groupName",
		"deleted",
		"referencedObjectType",
		"name",
		"searchableInGlobalSearch",
		"externalOptionsReferenceType",
		"numberDisplayHint",
		"fieldType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProperty := _Property{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProperty)

	if err != nil {
		return err
	}

	*o = Property(varProperty)

	return err
}

type NullableProperty struct {
	value *Property
	isSet bool
}

func (v NullableProperty) Get() *Property {
	return v.value
}

func (v *NullableProperty) Set(val *Property) {
	v.value = val
	v.isSet = true
}

func (v NullableProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProperty(val *Property) *NullableProperty {
	return &NullableProperty{value: val, isSet: true}
}

func (v NullableProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


