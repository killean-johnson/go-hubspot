/*
CMS Media Bridge

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package media_bridge

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the IntegratorObjectCreationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegratorObjectCreationResponse{}

// IntegratorObjectCreationResponse struct for IntegratorObjectCreationResponse
type IntegratorObjectCreationResponse struct {
	Properties []PropertyDefinition `json:"properties"`
	ObjectType InboundDbObjectType `json:"objectType"`
	PropertyGroups []Group `json:"propertyGroups"`
}

type _IntegratorObjectCreationResponse IntegratorObjectCreationResponse

// NewIntegratorObjectCreationResponse instantiates a new IntegratorObjectCreationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegratorObjectCreationResponse(properties []PropertyDefinition, objectType InboundDbObjectType, propertyGroups []Group) *IntegratorObjectCreationResponse {
	this := IntegratorObjectCreationResponse{}
	this.Properties = properties
	this.ObjectType = objectType
	this.PropertyGroups = propertyGroups
	return &this
}

// NewIntegratorObjectCreationResponseWithDefaults instantiates a new IntegratorObjectCreationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegratorObjectCreationResponseWithDefaults() *IntegratorObjectCreationResponse {
	this := IntegratorObjectCreationResponse{}
	return &this
}

// GetProperties returns the Properties field value
func (o *IntegratorObjectCreationResponse) GetProperties() []PropertyDefinition {
	if o == nil {
		var ret []PropertyDefinition
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *IntegratorObjectCreationResponse) GetPropertiesOk() ([]PropertyDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Properties, true
}

// SetProperties sets field value
func (o *IntegratorObjectCreationResponse) SetProperties(v []PropertyDefinition) {
	o.Properties = v
}

// GetObjectType returns the ObjectType field value
func (o *IntegratorObjectCreationResponse) GetObjectType() InboundDbObjectType {
	if o == nil {
		var ret InboundDbObjectType
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *IntegratorObjectCreationResponse) GetObjectTypeOk() (*InboundDbObjectType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *IntegratorObjectCreationResponse) SetObjectType(v InboundDbObjectType) {
	o.ObjectType = v
}

// GetPropertyGroups returns the PropertyGroups field value
func (o *IntegratorObjectCreationResponse) GetPropertyGroups() []Group {
	if o == nil {
		var ret []Group
		return ret
	}

	return o.PropertyGroups
}

// GetPropertyGroupsOk returns a tuple with the PropertyGroups field value
// and a boolean to check if the value has been set.
func (o *IntegratorObjectCreationResponse) GetPropertyGroupsOk() ([]Group, bool) {
	if o == nil {
		return nil, false
	}
	return o.PropertyGroups, true
}

// SetPropertyGroups sets field value
func (o *IntegratorObjectCreationResponse) SetPropertyGroups(v []Group) {
	o.PropertyGroups = v
}

func (o IntegratorObjectCreationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegratorObjectCreationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["properties"] = o.Properties
	toSerialize["objectType"] = o.ObjectType
	toSerialize["propertyGroups"] = o.PropertyGroups
	return toSerialize, nil
}

func (o *IntegratorObjectCreationResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"properties",
		"objectType",
		"propertyGroups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIntegratorObjectCreationResponse := _IntegratorObjectCreationResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIntegratorObjectCreationResponse)

	if err != nil {
		return err
	}

	*o = IntegratorObjectCreationResponse(varIntegratorObjectCreationResponse)

	return err
}

type NullableIntegratorObjectCreationResponse struct {
	value *IntegratorObjectCreationResponse
	isSet bool
}

func (v NullableIntegratorObjectCreationResponse) Get() *IntegratorObjectCreationResponse {
	return v.value
}

func (v *NullableIntegratorObjectCreationResponse) Set(val *IntegratorObjectCreationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegratorObjectCreationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegratorObjectCreationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegratorObjectCreationResponse(val *IntegratorObjectCreationResponse) *NullableIntegratorObjectCreationResponse {
	return &NullableIntegratorObjectCreationResponse{value: val, isSet: true}
}

func (v NullableIntegratorObjectCreationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegratorObjectCreationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


