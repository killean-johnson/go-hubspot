/*
CMS Media Bridge

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package media_bridge

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the IntegratorOEmbedDomainRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegratorOEmbedDomainRequest{}

// IntegratorOEmbedDomainRequest struct for IntegratorOEmbedDomainRequest
type IntegratorOEmbedDomainRequest struct {
	Endpoints Endpoints `json:"endpoints"`
	PortalId *int32 `json:"portalId,omitempty"`
}

type _IntegratorOEmbedDomainRequest IntegratorOEmbedDomainRequest

// NewIntegratorOEmbedDomainRequest instantiates a new IntegratorOEmbedDomainRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegratorOEmbedDomainRequest(endpoints Endpoints) *IntegratorOEmbedDomainRequest {
	this := IntegratorOEmbedDomainRequest{}
	this.Endpoints = endpoints
	return &this
}

// NewIntegratorOEmbedDomainRequestWithDefaults instantiates a new IntegratorOEmbedDomainRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegratorOEmbedDomainRequestWithDefaults() *IntegratorOEmbedDomainRequest {
	this := IntegratorOEmbedDomainRequest{}
	return &this
}

// GetEndpoints returns the Endpoints field value
func (o *IntegratorOEmbedDomainRequest) GetEndpoints() Endpoints {
	if o == nil {
		var ret Endpoints
		return ret
	}

	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value
// and a boolean to check if the value has been set.
func (o *IntegratorOEmbedDomainRequest) GetEndpointsOk() (*Endpoints, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoints, true
}

// SetEndpoints sets field value
func (o *IntegratorOEmbedDomainRequest) SetEndpoints(v Endpoints) {
	o.Endpoints = v
}

// GetPortalId returns the PortalId field value if set, zero value otherwise.
func (o *IntegratorOEmbedDomainRequest) GetPortalId() int32 {
	if o == nil || IsNil(o.PortalId) {
		var ret int32
		return ret
	}
	return *o.PortalId
}

// GetPortalIdOk returns a tuple with the PortalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegratorOEmbedDomainRequest) GetPortalIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PortalId) {
		return nil, false
	}
	return o.PortalId, true
}

// HasPortalId returns a boolean if a field has been set.
func (o *IntegratorOEmbedDomainRequest) HasPortalId() bool {
	if o != nil && !IsNil(o.PortalId) {
		return true
	}

	return false
}

// SetPortalId gets a reference to the given int32 and assigns it to the PortalId field.
func (o *IntegratorOEmbedDomainRequest) SetPortalId(v int32) {
	o.PortalId = &v
}

func (o IntegratorOEmbedDomainRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegratorOEmbedDomainRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["endpoints"] = o.Endpoints
	if !IsNil(o.PortalId) {
		toSerialize["portalId"] = o.PortalId
	}
	return toSerialize, nil
}

func (o *IntegratorOEmbedDomainRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endpoints",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIntegratorOEmbedDomainRequest := _IntegratorOEmbedDomainRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIntegratorOEmbedDomainRequest)

	if err != nil {
		return err
	}

	*o = IntegratorOEmbedDomainRequest(varIntegratorOEmbedDomainRequest)

	return err
}

type NullableIntegratorOEmbedDomainRequest struct {
	value *IntegratorOEmbedDomainRequest
	isSet bool
}

func (v NullableIntegratorOEmbedDomainRequest) Get() *IntegratorOEmbedDomainRequest {
	return v.value
}

func (v *NullableIntegratorOEmbedDomainRequest) Set(val *IntegratorOEmbedDomainRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegratorOEmbedDomainRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegratorOEmbedDomainRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegratorOEmbedDomainRequest(val *IntegratorOEmbedDomainRequest) *NullableIntegratorOEmbedDomainRequest {
	return &NullableIntegratorOEmbedDomainRequest{value: val, isSet: true}
}

func (v NullableIntegratorOEmbedDomainRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegratorOEmbedDomainRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


