/*
CMS Media Bridge

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package media_bridge

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InboundDbObjectType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InboundDbObjectType{}

// InboundDbObjectType struct for InboundDbObjectType
type InboundDbObjectType struct {
	HasOwners bool `json:"hasOwners"`
	PermissioningType string `json:"permissioningType"`
	PrimaryDisplayLabelPropertyName *string `json:"primaryDisplayLabelPropertyName,omitempty"`
	ObjectTypeId string `json:"objectTypeId"`
	LastModifiedPropertyName string `json:"lastModifiedPropertyName"`
	IntegrationAppId *int32 `json:"integrationAppId,omitempty"`
	Description *string `json:"description,omitempty"`
	PipelinePropertyName string `json:"pipelinePropertyName"`
	PipelineTimeToClosePropertyName *string `json:"pipelineTimeToClosePropertyName,omitempty"`
	SingularForm *string `json:"singularForm,omitempty"`
	HasPipelines bool `json:"hasPipelines"`
	HasExternalObjectIds bool `json:"hasExternalObjectIds"`
	ScopeMappings []ScopeMapping `json:"scopeMappings"`
	HasDefaultProperties bool `json:"hasDefaultProperties"`
	IndexedForFiltersAndReports bool `json:"indexedForFiltersAndReports"`
	CreateDatePropertyName string `json:"createDatePropertyName"`
	Id int32 `json:"id"`
	OwnerPortalId *int32 `json:"ownerPortalId,omitempty"`
	Restorable bool `json:"restorable"`
	PluralForm *string `json:"pluralForm,omitempty"`
	MetaTypeId int32 `json:"metaTypeId"`
	DefaultSearchPropertyNames []string `json:"defaultSearchPropertyNames"`
	JanusGroup *string `json:"janusGroup,omitempty"`
	PipelineCloseDatePropertyName *string `json:"pipelineCloseDatePropertyName,omitempty"`
	FullyQualifiedName string `json:"fullyQualifiedName"`
	Deleted bool `json:"deleted"`
	RequiredProperties []string `json:"requiredProperties"`
	WriteScopeName *string `json:"writeScopeName,omitempty"`
	AccessScopeName *string `json:"accessScopeName,omitempty"`
	HasCustomProperties bool `json:"hasCustomProperties"`
	Name string `json:"name"`
	MetaType string `json:"metaType"`
	PipelineStagePropertyName string `json:"pipelineStagePropertyName"`
	ReadScopeName *string `json:"readScopeName,omitempty"`
	SecondaryDisplayLabelPropertyNames []string `json:"secondaryDisplayLabelPropertyNames"`
}

type _InboundDbObjectType InboundDbObjectType

// NewInboundDbObjectType instantiates a new InboundDbObjectType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInboundDbObjectType(hasOwners bool, permissioningType string, objectTypeId string, lastModifiedPropertyName string, pipelinePropertyName string, hasPipelines bool, hasExternalObjectIds bool, scopeMappings []ScopeMapping, hasDefaultProperties bool, indexedForFiltersAndReports bool, createDatePropertyName string, id int32, restorable bool, metaTypeId int32, defaultSearchPropertyNames []string, fullyQualifiedName string, deleted bool, requiredProperties []string, hasCustomProperties bool, name string, metaType string, pipelineStagePropertyName string, secondaryDisplayLabelPropertyNames []string) *InboundDbObjectType {
	this := InboundDbObjectType{}
	this.HasOwners = hasOwners
	this.PermissioningType = permissioningType
	this.ObjectTypeId = objectTypeId
	this.LastModifiedPropertyName = lastModifiedPropertyName
	this.PipelinePropertyName = pipelinePropertyName
	this.HasPipelines = hasPipelines
	this.HasExternalObjectIds = hasExternalObjectIds
	this.ScopeMappings = scopeMappings
	this.HasDefaultProperties = hasDefaultProperties
	this.IndexedForFiltersAndReports = indexedForFiltersAndReports
	this.CreateDatePropertyName = createDatePropertyName
	this.Id = id
	this.Restorable = restorable
	this.MetaTypeId = metaTypeId
	this.DefaultSearchPropertyNames = defaultSearchPropertyNames
	this.FullyQualifiedName = fullyQualifiedName
	this.Deleted = deleted
	this.RequiredProperties = requiredProperties
	this.HasCustomProperties = hasCustomProperties
	this.Name = name
	this.MetaType = metaType
	this.PipelineStagePropertyName = pipelineStagePropertyName
	this.SecondaryDisplayLabelPropertyNames = secondaryDisplayLabelPropertyNames
	return &this
}

// NewInboundDbObjectTypeWithDefaults instantiates a new InboundDbObjectType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInboundDbObjectTypeWithDefaults() *InboundDbObjectType {
	this := InboundDbObjectType{}
	return &this
}

// GetHasOwners returns the HasOwners field value
func (o *InboundDbObjectType) GetHasOwners() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasOwners
}

// GetHasOwnersOk returns a tuple with the HasOwners field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetHasOwnersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasOwners, true
}

// SetHasOwners sets field value
func (o *InboundDbObjectType) SetHasOwners(v bool) {
	o.HasOwners = v
}

// GetPermissioningType returns the PermissioningType field value
func (o *InboundDbObjectType) GetPermissioningType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PermissioningType
}

// GetPermissioningTypeOk returns a tuple with the PermissioningType field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetPermissioningTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PermissioningType, true
}

// SetPermissioningType sets field value
func (o *InboundDbObjectType) SetPermissioningType(v string) {
	o.PermissioningType = v
}

// GetPrimaryDisplayLabelPropertyName returns the PrimaryDisplayLabelPropertyName field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetPrimaryDisplayLabelPropertyName() string {
	if o == nil || IsNil(o.PrimaryDisplayLabelPropertyName) {
		var ret string
		return ret
	}
	return *o.PrimaryDisplayLabelPropertyName
}

// GetPrimaryDisplayLabelPropertyNameOk returns a tuple with the PrimaryDisplayLabelPropertyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetPrimaryDisplayLabelPropertyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryDisplayLabelPropertyName) {
		return nil, false
	}
	return o.PrimaryDisplayLabelPropertyName, true
}

// HasPrimaryDisplayLabelPropertyName returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasPrimaryDisplayLabelPropertyName() bool {
	if o != nil && !IsNil(o.PrimaryDisplayLabelPropertyName) {
		return true
	}

	return false
}

// SetPrimaryDisplayLabelPropertyName gets a reference to the given string and assigns it to the PrimaryDisplayLabelPropertyName field.
func (o *InboundDbObjectType) SetPrimaryDisplayLabelPropertyName(v string) {
	o.PrimaryDisplayLabelPropertyName = &v
}

// GetObjectTypeId returns the ObjectTypeId field value
func (o *InboundDbObjectType) GetObjectTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectTypeId
}

// GetObjectTypeIdOk returns a tuple with the ObjectTypeId field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetObjectTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectTypeId, true
}

// SetObjectTypeId sets field value
func (o *InboundDbObjectType) SetObjectTypeId(v string) {
	o.ObjectTypeId = v
}

// GetLastModifiedPropertyName returns the LastModifiedPropertyName field value
func (o *InboundDbObjectType) GetLastModifiedPropertyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastModifiedPropertyName
}

// GetLastModifiedPropertyNameOk returns a tuple with the LastModifiedPropertyName field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetLastModifiedPropertyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifiedPropertyName, true
}

// SetLastModifiedPropertyName sets field value
func (o *InboundDbObjectType) SetLastModifiedPropertyName(v string) {
	o.LastModifiedPropertyName = v
}

// GetIntegrationAppId returns the IntegrationAppId field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetIntegrationAppId() int32 {
	if o == nil || IsNil(o.IntegrationAppId) {
		var ret int32
		return ret
	}
	return *o.IntegrationAppId
}

// GetIntegrationAppIdOk returns a tuple with the IntegrationAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetIntegrationAppIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IntegrationAppId) {
		return nil, false
	}
	return o.IntegrationAppId, true
}

// HasIntegrationAppId returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasIntegrationAppId() bool {
	if o != nil && !IsNil(o.IntegrationAppId) {
		return true
	}

	return false
}

// SetIntegrationAppId gets a reference to the given int32 and assigns it to the IntegrationAppId field.
func (o *InboundDbObjectType) SetIntegrationAppId(v int32) {
	o.IntegrationAppId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InboundDbObjectType) SetDescription(v string) {
	o.Description = &v
}

// GetPipelinePropertyName returns the PipelinePropertyName field value
func (o *InboundDbObjectType) GetPipelinePropertyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PipelinePropertyName
}

// GetPipelinePropertyNameOk returns a tuple with the PipelinePropertyName field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetPipelinePropertyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PipelinePropertyName, true
}

// SetPipelinePropertyName sets field value
func (o *InboundDbObjectType) SetPipelinePropertyName(v string) {
	o.PipelinePropertyName = v
}

// GetPipelineTimeToClosePropertyName returns the PipelineTimeToClosePropertyName field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetPipelineTimeToClosePropertyName() string {
	if o == nil || IsNil(o.PipelineTimeToClosePropertyName) {
		var ret string
		return ret
	}
	return *o.PipelineTimeToClosePropertyName
}

// GetPipelineTimeToClosePropertyNameOk returns a tuple with the PipelineTimeToClosePropertyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetPipelineTimeToClosePropertyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineTimeToClosePropertyName) {
		return nil, false
	}
	return o.PipelineTimeToClosePropertyName, true
}

// HasPipelineTimeToClosePropertyName returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasPipelineTimeToClosePropertyName() bool {
	if o != nil && !IsNil(o.PipelineTimeToClosePropertyName) {
		return true
	}

	return false
}

// SetPipelineTimeToClosePropertyName gets a reference to the given string and assigns it to the PipelineTimeToClosePropertyName field.
func (o *InboundDbObjectType) SetPipelineTimeToClosePropertyName(v string) {
	o.PipelineTimeToClosePropertyName = &v
}

// GetSingularForm returns the SingularForm field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetSingularForm() string {
	if o == nil || IsNil(o.SingularForm) {
		var ret string
		return ret
	}
	return *o.SingularForm
}

// GetSingularFormOk returns a tuple with the SingularForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetSingularFormOk() (*string, bool) {
	if o == nil || IsNil(o.SingularForm) {
		return nil, false
	}
	return o.SingularForm, true
}

// HasSingularForm returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasSingularForm() bool {
	if o != nil && !IsNil(o.SingularForm) {
		return true
	}

	return false
}

// SetSingularForm gets a reference to the given string and assigns it to the SingularForm field.
func (o *InboundDbObjectType) SetSingularForm(v string) {
	o.SingularForm = &v
}

// GetHasPipelines returns the HasPipelines field value
func (o *InboundDbObjectType) GetHasPipelines() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasPipelines
}

// GetHasPipelinesOk returns a tuple with the HasPipelines field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetHasPipelinesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasPipelines, true
}

// SetHasPipelines sets field value
func (o *InboundDbObjectType) SetHasPipelines(v bool) {
	o.HasPipelines = v
}

// GetHasExternalObjectIds returns the HasExternalObjectIds field value
func (o *InboundDbObjectType) GetHasExternalObjectIds() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasExternalObjectIds
}

// GetHasExternalObjectIdsOk returns a tuple with the HasExternalObjectIds field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetHasExternalObjectIdsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasExternalObjectIds, true
}

// SetHasExternalObjectIds sets field value
func (o *InboundDbObjectType) SetHasExternalObjectIds(v bool) {
	o.HasExternalObjectIds = v
}

// GetScopeMappings returns the ScopeMappings field value
func (o *InboundDbObjectType) GetScopeMappings() []ScopeMapping {
	if o == nil {
		var ret []ScopeMapping
		return ret
	}

	return o.ScopeMappings
}

// GetScopeMappingsOk returns a tuple with the ScopeMappings field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetScopeMappingsOk() ([]ScopeMapping, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScopeMappings, true
}

// SetScopeMappings sets field value
func (o *InboundDbObjectType) SetScopeMappings(v []ScopeMapping) {
	o.ScopeMappings = v
}

// GetHasDefaultProperties returns the HasDefaultProperties field value
func (o *InboundDbObjectType) GetHasDefaultProperties() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasDefaultProperties
}

// GetHasDefaultPropertiesOk returns a tuple with the HasDefaultProperties field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetHasDefaultPropertiesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasDefaultProperties, true
}

// SetHasDefaultProperties sets field value
func (o *InboundDbObjectType) SetHasDefaultProperties(v bool) {
	o.HasDefaultProperties = v
}

// GetIndexedForFiltersAndReports returns the IndexedForFiltersAndReports field value
func (o *InboundDbObjectType) GetIndexedForFiltersAndReports() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IndexedForFiltersAndReports
}

// GetIndexedForFiltersAndReportsOk returns a tuple with the IndexedForFiltersAndReports field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetIndexedForFiltersAndReportsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndexedForFiltersAndReports, true
}

// SetIndexedForFiltersAndReports sets field value
func (o *InboundDbObjectType) SetIndexedForFiltersAndReports(v bool) {
	o.IndexedForFiltersAndReports = v
}

// GetCreateDatePropertyName returns the CreateDatePropertyName field value
func (o *InboundDbObjectType) GetCreateDatePropertyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreateDatePropertyName
}

// GetCreateDatePropertyNameOk returns a tuple with the CreateDatePropertyName field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetCreateDatePropertyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateDatePropertyName, true
}

// SetCreateDatePropertyName sets field value
func (o *InboundDbObjectType) SetCreateDatePropertyName(v string) {
	o.CreateDatePropertyName = v
}

// GetId returns the Id field value
func (o *InboundDbObjectType) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InboundDbObjectType) SetId(v int32) {
	o.Id = v
}

// GetOwnerPortalId returns the OwnerPortalId field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetOwnerPortalId() int32 {
	if o == nil || IsNil(o.OwnerPortalId) {
		var ret int32
		return ret
	}
	return *o.OwnerPortalId
}

// GetOwnerPortalIdOk returns a tuple with the OwnerPortalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetOwnerPortalIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OwnerPortalId) {
		return nil, false
	}
	return o.OwnerPortalId, true
}

// HasOwnerPortalId returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasOwnerPortalId() bool {
	if o != nil && !IsNil(o.OwnerPortalId) {
		return true
	}

	return false
}

// SetOwnerPortalId gets a reference to the given int32 and assigns it to the OwnerPortalId field.
func (o *InboundDbObjectType) SetOwnerPortalId(v int32) {
	o.OwnerPortalId = &v
}

// GetRestorable returns the Restorable field value
func (o *InboundDbObjectType) GetRestorable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Restorable
}

// GetRestorableOk returns a tuple with the Restorable field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetRestorableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Restorable, true
}

// SetRestorable sets field value
func (o *InboundDbObjectType) SetRestorable(v bool) {
	o.Restorable = v
}

// GetPluralForm returns the PluralForm field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetPluralForm() string {
	if o == nil || IsNil(o.PluralForm) {
		var ret string
		return ret
	}
	return *o.PluralForm
}

// GetPluralFormOk returns a tuple with the PluralForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetPluralFormOk() (*string, bool) {
	if o == nil || IsNil(o.PluralForm) {
		return nil, false
	}
	return o.PluralForm, true
}

// HasPluralForm returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasPluralForm() bool {
	if o != nil && !IsNil(o.PluralForm) {
		return true
	}

	return false
}

// SetPluralForm gets a reference to the given string and assigns it to the PluralForm field.
func (o *InboundDbObjectType) SetPluralForm(v string) {
	o.PluralForm = &v
}

// GetMetaTypeId returns the MetaTypeId field value
func (o *InboundDbObjectType) GetMetaTypeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MetaTypeId
}

// GetMetaTypeIdOk returns a tuple with the MetaTypeId field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetMetaTypeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaTypeId, true
}

// SetMetaTypeId sets field value
func (o *InboundDbObjectType) SetMetaTypeId(v int32) {
	o.MetaTypeId = v
}

// GetDefaultSearchPropertyNames returns the DefaultSearchPropertyNames field value
func (o *InboundDbObjectType) GetDefaultSearchPropertyNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DefaultSearchPropertyNames
}

// GetDefaultSearchPropertyNamesOk returns a tuple with the DefaultSearchPropertyNames field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetDefaultSearchPropertyNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultSearchPropertyNames, true
}

// SetDefaultSearchPropertyNames sets field value
func (o *InboundDbObjectType) SetDefaultSearchPropertyNames(v []string) {
	o.DefaultSearchPropertyNames = v
}

// GetJanusGroup returns the JanusGroup field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetJanusGroup() string {
	if o == nil || IsNil(o.JanusGroup) {
		var ret string
		return ret
	}
	return *o.JanusGroup
}

// GetJanusGroupOk returns a tuple with the JanusGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetJanusGroupOk() (*string, bool) {
	if o == nil || IsNil(o.JanusGroup) {
		return nil, false
	}
	return o.JanusGroup, true
}

// HasJanusGroup returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasJanusGroup() bool {
	if o != nil && !IsNil(o.JanusGroup) {
		return true
	}

	return false
}

// SetJanusGroup gets a reference to the given string and assigns it to the JanusGroup field.
func (o *InboundDbObjectType) SetJanusGroup(v string) {
	o.JanusGroup = &v
}

// GetPipelineCloseDatePropertyName returns the PipelineCloseDatePropertyName field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetPipelineCloseDatePropertyName() string {
	if o == nil || IsNil(o.PipelineCloseDatePropertyName) {
		var ret string
		return ret
	}
	return *o.PipelineCloseDatePropertyName
}

// GetPipelineCloseDatePropertyNameOk returns a tuple with the PipelineCloseDatePropertyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetPipelineCloseDatePropertyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineCloseDatePropertyName) {
		return nil, false
	}
	return o.PipelineCloseDatePropertyName, true
}

// HasPipelineCloseDatePropertyName returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasPipelineCloseDatePropertyName() bool {
	if o != nil && !IsNil(o.PipelineCloseDatePropertyName) {
		return true
	}

	return false
}

// SetPipelineCloseDatePropertyName gets a reference to the given string and assigns it to the PipelineCloseDatePropertyName field.
func (o *InboundDbObjectType) SetPipelineCloseDatePropertyName(v string) {
	o.PipelineCloseDatePropertyName = &v
}

// GetFullyQualifiedName returns the FullyQualifiedName field value
func (o *InboundDbObjectType) GetFullyQualifiedName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullyQualifiedName
}

// GetFullyQualifiedNameOk returns a tuple with the FullyQualifiedName field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetFullyQualifiedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullyQualifiedName, true
}

// SetFullyQualifiedName sets field value
func (o *InboundDbObjectType) SetFullyQualifiedName(v string) {
	o.FullyQualifiedName = v
}

// GetDeleted returns the Deleted field value
func (o *InboundDbObjectType) GetDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// SetDeleted sets field value
func (o *InboundDbObjectType) SetDeleted(v bool) {
	o.Deleted = v
}

// GetRequiredProperties returns the RequiredProperties field value
func (o *InboundDbObjectType) GetRequiredProperties() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RequiredProperties
}

// GetRequiredPropertiesOk returns a tuple with the RequiredProperties field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetRequiredPropertiesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequiredProperties, true
}

// SetRequiredProperties sets field value
func (o *InboundDbObjectType) SetRequiredProperties(v []string) {
	o.RequiredProperties = v
}

// GetWriteScopeName returns the WriteScopeName field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetWriteScopeName() string {
	if o == nil || IsNil(o.WriteScopeName) {
		var ret string
		return ret
	}
	return *o.WriteScopeName
}

// GetWriteScopeNameOk returns a tuple with the WriteScopeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetWriteScopeNameOk() (*string, bool) {
	if o == nil || IsNil(o.WriteScopeName) {
		return nil, false
	}
	return o.WriteScopeName, true
}

// HasWriteScopeName returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasWriteScopeName() bool {
	if o != nil && !IsNil(o.WriteScopeName) {
		return true
	}

	return false
}

// SetWriteScopeName gets a reference to the given string and assigns it to the WriteScopeName field.
func (o *InboundDbObjectType) SetWriteScopeName(v string) {
	o.WriteScopeName = &v
}

// GetAccessScopeName returns the AccessScopeName field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetAccessScopeName() string {
	if o == nil || IsNil(o.AccessScopeName) {
		var ret string
		return ret
	}
	return *o.AccessScopeName
}

// GetAccessScopeNameOk returns a tuple with the AccessScopeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetAccessScopeNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccessScopeName) {
		return nil, false
	}
	return o.AccessScopeName, true
}

// HasAccessScopeName returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasAccessScopeName() bool {
	if o != nil && !IsNil(o.AccessScopeName) {
		return true
	}

	return false
}

// SetAccessScopeName gets a reference to the given string and assigns it to the AccessScopeName field.
func (o *InboundDbObjectType) SetAccessScopeName(v string) {
	o.AccessScopeName = &v
}

// GetHasCustomProperties returns the HasCustomProperties field value
func (o *InboundDbObjectType) GetHasCustomProperties() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasCustomProperties
}

// GetHasCustomPropertiesOk returns a tuple with the HasCustomProperties field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetHasCustomPropertiesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasCustomProperties, true
}

// SetHasCustomProperties sets field value
func (o *InboundDbObjectType) SetHasCustomProperties(v bool) {
	o.HasCustomProperties = v
}

// GetName returns the Name field value
func (o *InboundDbObjectType) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InboundDbObjectType) SetName(v string) {
	o.Name = v
}

// GetMetaType returns the MetaType field value
func (o *InboundDbObjectType) GetMetaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaType
}

// GetMetaTypeOk returns a tuple with the MetaType field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetMetaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaType, true
}

// SetMetaType sets field value
func (o *InboundDbObjectType) SetMetaType(v string) {
	o.MetaType = v
}

// GetPipelineStagePropertyName returns the PipelineStagePropertyName field value
func (o *InboundDbObjectType) GetPipelineStagePropertyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PipelineStagePropertyName
}

// GetPipelineStagePropertyNameOk returns a tuple with the PipelineStagePropertyName field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetPipelineStagePropertyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PipelineStagePropertyName, true
}

// SetPipelineStagePropertyName sets field value
func (o *InboundDbObjectType) SetPipelineStagePropertyName(v string) {
	o.PipelineStagePropertyName = v
}

// GetReadScopeName returns the ReadScopeName field value if set, zero value otherwise.
func (o *InboundDbObjectType) GetReadScopeName() string {
	if o == nil || IsNil(o.ReadScopeName) {
		var ret string
		return ret
	}
	return *o.ReadScopeName
}

// GetReadScopeNameOk returns a tuple with the ReadScopeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetReadScopeNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReadScopeName) {
		return nil, false
	}
	return o.ReadScopeName, true
}

// HasReadScopeName returns a boolean if a field has been set.
func (o *InboundDbObjectType) HasReadScopeName() bool {
	if o != nil && !IsNil(o.ReadScopeName) {
		return true
	}

	return false
}

// SetReadScopeName gets a reference to the given string and assigns it to the ReadScopeName field.
func (o *InboundDbObjectType) SetReadScopeName(v string) {
	o.ReadScopeName = &v
}

// GetSecondaryDisplayLabelPropertyNames returns the SecondaryDisplayLabelPropertyNames field value
func (o *InboundDbObjectType) GetSecondaryDisplayLabelPropertyNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SecondaryDisplayLabelPropertyNames
}

// GetSecondaryDisplayLabelPropertyNamesOk returns a tuple with the SecondaryDisplayLabelPropertyNames field value
// and a boolean to check if the value has been set.
func (o *InboundDbObjectType) GetSecondaryDisplayLabelPropertyNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecondaryDisplayLabelPropertyNames, true
}

// SetSecondaryDisplayLabelPropertyNames sets field value
func (o *InboundDbObjectType) SetSecondaryDisplayLabelPropertyNames(v []string) {
	o.SecondaryDisplayLabelPropertyNames = v
}

func (o InboundDbObjectType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InboundDbObjectType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hasOwners"] = o.HasOwners
	toSerialize["permissioningType"] = o.PermissioningType
	if !IsNil(o.PrimaryDisplayLabelPropertyName) {
		toSerialize["primaryDisplayLabelPropertyName"] = o.PrimaryDisplayLabelPropertyName
	}
	toSerialize["objectTypeId"] = o.ObjectTypeId
	toSerialize["lastModifiedPropertyName"] = o.LastModifiedPropertyName
	if !IsNil(o.IntegrationAppId) {
		toSerialize["integrationAppId"] = o.IntegrationAppId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["pipelinePropertyName"] = o.PipelinePropertyName
	if !IsNil(o.PipelineTimeToClosePropertyName) {
		toSerialize["pipelineTimeToClosePropertyName"] = o.PipelineTimeToClosePropertyName
	}
	if !IsNil(o.SingularForm) {
		toSerialize["singularForm"] = o.SingularForm
	}
	toSerialize["hasPipelines"] = o.HasPipelines
	toSerialize["hasExternalObjectIds"] = o.HasExternalObjectIds
	toSerialize["scopeMappings"] = o.ScopeMappings
	toSerialize["hasDefaultProperties"] = o.HasDefaultProperties
	toSerialize["indexedForFiltersAndReports"] = o.IndexedForFiltersAndReports
	toSerialize["createDatePropertyName"] = o.CreateDatePropertyName
	toSerialize["id"] = o.Id
	if !IsNil(o.OwnerPortalId) {
		toSerialize["ownerPortalId"] = o.OwnerPortalId
	}
	toSerialize["restorable"] = o.Restorable
	if !IsNil(o.PluralForm) {
		toSerialize["pluralForm"] = o.PluralForm
	}
	toSerialize["metaTypeId"] = o.MetaTypeId
	toSerialize["defaultSearchPropertyNames"] = o.DefaultSearchPropertyNames
	if !IsNil(o.JanusGroup) {
		toSerialize["janusGroup"] = o.JanusGroup
	}
	if !IsNil(o.PipelineCloseDatePropertyName) {
		toSerialize["pipelineCloseDatePropertyName"] = o.PipelineCloseDatePropertyName
	}
	toSerialize["fullyQualifiedName"] = o.FullyQualifiedName
	toSerialize["deleted"] = o.Deleted
	toSerialize["requiredProperties"] = o.RequiredProperties
	if !IsNil(o.WriteScopeName) {
		toSerialize["writeScopeName"] = o.WriteScopeName
	}
	if !IsNil(o.AccessScopeName) {
		toSerialize["accessScopeName"] = o.AccessScopeName
	}
	toSerialize["hasCustomProperties"] = o.HasCustomProperties
	toSerialize["name"] = o.Name
	toSerialize["metaType"] = o.MetaType
	toSerialize["pipelineStagePropertyName"] = o.PipelineStagePropertyName
	if !IsNil(o.ReadScopeName) {
		toSerialize["readScopeName"] = o.ReadScopeName
	}
	toSerialize["secondaryDisplayLabelPropertyNames"] = o.SecondaryDisplayLabelPropertyNames
	return toSerialize, nil
}

func (o *InboundDbObjectType) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hasOwners",
		"permissioningType",
		"objectTypeId",
		"lastModifiedPropertyName",
		"pipelinePropertyName",
		"hasPipelines",
		"hasExternalObjectIds",
		"scopeMappings",
		"hasDefaultProperties",
		"indexedForFiltersAndReports",
		"createDatePropertyName",
		"id",
		"restorable",
		"metaTypeId",
		"defaultSearchPropertyNames",
		"fullyQualifiedName",
		"deleted",
		"requiredProperties",
		"hasCustomProperties",
		"name",
		"metaType",
		"pipelineStagePropertyName",
		"secondaryDisplayLabelPropertyNames",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInboundDbObjectType := _InboundDbObjectType{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInboundDbObjectType)

	if err != nil {
		return err
	}

	*o = InboundDbObjectType(varInboundDbObjectType)

	return err
}

type NullableInboundDbObjectType struct {
	value *InboundDbObjectType
	isSet bool
}

func (v NullableInboundDbObjectType) Get() *InboundDbObjectType {
	return v.value
}

func (v *NullableInboundDbObjectType) Set(val *InboundDbObjectType) {
	v.value = val
	v.isSet = true
}

func (v NullableInboundDbObjectType) IsSet() bool {
	return v.isSet
}

func (v *NullableInboundDbObjectType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInboundDbObjectType(val *InboundDbObjectType) *NullableInboundDbObjectType {
	return &NullableInboundDbObjectType{value: val, isSet: true}
}

func (v NullableInboundDbObjectType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInboundDbObjectType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


