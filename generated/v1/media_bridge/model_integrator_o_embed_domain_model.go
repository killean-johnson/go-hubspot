/*
CMS Media Bridge

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package media_bridge

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the IntegratorOEmbedDomainModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegratorOEmbedDomainModel{}

// IntegratorOEmbedDomainModel struct for IntegratorOEmbedDomainModel
type IntegratorOEmbedDomainModel struct {
	CreatedAt int64 `json:"createdAt"`
	Endpoints Endpoints `json:"endpoints"`
	DeletedAt int64 `json:"deletedAt"`
	AppId int32 `json:"appId"`
	PortalId int32 `json:"portalId"`
	Id int64 `json:"id"`
	UpdatedAt int64 `json:"updatedAt"`
}

type _IntegratorOEmbedDomainModel IntegratorOEmbedDomainModel

// NewIntegratorOEmbedDomainModel instantiates a new IntegratorOEmbedDomainModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegratorOEmbedDomainModel(createdAt int64, endpoints Endpoints, deletedAt int64, appId int32, portalId int32, id int64, updatedAt int64) *IntegratorOEmbedDomainModel {
	this := IntegratorOEmbedDomainModel{}
	this.CreatedAt = createdAt
	this.Endpoints = endpoints
	this.DeletedAt = deletedAt
	this.AppId = appId
	this.PortalId = portalId
	this.Id = id
	this.UpdatedAt = updatedAt
	return &this
}

// NewIntegratorOEmbedDomainModelWithDefaults instantiates a new IntegratorOEmbedDomainModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegratorOEmbedDomainModelWithDefaults() *IntegratorOEmbedDomainModel {
	this := IntegratorOEmbedDomainModel{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *IntegratorOEmbedDomainModel) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *IntegratorOEmbedDomainModel) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *IntegratorOEmbedDomainModel) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetEndpoints returns the Endpoints field value
func (o *IntegratorOEmbedDomainModel) GetEndpoints() Endpoints {
	if o == nil {
		var ret Endpoints
		return ret
	}

	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value
// and a boolean to check if the value has been set.
func (o *IntegratorOEmbedDomainModel) GetEndpointsOk() (*Endpoints, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoints, true
}

// SetEndpoints sets field value
func (o *IntegratorOEmbedDomainModel) SetEndpoints(v Endpoints) {
	o.Endpoints = v
}

// GetDeletedAt returns the DeletedAt field value
func (o *IntegratorOEmbedDomainModel) GetDeletedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value
// and a boolean to check if the value has been set.
func (o *IntegratorOEmbedDomainModel) GetDeletedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedAt, true
}

// SetDeletedAt sets field value
func (o *IntegratorOEmbedDomainModel) SetDeletedAt(v int64) {
	o.DeletedAt = v
}

// GetAppId returns the AppId field value
func (o *IntegratorOEmbedDomainModel) GetAppId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *IntegratorOEmbedDomainModel) GetAppIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *IntegratorOEmbedDomainModel) SetAppId(v int32) {
	o.AppId = v
}

// GetPortalId returns the PortalId field value
func (o *IntegratorOEmbedDomainModel) GetPortalId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PortalId
}

// GetPortalIdOk returns a tuple with the PortalId field value
// and a boolean to check if the value has been set.
func (o *IntegratorOEmbedDomainModel) GetPortalIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortalId, true
}

// SetPortalId sets field value
func (o *IntegratorOEmbedDomainModel) SetPortalId(v int32) {
	o.PortalId = v
}

// GetId returns the Id field value
func (o *IntegratorOEmbedDomainModel) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IntegratorOEmbedDomainModel) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IntegratorOEmbedDomainModel) SetId(v int64) {
	o.Id = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *IntegratorOEmbedDomainModel) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *IntegratorOEmbedDomainModel) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *IntegratorOEmbedDomainModel) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

func (o IntegratorOEmbedDomainModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegratorOEmbedDomainModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["endpoints"] = o.Endpoints
	toSerialize["deletedAt"] = o.DeletedAt
	toSerialize["appId"] = o.AppId
	toSerialize["portalId"] = o.PortalId
	toSerialize["id"] = o.Id
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *IntegratorOEmbedDomainModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"endpoints",
		"deletedAt",
		"appId",
		"portalId",
		"id",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIntegratorOEmbedDomainModel := _IntegratorOEmbedDomainModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIntegratorOEmbedDomainModel)

	if err != nil {
		return err
	}

	*o = IntegratorOEmbedDomainModel(varIntegratorOEmbedDomainModel)

	return err
}

type NullableIntegratorOEmbedDomainModel struct {
	value *IntegratorOEmbedDomainModel
	isSet bool
}

func (v NullableIntegratorOEmbedDomainModel) Get() *IntegratorOEmbedDomainModel {
	return v.value
}

func (v *NullableIntegratorOEmbedDomainModel) Set(val *IntegratorOEmbedDomainModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegratorOEmbedDomainModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegratorOEmbedDomainModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegratorOEmbedDomainModel(val *IntegratorOEmbedDomainModel) *NullableIntegratorOEmbedDomainModel {
	return &NullableIntegratorOEmbedDomainModel{value: val, isSet: true}
}

func (v NullableIntegratorOEmbedDomainModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegratorOEmbedDomainModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


