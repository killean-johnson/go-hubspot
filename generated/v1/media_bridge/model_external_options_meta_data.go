/*
CMS Media Bridge

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package media_bridge

import (
	"encoding/json"
)

// checks if the ExternalOptionsMetaData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalOptionsMetaData{}

// ExternalOptionsMetaData struct for ExternalOptionsMetaData
type ExternalOptionsMetaData struct {
	Filter *FilteringMetaData `json:"filter,omitempty"`
	RelatedObjectTypeId *string `json:"relatedObjectTypeId,omitempty"`
}

// NewExternalOptionsMetaData instantiates a new ExternalOptionsMetaData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalOptionsMetaData() *ExternalOptionsMetaData {
	this := ExternalOptionsMetaData{}
	return &this
}

// NewExternalOptionsMetaDataWithDefaults instantiates a new ExternalOptionsMetaData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalOptionsMetaDataWithDefaults() *ExternalOptionsMetaData {
	this := ExternalOptionsMetaData{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *ExternalOptionsMetaData) GetFilter() FilteringMetaData {
	if o == nil || IsNil(o.Filter) {
		var ret FilteringMetaData
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalOptionsMetaData) GetFilterOk() (*FilteringMetaData, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *ExternalOptionsMetaData) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given FilteringMetaData and assigns it to the Filter field.
func (o *ExternalOptionsMetaData) SetFilter(v FilteringMetaData) {
	o.Filter = &v
}

// GetRelatedObjectTypeId returns the RelatedObjectTypeId field value if set, zero value otherwise.
func (o *ExternalOptionsMetaData) GetRelatedObjectTypeId() string {
	if o == nil || IsNil(o.RelatedObjectTypeId) {
		var ret string
		return ret
	}
	return *o.RelatedObjectTypeId
}

// GetRelatedObjectTypeIdOk returns a tuple with the RelatedObjectTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalOptionsMetaData) GetRelatedObjectTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.RelatedObjectTypeId) {
		return nil, false
	}
	return o.RelatedObjectTypeId, true
}

// HasRelatedObjectTypeId returns a boolean if a field has been set.
func (o *ExternalOptionsMetaData) HasRelatedObjectTypeId() bool {
	if o != nil && !IsNil(o.RelatedObjectTypeId) {
		return true
	}

	return false
}

// SetRelatedObjectTypeId gets a reference to the given string and assigns it to the RelatedObjectTypeId field.
func (o *ExternalOptionsMetaData) SetRelatedObjectTypeId(v string) {
	o.RelatedObjectTypeId = &v
}

func (o ExternalOptionsMetaData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalOptionsMetaData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.RelatedObjectTypeId) {
		toSerialize["relatedObjectTypeId"] = o.RelatedObjectTypeId
	}
	return toSerialize, nil
}

type NullableExternalOptionsMetaData struct {
	value *ExternalOptionsMetaData
	isSet bool
}

func (v NullableExternalOptionsMetaData) Get() *ExternalOptionsMetaData {
	return v.value
}

func (v *NullableExternalOptionsMetaData) Set(val *ExternalOptionsMetaData) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalOptionsMetaData) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalOptionsMetaData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalOptionsMetaData(val *ExternalOptionsMetaData) *NullableExternalOptionsMetaData {
	return &NullableExternalOptionsMetaData{value: val, isSet: true}
}

func (v NullableExternalOptionsMetaData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalOptionsMetaData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


