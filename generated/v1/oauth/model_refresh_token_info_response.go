/*
Auth Oauth

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oauth

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RefreshTokenInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshTokenInfoResponse{}

// RefreshTokenInfoResponse struct for RefreshTokenInfoResponse
type RefreshTokenInfoResponse struct {
	// 
	HubId int32 `json:"hub_id"`
	// 
	UserId int32 `json:"user_id"`
	// 
	Scopes []string `json:"scopes"`
	// 
	TokenType string `json:"token_type"`
	// 
	User *string `json:"user,omitempty"`
	// 
	HubDomain *string `json:"hub_domain,omitempty"`
	// 
	ClientId string `json:"client_id"`
	// 
	Token string `json:"token"`
}

type _RefreshTokenInfoResponse RefreshTokenInfoResponse

// NewRefreshTokenInfoResponse instantiates a new RefreshTokenInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshTokenInfoResponse(hubId int32, userId int32, scopes []string, tokenType string, clientId string, token string) *RefreshTokenInfoResponse {
	this := RefreshTokenInfoResponse{}
	this.HubId = hubId
	this.UserId = userId
	this.Scopes = scopes
	this.TokenType = tokenType
	this.ClientId = clientId
	this.Token = token
	return &this
}

// NewRefreshTokenInfoResponseWithDefaults instantiates a new RefreshTokenInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshTokenInfoResponseWithDefaults() *RefreshTokenInfoResponse {
	this := RefreshTokenInfoResponse{}
	return &this
}

// GetHubId returns the HubId field value
func (o *RefreshTokenInfoResponse) GetHubId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HubId
}

// GetHubIdOk returns a tuple with the HubId field value
// and a boolean to check if the value has been set.
func (o *RefreshTokenInfoResponse) GetHubIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HubId, true
}

// SetHubId sets field value
func (o *RefreshTokenInfoResponse) SetHubId(v int32) {
	o.HubId = v
}

// GetUserId returns the UserId field value
func (o *RefreshTokenInfoResponse) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *RefreshTokenInfoResponse) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *RefreshTokenInfoResponse) SetUserId(v int32) {
	o.UserId = v
}

// GetScopes returns the Scopes field value
func (o *RefreshTokenInfoResponse) GetScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *RefreshTokenInfoResponse) GetScopesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *RefreshTokenInfoResponse) SetScopes(v []string) {
	o.Scopes = v
}

// GetTokenType returns the TokenType field value
func (o *RefreshTokenInfoResponse) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *RefreshTokenInfoResponse) GetTokenTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *RefreshTokenInfoResponse) SetTokenType(v string) {
	o.TokenType = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *RefreshTokenInfoResponse) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshTokenInfoResponse) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *RefreshTokenInfoResponse) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *RefreshTokenInfoResponse) SetUser(v string) {
	o.User = &v
}

// GetHubDomain returns the HubDomain field value if set, zero value otherwise.
func (o *RefreshTokenInfoResponse) GetHubDomain() string {
	if o == nil || IsNil(o.HubDomain) {
		var ret string
		return ret
	}
	return *o.HubDomain
}

// GetHubDomainOk returns a tuple with the HubDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshTokenInfoResponse) GetHubDomainOk() (*string, bool) {
	if o == nil || IsNil(o.HubDomain) {
		return nil, false
	}
	return o.HubDomain, true
}

// HasHubDomain returns a boolean if a field has been set.
func (o *RefreshTokenInfoResponse) HasHubDomain() bool {
	if o != nil && !IsNil(o.HubDomain) {
		return true
	}

	return false
}

// SetHubDomain gets a reference to the given string and assigns it to the HubDomain field.
func (o *RefreshTokenInfoResponse) SetHubDomain(v string) {
	o.HubDomain = &v
}

// GetClientId returns the ClientId field value
func (o *RefreshTokenInfoResponse) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *RefreshTokenInfoResponse) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *RefreshTokenInfoResponse) SetClientId(v string) {
	o.ClientId = v
}

// GetToken returns the Token field value
func (o *RefreshTokenInfoResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *RefreshTokenInfoResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *RefreshTokenInfoResponse) SetToken(v string) {
	o.Token = v
}

func (o RefreshTokenInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshTokenInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hub_id"] = o.HubId
	toSerialize["user_id"] = o.UserId
	toSerialize["scopes"] = o.Scopes
	toSerialize["token_type"] = o.TokenType
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.HubDomain) {
		toSerialize["hub_domain"] = o.HubDomain
	}
	toSerialize["client_id"] = o.ClientId
	toSerialize["token"] = o.Token
	return toSerialize, nil
}

func (o *RefreshTokenInfoResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hub_id",
		"user_id",
		"scopes",
		"token_type",
		"client_id",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRefreshTokenInfoResponse := _RefreshTokenInfoResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRefreshTokenInfoResponse)

	if err != nil {
		return err
	}

	*o = RefreshTokenInfoResponse(varRefreshTokenInfoResponse)

	return err
}

type NullableRefreshTokenInfoResponse struct {
	value *RefreshTokenInfoResponse
	isSet bool
}

func (v NullableRefreshTokenInfoResponse) Get() *RefreshTokenInfoResponse {
	return v.value
}

func (v *NullableRefreshTokenInfoResponse) Set(val *RefreshTokenInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshTokenInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshTokenInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshTokenInfoResponse(val *RefreshTokenInfoResponse) *NullableRefreshTokenInfoResponse {
	return &NullableRefreshTokenInfoResponse{value: val, isSet: true}
}

func (v NullableRefreshTokenInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshTokenInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


