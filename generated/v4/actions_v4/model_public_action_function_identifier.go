/*
Automation Actions V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actions_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicActionFunctionIdentifier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicActionFunctionIdentifier{}

// PublicActionFunctionIdentifier struct for PublicActionFunctionIdentifier
type PublicActionFunctionIdentifier struct {
	FunctionType string `json:"functionType"`
	Id *string `json:"id,omitempty"`
}

type _PublicActionFunctionIdentifier PublicActionFunctionIdentifier

// NewPublicActionFunctionIdentifier instantiates a new PublicActionFunctionIdentifier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicActionFunctionIdentifier(functionType string) *PublicActionFunctionIdentifier {
	this := PublicActionFunctionIdentifier{}
	this.FunctionType = functionType
	return &this
}

// NewPublicActionFunctionIdentifierWithDefaults instantiates a new PublicActionFunctionIdentifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicActionFunctionIdentifierWithDefaults() *PublicActionFunctionIdentifier {
	this := PublicActionFunctionIdentifier{}
	return &this
}

// GetFunctionType returns the FunctionType field value
func (o *PublicActionFunctionIdentifier) GetFunctionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FunctionType
}

// GetFunctionTypeOk returns a tuple with the FunctionType field value
// and a boolean to check if the value has been set.
func (o *PublicActionFunctionIdentifier) GetFunctionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FunctionType, true
}

// SetFunctionType sets field value
func (o *PublicActionFunctionIdentifier) SetFunctionType(v string) {
	o.FunctionType = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PublicActionFunctionIdentifier) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionFunctionIdentifier) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PublicActionFunctionIdentifier) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PublicActionFunctionIdentifier) SetId(v string) {
	o.Id = &v
}

func (o PublicActionFunctionIdentifier) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicActionFunctionIdentifier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["functionType"] = o.FunctionType
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

func (o *PublicActionFunctionIdentifier) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"functionType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicActionFunctionIdentifier := _PublicActionFunctionIdentifier{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicActionFunctionIdentifier)

	if err != nil {
		return err
	}

	*o = PublicActionFunctionIdentifier(varPublicActionFunctionIdentifier)

	return err
}

type NullablePublicActionFunctionIdentifier struct {
	value *PublicActionFunctionIdentifier
	isSet bool
}

func (v NullablePublicActionFunctionIdentifier) Get() *PublicActionFunctionIdentifier {
	return v.value
}

func (v *NullablePublicActionFunctionIdentifier) Set(val *PublicActionFunctionIdentifier) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicActionFunctionIdentifier) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicActionFunctionIdentifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicActionFunctionIdentifier(val *PublicActionFunctionIdentifier) *NullablePublicActionFunctionIdentifier {
	return &NullablePublicActionFunctionIdentifier{value: val, isSet: true}
}

func (v NullablePublicActionFunctionIdentifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicActionFunctionIdentifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


