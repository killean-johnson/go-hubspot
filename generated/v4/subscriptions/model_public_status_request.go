/*
Communication Preferences Subscriptions

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package subscriptions

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicStatusRequest{}

// PublicStatusRequest struct for PublicStatusRequest
type PublicStatusRequest struct {
	// The status of the contact's subscription.
	StatusState string `json:"statusState"`
	// The type of communication channel. Currently, only `EMAIL` is supported.
	Channel string `json:"channel"`
	// The contact's email address.
	SubscriberIdString string `json:"subscriberIdString"`
	// The legal basis for communication.
	LegalBasis *string `json:"legalBasis,omitempty"`
	// The ID of the subscription to update.
	SubscriptionId int32 `json:"subscriptionId"`
	// The explanation for the legal basis.
	LegalBasisExplanation *string `json:"legalBasisExplanation,omitempty"`
}

type _PublicStatusRequest PublicStatusRequest

// NewPublicStatusRequest instantiates a new PublicStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicStatusRequest(statusState string, channel string, subscriberIdString string, subscriptionId int32) *PublicStatusRequest {
	this := PublicStatusRequest{}
	this.StatusState = statusState
	this.Channel = channel
	this.SubscriberIdString = subscriberIdString
	this.SubscriptionId = subscriptionId
	return &this
}

// NewPublicStatusRequestWithDefaults instantiates a new PublicStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicStatusRequestWithDefaults() *PublicStatusRequest {
	this := PublicStatusRequest{}
	return &this
}

// GetStatusState returns the StatusState field value
func (o *PublicStatusRequest) GetStatusState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusState
}

// GetStatusStateOk returns a tuple with the StatusState field value
// and a boolean to check if the value has been set.
func (o *PublicStatusRequest) GetStatusStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusState, true
}

// SetStatusState sets field value
func (o *PublicStatusRequest) SetStatusState(v string) {
	o.StatusState = v
}

// GetChannel returns the Channel field value
func (o *PublicStatusRequest) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *PublicStatusRequest) GetChannelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *PublicStatusRequest) SetChannel(v string) {
	o.Channel = v
}

// GetSubscriberIdString returns the SubscriberIdString field value
func (o *PublicStatusRequest) GetSubscriberIdString() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriberIdString
}

// GetSubscriberIdStringOk returns a tuple with the SubscriberIdString field value
// and a boolean to check if the value has been set.
func (o *PublicStatusRequest) GetSubscriberIdStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriberIdString, true
}

// SetSubscriberIdString sets field value
func (o *PublicStatusRequest) SetSubscriberIdString(v string) {
	o.SubscriberIdString = v
}

// GetLegalBasis returns the LegalBasis field value if set, zero value otherwise.
func (o *PublicStatusRequest) GetLegalBasis() string {
	if o == nil || IsNil(o.LegalBasis) {
		var ret string
		return ret
	}
	return *o.LegalBasis
}

// GetLegalBasisOk returns a tuple with the LegalBasis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicStatusRequest) GetLegalBasisOk() (*string, bool) {
	if o == nil || IsNil(o.LegalBasis) {
		return nil, false
	}
	return o.LegalBasis, true
}

// HasLegalBasis returns a boolean if a field has been set.
func (o *PublicStatusRequest) HasLegalBasis() bool {
	if o != nil && !IsNil(o.LegalBasis) {
		return true
	}

	return false
}

// SetLegalBasis gets a reference to the given string and assigns it to the LegalBasis field.
func (o *PublicStatusRequest) SetLegalBasis(v string) {
	o.LegalBasis = &v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *PublicStatusRequest) GetSubscriptionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *PublicStatusRequest) GetSubscriptionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *PublicStatusRequest) SetSubscriptionId(v int32) {
	o.SubscriptionId = v
}

// GetLegalBasisExplanation returns the LegalBasisExplanation field value if set, zero value otherwise.
func (o *PublicStatusRequest) GetLegalBasisExplanation() string {
	if o == nil || IsNil(o.LegalBasisExplanation) {
		var ret string
		return ret
	}
	return *o.LegalBasisExplanation
}

// GetLegalBasisExplanationOk returns a tuple with the LegalBasisExplanation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicStatusRequest) GetLegalBasisExplanationOk() (*string, bool) {
	if o == nil || IsNil(o.LegalBasisExplanation) {
		return nil, false
	}
	return o.LegalBasisExplanation, true
}

// HasLegalBasisExplanation returns a boolean if a field has been set.
func (o *PublicStatusRequest) HasLegalBasisExplanation() bool {
	if o != nil && !IsNil(o.LegalBasisExplanation) {
		return true
	}

	return false
}

// SetLegalBasisExplanation gets a reference to the given string and assigns it to the LegalBasisExplanation field.
func (o *PublicStatusRequest) SetLegalBasisExplanation(v string) {
	o.LegalBasisExplanation = &v
}

func (o PublicStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["statusState"] = o.StatusState
	toSerialize["channel"] = o.Channel
	toSerialize["subscriberIdString"] = o.SubscriberIdString
	if !IsNil(o.LegalBasis) {
		toSerialize["legalBasis"] = o.LegalBasis
	}
	toSerialize["subscriptionId"] = o.SubscriptionId
	if !IsNil(o.LegalBasisExplanation) {
		toSerialize["legalBasisExplanation"] = o.LegalBasisExplanation
	}
	return toSerialize, nil
}

func (o *PublicStatusRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"statusState",
		"channel",
		"subscriberIdString",
		"subscriptionId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicStatusRequest := _PublicStatusRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicStatusRequest)

	if err != nil {
		return err
	}

	*o = PublicStatusRequest(varPublicStatusRequest)

	return err
}

type NullablePublicStatusRequest struct {
	value *PublicStatusRequest
	isSet bool
}

func (v NullablePublicStatusRequest) Get() *PublicStatusRequest {
	return v.value
}

func (v *NullablePublicStatusRequest) Set(val *PublicStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicStatusRequest(val *PublicStatusRequest) *NullablePublicStatusRequest {
	return &NullablePublicStatusRequest{value: val, isSet: true}
}

func (v NullablePublicStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


