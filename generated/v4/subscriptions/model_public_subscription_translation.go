/*
Communication Preferences Subscriptions

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package subscriptions

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicSubscriptionTranslation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicSubscriptionTranslation{}

// PublicSubscriptionTranslation struct for PublicSubscriptionTranslation
type PublicSubscriptionTranslation struct {
	CreatedAt int32 `json:"createdAt"`
	Name string `json:"name"`
	Description string `json:"description"`
	SubscriptionId int32 `json:"subscriptionId"`
	LanguageCode string `json:"languageCode"`
	UpdatedAt int32 `json:"updatedAt"`
}

type _PublicSubscriptionTranslation PublicSubscriptionTranslation

// NewPublicSubscriptionTranslation instantiates a new PublicSubscriptionTranslation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicSubscriptionTranslation(createdAt int32, name string, description string, subscriptionId int32, languageCode string, updatedAt int32) *PublicSubscriptionTranslation {
	this := PublicSubscriptionTranslation{}
	this.CreatedAt = createdAt
	this.Name = name
	this.Description = description
	this.SubscriptionId = subscriptionId
	this.LanguageCode = languageCode
	this.UpdatedAt = updatedAt
	return &this
}

// NewPublicSubscriptionTranslationWithDefaults instantiates a new PublicSubscriptionTranslation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicSubscriptionTranslationWithDefaults() *PublicSubscriptionTranslation {
	this := PublicSubscriptionTranslation{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *PublicSubscriptionTranslation) GetCreatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PublicSubscriptionTranslation) GetCreatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PublicSubscriptionTranslation) SetCreatedAt(v int32) {
	o.CreatedAt = v
}

// GetName returns the Name field value
func (o *PublicSubscriptionTranslation) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PublicSubscriptionTranslation) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PublicSubscriptionTranslation) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *PublicSubscriptionTranslation) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PublicSubscriptionTranslation) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PublicSubscriptionTranslation) SetDescription(v string) {
	o.Description = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *PublicSubscriptionTranslation) GetSubscriptionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *PublicSubscriptionTranslation) GetSubscriptionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *PublicSubscriptionTranslation) SetSubscriptionId(v int32) {
	o.SubscriptionId = v
}

// GetLanguageCode returns the LanguageCode field value
func (o *PublicSubscriptionTranslation) GetLanguageCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LanguageCode
}

// GetLanguageCodeOk returns a tuple with the LanguageCode field value
// and a boolean to check if the value has been set.
func (o *PublicSubscriptionTranslation) GetLanguageCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LanguageCode, true
}

// SetLanguageCode sets field value
func (o *PublicSubscriptionTranslation) SetLanguageCode(v string) {
	o.LanguageCode = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PublicSubscriptionTranslation) GetUpdatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PublicSubscriptionTranslation) GetUpdatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PublicSubscriptionTranslation) SetUpdatedAt(v int32) {
	o.UpdatedAt = v
}

func (o PublicSubscriptionTranslation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicSubscriptionTranslation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["subscriptionId"] = o.SubscriptionId
	toSerialize["languageCode"] = o.LanguageCode
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *PublicSubscriptionTranslation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"name",
		"description",
		"subscriptionId",
		"languageCode",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicSubscriptionTranslation := _PublicSubscriptionTranslation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicSubscriptionTranslation)

	if err != nil {
		return err
	}

	*o = PublicSubscriptionTranslation(varPublicSubscriptionTranslation)

	return err
}

type NullablePublicSubscriptionTranslation struct {
	value *PublicSubscriptionTranslation
	isSet bool
}

func (v NullablePublicSubscriptionTranslation) Get() *PublicSubscriptionTranslation {
	return v.value
}

func (v *NullablePublicSubscriptionTranslation) Set(val *PublicSubscriptionTranslation) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicSubscriptionTranslation) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicSubscriptionTranslation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicSubscriptionTranslation(val *PublicSubscriptionTranslation) *NullablePublicSubscriptionTranslation {
	return &NullablePublicSubscriptionTranslation{value: val, isSet: true}
}

func (v NullablePublicSubscriptionTranslation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicSubscriptionTranslation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


