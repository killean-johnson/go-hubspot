/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApiFlowPutRequest - struct for ApiFlowPutRequest
type ApiFlowPutRequest struct {
	ApiContactFlowPutRequest *ApiContactFlowPutRequest
	ApiPlatformFlowPutRequest *ApiPlatformFlowPutRequest
}

// ApiContactFlowPutRequestAsApiFlowPutRequest is a convenience function that returns ApiContactFlowPutRequest wrapped in ApiFlowPutRequest
func ApiContactFlowPutRequestAsApiFlowPutRequest(v *ApiContactFlowPutRequest) ApiFlowPutRequest {
	return ApiFlowPutRequest{
		ApiContactFlowPutRequest: v,
	}
}

// ApiPlatformFlowPutRequestAsApiFlowPutRequest is a convenience function that returns ApiPlatformFlowPutRequest wrapped in ApiFlowPutRequest
func ApiPlatformFlowPutRequestAsApiFlowPutRequest(v *ApiPlatformFlowPutRequest) ApiFlowPutRequest {
	return ApiFlowPutRequest{
		ApiPlatformFlowPutRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApiFlowPutRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApiContactFlowPutRequest
	err = newStrictDecoder(data).Decode(&dst.ApiContactFlowPutRequest)
	if err == nil {
		jsonApiContactFlowPutRequest, _ := json.Marshal(dst.ApiContactFlowPutRequest)
		if string(jsonApiContactFlowPutRequest) == "{}" { // empty struct
			dst.ApiContactFlowPutRequest = nil
		} else {
			if err = validator.Validate(dst.ApiContactFlowPutRequest); err != nil {
				dst.ApiContactFlowPutRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiContactFlowPutRequest = nil
	}

	// try to unmarshal data into ApiPlatformFlowPutRequest
	err = newStrictDecoder(data).Decode(&dst.ApiPlatformFlowPutRequest)
	if err == nil {
		jsonApiPlatformFlowPutRequest, _ := json.Marshal(dst.ApiPlatformFlowPutRequest)
		if string(jsonApiPlatformFlowPutRequest) == "{}" { // empty struct
			dst.ApiPlatformFlowPutRequest = nil
		} else {
			if err = validator.Validate(dst.ApiPlatformFlowPutRequest); err != nil {
				dst.ApiPlatformFlowPutRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiPlatformFlowPutRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApiContactFlowPutRequest = nil
		dst.ApiPlatformFlowPutRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApiFlowPutRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApiFlowPutRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApiFlowPutRequest) MarshalJSON() ([]byte, error) {
	if src.ApiContactFlowPutRequest != nil {
		return json.Marshal(&src.ApiContactFlowPutRequest)
	}

	if src.ApiPlatformFlowPutRequest != nil {
		return json.Marshal(&src.ApiPlatformFlowPutRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApiFlowPutRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApiContactFlowPutRequest != nil {
		return obj.ApiContactFlowPutRequest
	}

	if obj.ApiPlatformFlowPutRequest != nil {
		return obj.ApiPlatformFlowPutRequest
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApiFlowPutRequest) GetActualInstanceValue() (interface{}) {
	if obj.ApiContactFlowPutRequest != nil {
		return *obj.ApiContactFlowPutRequest
	}

	if obj.ApiPlatformFlowPutRequest != nil {
		return *obj.ApiPlatformFlowPutRequest
	}

	// all schemas are nil
	return nil
}

type NullableApiFlowPutRequest struct {
	value *ApiFlowPutRequest
	isSet bool
}

func (v NullableApiFlowPutRequest) Get() *ApiFlowPutRequest {
	return v.value
}

func (v *NullableApiFlowPutRequest) Set(val *ApiFlowPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiFlowPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiFlowPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiFlowPutRequest(val *ApiFlowPutRequest) *NullableApiFlowPutRequest {
	return &NullableApiFlowPutRequest{value: val, isSet: true}
}

func (v NullableApiFlowPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiFlowPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


