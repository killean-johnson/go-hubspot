/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiConnection{}

// ApiConnection struct for ApiConnection
type ApiConnection struct {
	NextActionId string `json:"nextActionId"`
	EdgeType string `json:"edgeType"`
}

type _ApiConnection ApiConnection

// NewApiConnection instantiates a new ApiConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiConnection(nextActionId string, edgeType string) *ApiConnection {
	this := ApiConnection{}
	this.NextActionId = nextActionId
	this.EdgeType = edgeType
	return &this
}

// NewApiConnectionWithDefaults instantiates a new ApiConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiConnectionWithDefaults() *ApiConnection {
	this := ApiConnection{}
	return &this
}

// GetNextActionId returns the NextActionId field value
func (o *ApiConnection) GetNextActionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextActionId
}

// GetNextActionIdOk returns a tuple with the NextActionId field value
// and a boolean to check if the value has been set.
func (o *ApiConnection) GetNextActionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextActionId, true
}

// SetNextActionId sets field value
func (o *ApiConnection) SetNextActionId(v string) {
	o.NextActionId = v
}

// GetEdgeType returns the EdgeType field value
func (o *ApiConnection) GetEdgeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EdgeType
}

// GetEdgeTypeOk returns a tuple with the EdgeType field value
// and a boolean to check if the value has been set.
func (o *ApiConnection) GetEdgeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EdgeType, true
}

// SetEdgeType sets field value
func (o *ApiConnection) SetEdgeType(v string) {
	o.EdgeType = v
}

func (o ApiConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nextActionId"] = o.NextActionId
	toSerialize["edgeType"] = o.EdgeType
	return toSerialize, nil
}

func (o *ApiConnection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nextActionId",
		"edgeType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiConnection := _ApiConnection{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiConnection)

	if err != nil {
		return err
	}

	*o = ApiConnection(varApiConnection)

	return err
}

type NullableApiConnection struct {
	value *ApiConnection
	isSet bool
}

func (v NullableApiConnection) Get() *ApiConnection {
	return v.value
}

func (v *NullableApiConnection) Set(val *ApiConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableApiConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableApiConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiConnection(val *ApiConnection) *NullableApiConnection {
	return &NullableApiConnection{value: val, isSet: true}
}

func (v NullableApiConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


