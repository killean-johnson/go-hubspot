/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiSignatureWebhookAuthSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiSignatureWebhookAuthSettings{}

// ApiSignatureWebhookAuthSettings struct for ApiSignatureWebhookAuthSettings
type ApiSignatureWebhookAuthSettings struct {
	// The appId that this signature will be generated for.
	AppId int32 `json:"appId"`
	// The type of webhook auth settings this is, can be: \"AUTH_KEY\" or \"SIGNATURE\"
	Type string `json:"type"`
}

type _ApiSignatureWebhookAuthSettings ApiSignatureWebhookAuthSettings

// NewApiSignatureWebhookAuthSettings instantiates a new ApiSignatureWebhookAuthSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSignatureWebhookAuthSettings(appId int32, type_ string) *ApiSignatureWebhookAuthSettings {
	this := ApiSignatureWebhookAuthSettings{}
	this.AppId = appId
	this.Type = type_
	return &this
}

// NewApiSignatureWebhookAuthSettingsWithDefaults instantiates a new ApiSignatureWebhookAuthSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSignatureWebhookAuthSettingsWithDefaults() *ApiSignatureWebhookAuthSettings {
	this := ApiSignatureWebhookAuthSettings{}
	var type_ string = "SIGNATURE"
	this.Type = type_
	return &this
}

// GetAppId returns the AppId field value
func (o *ApiSignatureWebhookAuthSettings) GetAppId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *ApiSignatureWebhookAuthSettings) GetAppIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *ApiSignatureWebhookAuthSettings) SetAppId(v int32) {
	o.AppId = v
}

// GetType returns the Type field value
func (o *ApiSignatureWebhookAuthSettings) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiSignatureWebhookAuthSettings) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiSignatureWebhookAuthSettings) SetType(v string) {
	o.Type = v
}

func (o ApiSignatureWebhookAuthSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiSignatureWebhookAuthSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["appId"] = o.AppId
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *ApiSignatureWebhookAuthSettings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"appId",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiSignatureWebhookAuthSettings := _ApiSignatureWebhookAuthSettings{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiSignatureWebhookAuthSettings)

	if err != nil {
		return err
	}

	*o = ApiSignatureWebhookAuthSettings(varApiSignatureWebhookAuthSettings)

	return err
}

type NullableApiSignatureWebhookAuthSettings struct {
	value *ApiSignatureWebhookAuthSettings
	isSet bool
}

func (v NullableApiSignatureWebhookAuthSettings) Get() *ApiSignatureWebhookAuthSettings {
	return v.value
}

func (v *NullableApiSignatureWebhookAuthSettings) Set(val *ApiSignatureWebhookAuthSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSignatureWebhookAuthSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSignatureWebhookAuthSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSignatureWebhookAuthSettings(val *ApiSignatureWebhookAuthSettings) *NullableApiSignatureWebhookAuthSettings {
	return &NullableApiSignatureWebhookAuthSettings{value: val, isSet: true}
}

func (v NullableApiSignatureWebhookAuthSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSignatureWebhookAuthSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


