/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiFlowEmailCampaign type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiFlowEmailCampaign{}

// ApiFlowEmailCampaign struct for ApiFlowEmailCampaign
type ApiFlowEmailCampaign struct {
	EmailContentId string `json:"emailContentId"`
	EmailCampaignId string `json:"emailCampaignId"`
	FlowId string `json:"flowId"`
}

type _ApiFlowEmailCampaign ApiFlowEmailCampaign

// NewApiFlowEmailCampaign instantiates a new ApiFlowEmailCampaign object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiFlowEmailCampaign(emailContentId string, emailCampaignId string, flowId string) *ApiFlowEmailCampaign {
	this := ApiFlowEmailCampaign{}
	this.EmailContentId = emailContentId
	this.EmailCampaignId = emailCampaignId
	this.FlowId = flowId
	return &this
}

// NewApiFlowEmailCampaignWithDefaults instantiates a new ApiFlowEmailCampaign object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiFlowEmailCampaignWithDefaults() *ApiFlowEmailCampaign {
	this := ApiFlowEmailCampaign{}
	return &this
}

// GetEmailContentId returns the EmailContentId field value
func (o *ApiFlowEmailCampaign) GetEmailContentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmailContentId
}

// GetEmailContentIdOk returns a tuple with the EmailContentId field value
// and a boolean to check if the value has been set.
func (o *ApiFlowEmailCampaign) GetEmailContentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailContentId, true
}

// SetEmailContentId sets field value
func (o *ApiFlowEmailCampaign) SetEmailContentId(v string) {
	o.EmailContentId = v
}

// GetEmailCampaignId returns the EmailCampaignId field value
func (o *ApiFlowEmailCampaign) GetEmailCampaignId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmailCampaignId
}

// GetEmailCampaignIdOk returns a tuple with the EmailCampaignId field value
// and a boolean to check if the value has been set.
func (o *ApiFlowEmailCampaign) GetEmailCampaignIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailCampaignId, true
}

// SetEmailCampaignId sets field value
func (o *ApiFlowEmailCampaign) SetEmailCampaignId(v string) {
	o.EmailCampaignId = v
}

// GetFlowId returns the FlowId field value
func (o *ApiFlowEmailCampaign) GetFlowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FlowId
}

// GetFlowIdOk returns a tuple with the FlowId field value
// and a boolean to check if the value has been set.
func (o *ApiFlowEmailCampaign) GetFlowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowId, true
}

// SetFlowId sets field value
func (o *ApiFlowEmailCampaign) SetFlowId(v string) {
	o.FlowId = v
}

func (o ApiFlowEmailCampaign) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiFlowEmailCampaign) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["emailContentId"] = o.EmailContentId
	toSerialize["emailCampaignId"] = o.EmailCampaignId
	toSerialize["flowId"] = o.FlowId
	return toSerialize, nil
}

func (o *ApiFlowEmailCampaign) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"emailContentId",
		"emailCampaignId",
		"flowId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiFlowEmailCampaign := _ApiFlowEmailCampaign{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiFlowEmailCampaign)

	if err != nil {
		return err
	}

	*o = ApiFlowEmailCampaign(varApiFlowEmailCampaign)

	return err
}

type NullableApiFlowEmailCampaign struct {
	value *ApiFlowEmailCampaign
	isSet bool
}

func (v NullableApiFlowEmailCampaign) Get() *ApiFlowEmailCampaign {
	return v.value
}

func (v *NullableApiFlowEmailCampaign) Set(val *ApiFlowEmailCampaign) {
	v.value = val
	v.isSet = true
}

func (v NullableApiFlowEmailCampaign) IsSet() bool {
	return v.isSet
}

func (v *NullableApiFlowEmailCampaign) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiFlowEmailCampaign(val *ApiFlowEmailCampaign) *NullableApiFlowEmailCampaign {
	return &NullableApiFlowEmailCampaign{value: val, isSet: true}
}

func (v NullableApiFlowEmailCampaign) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiFlowEmailCampaign) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


