/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicRangedTimeOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicRangedTimeOperation{}

// PublicRangedTimeOperation struct for PublicRangedTimeOperation
type PublicRangedTimeOperation struct {
	UpperBoundEndpointBehavior *string `json:"upperBoundEndpointBehavior,omitempty"`
	IncludeObjectsWithNoValueSet bool `json:"includeObjectsWithNoValueSet"`
	UpperBoundTimePoint PublicTimePointOperationTimePoint `json:"upperBoundTimePoint"`
	PropertyParser *string `json:"propertyParser,omitempty"`
	OperationType string `json:"operationType"`
	Type string `json:"type"`
	LowerBoundEndpointBehavior *string `json:"lowerBoundEndpointBehavior,omitempty"`
	Operator string `json:"operator"`
	LowerBoundTimePoint PublicTimePointOperationTimePoint `json:"lowerBoundTimePoint"`
}

type _PublicRangedTimeOperation PublicRangedTimeOperation

// NewPublicRangedTimeOperation instantiates a new PublicRangedTimeOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicRangedTimeOperation(includeObjectsWithNoValueSet bool, upperBoundTimePoint PublicTimePointOperationTimePoint, operationType string, type_ string, operator string, lowerBoundTimePoint PublicTimePointOperationTimePoint) *PublicRangedTimeOperation {
	this := PublicRangedTimeOperation{}
	this.IncludeObjectsWithNoValueSet = includeObjectsWithNoValueSet
	this.UpperBoundTimePoint = upperBoundTimePoint
	this.OperationType = operationType
	this.Type = type_
	this.Operator = operator
	this.LowerBoundTimePoint = lowerBoundTimePoint
	return &this
}

// NewPublicRangedTimeOperationWithDefaults instantiates a new PublicRangedTimeOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicRangedTimeOperationWithDefaults() *PublicRangedTimeOperation {
	this := PublicRangedTimeOperation{}
	var type_ string = "TIME_RANGED"
	this.Type = type_
	return &this
}

// GetUpperBoundEndpointBehavior returns the UpperBoundEndpointBehavior field value if set, zero value otherwise.
func (o *PublicRangedTimeOperation) GetUpperBoundEndpointBehavior() string {
	if o == nil || IsNil(o.UpperBoundEndpointBehavior) {
		var ret string
		return ret
	}
	return *o.UpperBoundEndpointBehavior
}

// GetUpperBoundEndpointBehaviorOk returns a tuple with the UpperBoundEndpointBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicRangedTimeOperation) GetUpperBoundEndpointBehaviorOk() (*string, bool) {
	if o == nil || IsNil(o.UpperBoundEndpointBehavior) {
		return nil, false
	}
	return o.UpperBoundEndpointBehavior, true
}

// HasUpperBoundEndpointBehavior returns a boolean if a field has been set.
func (o *PublicRangedTimeOperation) HasUpperBoundEndpointBehavior() bool {
	if o != nil && !IsNil(o.UpperBoundEndpointBehavior) {
		return true
	}

	return false
}

// SetUpperBoundEndpointBehavior gets a reference to the given string and assigns it to the UpperBoundEndpointBehavior field.
func (o *PublicRangedTimeOperation) SetUpperBoundEndpointBehavior(v string) {
	o.UpperBoundEndpointBehavior = &v
}

// GetIncludeObjectsWithNoValueSet returns the IncludeObjectsWithNoValueSet field value
func (o *PublicRangedTimeOperation) GetIncludeObjectsWithNoValueSet() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeObjectsWithNoValueSet
}

// GetIncludeObjectsWithNoValueSetOk returns a tuple with the IncludeObjectsWithNoValueSet field value
// and a boolean to check if the value has been set.
func (o *PublicRangedTimeOperation) GetIncludeObjectsWithNoValueSetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeObjectsWithNoValueSet, true
}

// SetIncludeObjectsWithNoValueSet sets field value
func (o *PublicRangedTimeOperation) SetIncludeObjectsWithNoValueSet(v bool) {
	o.IncludeObjectsWithNoValueSet = v
}

// GetUpperBoundTimePoint returns the UpperBoundTimePoint field value
func (o *PublicRangedTimeOperation) GetUpperBoundTimePoint() PublicTimePointOperationTimePoint {
	if o == nil {
		var ret PublicTimePointOperationTimePoint
		return ret
	}

	return o.UpperBoundTimePoint
}

// GetUpperBoundTimePointOk returns a tuple with the UpperBoundTimePoint field value
// and a boolean to check if the value has been set.
func (o *PublicRangedTimeOperation) GetUpperBoundTimePointOk() (*PublicTimePointOperationTimePoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpperBoundTimePoint, true
}

// SetUpperBoundTimePoint sets field value
func (o *PublicRangedTimeOperation) SetUpperBoundTimePoint(v PublicTimePointOperationTimePoint) {
	o.UpperBoundTimePoint = v
}

// GetPropertyParser returns the PropertyParser field value if set, zero value otherwise.
func (o *PublicRangedTimeOperation) GetPropertyParser() string {
	if o == nil || IsNil(o.PropertyParser) {
		var ret string
		return ret
	}
	return *o.PropertyParser
}

// GetPropertyParserOk returns a tuple with the PropertyParser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicRangedTimeOperation) GetPropertyParserOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyParser) {
		return nil, false
	}
	return o.PropertyParser, true
}

// HasPropertyParser returns a boolean if a field has been set.
func (o *PublicRangedTimeOperation) HasPropertyParser() bool {
	if o != nil && !IsNil(o.PropertyParser) {
		return true
	}

	return false
}

// SetPropertyParser gets a reference to the given string and assigns it to the PropertyParser field.
func (o *PublicRangedTimeOperation) SetPropertyParser(v string) {
	o.PropertyParser = &v
}

// GetOperationType returns the OperationType field value
func (o *PublicRangedTimeOperation) GetOperationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *PublicRangedTimeOperation) GetOperationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *PublicRangedTimeOperation) SetOperationType(v string) {
	o.OperationType = v
}

// GetType returns the Type field value
func (o *PublicRangedTimeOperation) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PublicRangedTimeOperation) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PublicRangedTimeOperation) SetType(v string) {
	o.Type = v
}

// GetLowerBoundEndpointBehavior returns the LowerBoundEndpointBehavior field value if set, zero value otherwise.
func (o *PublicRangedTimeOperation) GetLowerBoundEndpointBehavior() string {
	if o == nil || IsNil(o.LowerBoundEndpointBehavior) {
		var ret string
		return ret
	}
	return *o.LowerBoundEndpointBehavior
}

// GetLowerBoundEndpointBehaviorOk returns a tuple with the LowerBoundEndpointBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicRangedTimeOperation) GetLowerBoundEndpointBehaviorOk() (*string, bool) {
	if o == nil || IsNil(o.LowerBoundEndpointBehavior) {
		return nil, false
	}
	return o.LowerBoundEndpointBehavior, true
}

// HasLowerBoundEndpointBehavior returns a boolean if a field has been set.
func (o *PublicRangedTimeOperation) HasLowerBoundEndpointBehavior() bool {
	if o != nil && !IsNil(o.LowerBoundEndpointBehavior) {
		return true
	}

	return false
}

// SetLowerBoundEndpointBehavior gets a reference to the given string and assigns it to the LowerBoundEndpointBehavior field.
func (o *PublicRangedTimeOperation) SetLowerBoundEndpointBehavior(v string) {
	o.LowerBoundEndpointBehavior = &v
}

// GetOperator returns the Operator field value
func (o *PublicRangedTimeOperation) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *PublicRangedTimeOperation) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *PublicRangedTimeOperation) SetOperator(v string) {
	o.Operator = v
}

// GetLowerBoundTimePoint returns the LowerBoundTimePoint field value
func (o *PublicRangedTimeOperation) GetLowerBoundTimePoint() PublicTimePointOperationTimePoint {
	if o == nil {
		var ret PublicTimePointOperationTimePoint
		return ret
	}

	return o.LowerBoundTimePoint
}

// GetLowerBoundTimePointOk returns a tuple with the LowerBoundTimePoint field value
// and a boolean to check if the value has been set.
func (o *PublicRangedTimeOperation) GetLowerBoundTimePointOk() (*PublicTimePointOperationTimePoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LowerBoundTimePoint, true
}

// SetLowerBoundTimePoint sets field value
func (o *PublicRangedTimeOperation) SetLowerBoundTimePoint(v PublicTimePointOperationTimePoint) {
	o.LowerBoundTimePoint = v
}

func (o PublicRangedTimeOperation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicRangedTimeOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UpperBoundEndpointBehavior) {
		toSerialize["upperBoundEndpointBehavior"] = o.UpperBoundEndpointBehavior
	}
	toSerialize["includeObjectsWithNoValueSet"] = o.IncludeObjectsWithNoValueSet
	toSerialize["upperBoundTimePoint"] = o.UpperBoundTimePoint
	if !IsNil(o.PropertyParser) {
		toSerialize["propertyParser"] = o.PropertyParser
	}
	toSerialize["operationType"] = o.OperationType
	toSerialize["type"] = o.Type
	if !IsNil(o.LowerBoundEndpointBehavior) {
		toSerialize["lowerBoundEndpointBehavior"] = o.LowerBoundEndpointBehavior
	}
	toSerialize["operator"] = o.Operator
	toSerialize["lowerBoundTimePoint"] = o.LowerBoundTimePoint
	return toSerialize, nil
}

func (o *PublicRangedTimeOperation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"includeObjectsWithNoValueSet",
		"upperBoundTimePoint",
		"operationType",
		"type",
		"operator",
		"lowerBoundTimePoint",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicRangedTimeOperation := _PublicRangedTimeOperation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicRangedTimeOperation)

	if err != nil {
		return err
	}

	*o = PublicRangedTimeOperation(varPublicRangedTimeOperation)

	return err
}

type NullablePublicRangedTimeOperation struct {
	value *PublicRangedTimeOperation
	isSet bool
}

func (v NullablePublicRangedTimeOperation) Get() *PublicRangedTimeOperation {
	return v.value
}

func (v *NullablePublicRangedTimeOperation) Set(val *PublicRangedTimeOperation) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicRangedTimeOperation) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicRangedTimeOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicRangedTimeOperation(val *PublicRangedTimeOperation) *NullablePublicRangedTimeOperation {
	return &NullablePublicRangedTimeOperation{value: val, isSet: true}
}

func (v NullablePublicRangedTimeOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicRangedTimeOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


