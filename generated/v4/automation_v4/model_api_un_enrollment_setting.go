/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiUnEnrollmentSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiUnEnrollmentSetting{}

// ApiUnEnrollmentSetting struct for ApiUnEnrollmentSetting
type ApiUnEnrollmentSetting struct {
	// The IDs of the flows to unenroll an object in if it's enrolled in this flow.
	FlowIds []string `json:"flowIds"`
	// The type of unenrollment to perform:  \"ALL\" - unenroll the object from all other flows  \"SELECTIVE\" - only unenroll the object from the flows specified in `flowIds`
	Type string `json:"type"`
}

type _ApiUnEnrollmentSetting ApiUnEnrollmentSetting

// NewApiUnEnrollmentSetting instantiates a new ApiUnEnrollmentSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiUnEnrollmentSetting(flowIds []string, type_ string) *ApiUnEnrollmentSetting {
	this := ApiUnEnrollmentSetting{}
	this.FlowIds = flowIds
	this.Type = type_
	return &this
}

// NewApiUnEnrollmentSettingWithDefaults instantiates a new ApiUnEnrollmentSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiUnEnrollmentSettingWithDefaults() *ApiUnEnrollmentSetting {
	this := ApiUnEnrollmentSetting{}
	return &this
}

// GetFlowIds returns the FlowIds field value
func (o *ApiUnEnrollmentSetting) GetFlowIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.FlowIds
}

// GetFlowIdsOk returns a tuple with the FlowIds field value
// and a boolean to check if the value has been set.
func (o *ApiUnEnrollmentSetting) GetFlowIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FlowIds, true
}

// SetFlowIds sets field value
func (o *ApiUnEnrollmentSetting) SetFlowIds(v []string) {
	o.FlowIds = v
}

// GetType returns the Type field value
func (o *ApiUnEnrollmentSetting) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiUnEnrollmentSetting) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiUnEnrollmentSetting) SetType(v string) {
	o.Type = v
}

func (o ApiUnEnrollmentSetting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiUnEnrollmentSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["flowIds"] = o.FlowIds
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *ApiUnEnrollmentSetting) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"flowIds",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiUnEnrollmentSetting := _ApiUnEnrollmentSetting{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiUnEnrollmentSetting)

	if err != nil {
		return err
	}

	*o = ApiUnEnrollmentSetting(varApiUnEnrollmentSetting)

	return err
}

type NullableApiUnEnrollmentSetting struct {
	value *ApiUnEnrollmentSetting
	isSet bool
}

func (v NullableApiUnEnrollmentSetting) Get() *ApiUnEnrollmentSetting {
	return v.value
}

func (v *NullableApiUnEnrollmentSetting) Set(val *ApiUnEnrollmentSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableApiUnEnrollmentSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableApiUnEnrollmentSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiUnEnrollmentSetting(val *ApiUnEnrollmentSetting) *NullableApiUnEnrollmentSetting {
	return &NullableApiUnEnrollmentSetting{value: val, isSet: true}
}

func (v NullableApiUnEnrollmentSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiUnEnrollmentSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


