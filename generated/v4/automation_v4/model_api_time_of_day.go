/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiTimeOfDay type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTimeOfDay{}

// ApiTimeOfDay struct for ApiTimeOfDay
type ApiTimeOfDay struct {
	// 
	Hour int32 `json:"hour"`
	Minute int32 `json:"minute"`
}

type _ApiTimeOfDay ApiTimeOfDay

// NewApiTimeOfDay instantiates a new ApiTimeOfDay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTimeOfDay(hour int32, minute int32) *ApiTimeOfDay {
	this := ApiTimeOfDay{}
	this.Hour = hour
	this.Minute = minute
	return &this
}

// NewApiTimeOfDayWithDefaults instantiates a new ApiTimeOfDay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTimeOfDayWithDefaults() *ApiTimeOfDay {
	this := ApiTimeOfDay{}
	return &this
}

// GetHour returns the Hour field value
func (o *ApiTimeOfDay) GetHour() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Hour
}

// GetHourOk returns a tuple with the Hour field value
// and a boolean to check if the value has been set.
func (o *ApiTimeOfDay) GetHourOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hour, true
}

// SetHour sets field value
func (o *ApiTimeOfDay) SetHour(v int32) {
	o.Hour = v
}

// GetMinute returns the Minute field value
func (o *ApiTimeOfDay) GetMinute() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Minute
}

// GetMinuteOk returns a tuple with the Minute field value
// and a boolean to check if the value has been set.
func (o *ApiTimeOfDay) GetMinuteOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Minute, true
}

// SetMinute sets field value
func (o *ApiTimeOfDay) SetMinute(v int32) {
	o.Minute = v
}

func (o ApiTimeOfDay) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTimeOfDay) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hour"] = o.Hour
	toSerialize["minute"] = o.Minute
	return toSerialize, nil
}

func (o *ApiTimeOfDay) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hour",
		"minute",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiTimeOfDay := _ApiTimeOfDay{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiTimeOfDay)

	if err != nil {
		return err
	}

	*o = ApiTimeOfDay(varApiTimeOfDay)

	return err
}

type NullableApiTimeOfDay struct {
	value *ApiTimeOfDay
	isSet bool
}

func (v NullableApiTimeOfDay) Get() *ApiTimeOfDay {
	return v.value
}

func (v *NullableApiTimeOfDay) Set(val *ApiTimeOfDay) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTimeOfDay) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTimeOfDay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTimeOfDay(val *ApiTimeOfDay) *NullableApiTimeOfDay {
	return &NullableApiTimeOfDay{value: val, isSet: true}
}

func (v NullableApiTimeOfDay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTimeOfDay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


