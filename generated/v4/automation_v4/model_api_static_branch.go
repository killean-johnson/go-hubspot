/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiStaticBranch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiStaticBranch{}

// ApiStaticBranch struct for ApiStaticBranch
type ApiStaticBranch struct {
	// If value to check for. If the value of the `inputValue` matches this `branchValue` than this `connection` will get traversed.
	BranchValue string `json:"branchValue"`
	Connection *ApiConnection `json:"connection,omitempty"`
}

type _ApiStaticBranch ApiStaticBranch

// NewApiStaticBranch instantiates a new ApiStaticBranch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiStaticBranch(branchValue string) *ApiStaticBranch {
	this := ApiStaticBranch{}
	this.BranchValue = branchValue
	return &this
}

// NewApiStaticBranchWithDefaults instantiates a new ApiStaticBranch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiStaticBranchWithDefaults() *ApiStaticBranch {
	this := ApiStaticBranch{}
	return &this
}

// GetBranchValue returns the BranchValue field value
func (o *ApiStaticBranch) GetBranchValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BranchValue
}

// GetBranchValueOk returns a tuple with the BranchValue field value
// and a boolean to check if the value has been set.
func (o *ApiStaticBranch) GetBranchValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BranchValue, true
}

// SetBranchValue sets field value
func (o *ApiStaticBranch) SetBranchValue(v string) {
	o.BranchValue = v
}

// GetConnection returns the Connection field value if set, zero value otherwise.
func (o *ApiStaticBranch) GetConnection() ApiConnection {
	if o == nil || IsNil(o.Connection) {
		var ret ApiConnection
		return ret
	}
	return *o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStaticBranch) GetConnectionOk() (*ApiConnection, bool) {
	if o == nil || IsNil(o.Connection) {
		return nil, false
	}
	return o.Connection, true
}

// HasConnection returns a boolean if a field has been set.
func (o *ApiStaticBranch) HasConnection() bool {
	if o != nil && !IsNil(o.Connection) {
		return true
	}

	return false
}

// SetConnection gets a reference to the given ApiConnection and assigns it to the Connection field.
func (o *ApiStaticBranch) SetConnection(v ApiConnection) {
	o.Connection = &v
}

func (o ApiStaticBranch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiStaticBranch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["branchValue"] = o.BranchValue
	if !IsNil(o.Connection) {
		toSerialize["connection"] = o.Connection
	}
	return toSerialize, nil
}

func (o *ApiStaticBranch) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"branchValue",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiStaticBranch := _ApiStaticBranch{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiStaticBranch)

	if err != nil {
		return err
	}

	*o = ApiStaticBranch(varApiStaticBranch)

	return err
}

type NullableApiStaticBranch struct {
	value *ApiStaticBranch
	isSet bool
}

func (v NullableApiStaticBranch) Get() *ApiStaticBranch {
	return v.value
}

func (v *NullableApiStaticBranch) Set(val *ApiStaticBranch) {
	v.value = val
	v.isSet = true
}

func (v NullableApiStaticBranch) IsSet() bool {
	return v.isSet
}

func (v *NullableApiStaticBranch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiStaticBranch(val *ApiStaticBranch) *NullableApiStaticBranch {
	return &NullableApiStaticBranch{value: val, isSet: true}
}

func (v NullableApiStaticBranch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiStaticBranch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


