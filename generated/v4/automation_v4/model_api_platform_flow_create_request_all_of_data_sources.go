/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApiPlatformFlowCreateRequestAllOfDataSources - struct for ApiPlatformFlowCreateRequestAllOfDataSources
type ApiPlatformFlowCreateRequestAllOfDataSources struct {
	ApiAssociationDataSource *ApiAssociationDataSource
	ApiAssociationTimestampDataSource *ApiAssociationTimestampDataSource
}

// ApiAssociationDataSourceAsApiPlatformFlowCreateRequestAllOfDataSources is a convenience function that returns ApiAssociationDataSource wrapped in ApiPlatformFlowCreateRequestAllOfDataSources
func ApiAssociationDataSourceAsApiPlatformFlowCreateRequestAllOfDataSources(v *ApiAssociationDataSource) ApiPlatformFlowCreateRequestAllOfDataSources {
	return ApiPlatformFlowCreateRequestAllOfDataSources{
		ApiAssociationDataSource: v,
	}
}

// ApiAssociationTimestampDataSourceAsApiPlatformFlowCreateRequestAllOfDataSources is a convenience function that returns ApiAssociationTimestampDataSource wrapped in ApiPlatformFlowCreateRequestAllOfDataSources
func ApiAssociationTimestampDataSourceAsApiPlatformFlowCreateRequestAllOfDataSources(v *ApiAssociationTimestampDataSource) ApiPlatformFlowCreateRequestAllOfDataSources {
	return ApiPlatformFlowCreateRequestAllOfDataSources{
		ApiAssociationTimestampDataSource: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApiPlatformFlowCreateRequestAllOfDataSources) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApiAssociationDataSource
	err = newStrictDecoder(data).Decode(&dst.ApiAssociationDataSource)
	if err == nil {
		jsonApiAssociationDataSource, _ := json.Marshal(dst.ApiAssociationDataSource)
		if string(jsonApiAssociationDataSource) == "{}" { // empty struct
			dst.ApiAssociationDataSource = nil
		} else {
			if err = validator.Validate(dst.ApiAssociationDataSource); err != nil {
				dst.ApiAssociationDataSource = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiAssociationDataSource = nil
	}

	// try to unmarshal data into ApiAssociationTimestampDataSource
	err = newStrictDecoder(data).Decode(&dst.ApiAssociationTimestampDataSource)
	if err == nil {
		jsonApiAssociationTimestampDataSource, _ := json.Marshal(dst.ApiAssociationTimestampDataSource)
		if string(jsonApiAssociationTimestampDataSource) == "{}" { // empty struct
			dst.ApiAssociationTimestampDataSource = nil
		} else {
			if err = validator.Validate(dst.ApiAssociationTimestampDataSource); err != nil {
				dst.ApiAssociationTimestampDataSource = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiAssociationTimestampDataSource = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApiAssociationDataSource = nil
		dst.ApiAssociationTimestampDataSource = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApiPlatformFlowCreateRequestAllOfDataSources)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApiPlatformFlowCreateRequestAllOfDataSources)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApiPlatformFlowCreateRequestAllOfDataSources) MarshalJSON() ([]byte, error) {
	if src.ApiAssociationDataSource != nil {
		return json.Marshal(&src.ApiAssociationDataSource)
	}

	if src.ApiAssociationTimestampDataSource != nil {
		return json.Marshal(&src.ApiAssociationTimestampDataSource)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApiPlatformFlowCreateRequestAllOfDataSources) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApiAssociationDataSource != nil {
		return obj.ApiAssociationDataSource
	}

	if obj.ApiAssociationTimestampDataSource != nil {
		return obj.ApiAssociationTimestampDataSource
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApiPlatformFlowCreateRequestAllOfDataSources) GetActualInstanceValue() (interface{}) {
	if obj.ApiAssociationDataSource != nil {
		return *obj.ApiAssociationDataSource
	}

	if obj.ApiAssociationTimestampDataSource != nil {
		return *obj.ApiAssociationTimestampDataSource
	}

	// all schemas are nil
	return nil
}

type NullableApiPlatformFlowCreateRequestAllOfDataSources struct {
	value *ApiPlatformFlowCreateRequestAllOfDataSources
	isSet bool
}

func (v NullableApiPlatformFlowCreateRequestAllOfDataSources) Get() *ApiPlatformFlowCreateRequestAllOfDataSources {
	return v.value
}

func (v *NullableApiPlatformFlowCreateRequestAllOfDataSources) Set(val *ApiPlatformFlowCreateRequestAllOfDataSources) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPlatformFlowCreateRequestAllOfDataSources) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPlatformFlowCreateRequestAllOfDataSources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPlatformFlowCreateRequestAllOfDataSources(val *ApiPlatformFlowCreateRequestAllOfDataSources) *NullableApiPlatformFlowCreateRequestAllOfDataSources {
	return &NullableApiPlatformFlowCreateRequestAllOfDataSources{value: val, isSet: true}
}

func (v NullableApiPlatformFlowCreateRequestAllOfDataSources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPlatformFlowCreateRequestAllOfDataSources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


