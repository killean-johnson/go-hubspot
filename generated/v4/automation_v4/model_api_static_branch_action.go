/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiStaticBranchAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiStaticBranchAction{}

// ApiStaticBranchAction struct for ApiStaticBranchAction
type ApiStaticBranchAction struct {
	StaticBranches []ApiStaticBranch `json:"staticBranches"`
	// The name of the default branch, the branch that gets executed if `inputValue` does not match any of the `staticBranches`.
	DefaultBranchName *string `json:"defaultBranchName,omitempty"`
	DefaultBranch *ApiConnection `json:"defaultBranch,omitempty"`
	InputValue ApiStaticBranchActionInputValue `json:"inputValue"`
	// The ID for this action.
	ActionId string `json:"actionId"`
	// The type of action this is, can be: \"STATIC_BRANCH\", \"LIST_BRANCH\", \"AB_TEST_BRANCH\", \"CUSTOM_CODE\", \"WEBHOOK\", or \"SINGLE_CONNECTION\"
	Type string `json:"type"`
}

type _ApiStaticBranchAction ApiStaticBranchAction

// NewApiStaticBranchAction instantiates a new ApiStaticBranchAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiStaticBranchAction(staticBranches []ApiStaticBranch, inputValue ApiStaticBranchActionInputValue, actionId string, type_ string) *ApiStaticBranchAction {
	this := ApiStaticBranchAction{}
	this.StaticBranches = staticBranches
	this.InputValue = inputValue
	this.ActionId = actionId
	this.Type = type_
	return &this
}

// NewApiStaticBranchActionWithDefaults instantiates a new ApiStaticBranchAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiStaticBranchActionWithDefaults() *ApiStaticBranchAction {
	this := ApiStaticBranchAction{}
	var type_ string = "STATIC_BRANCH"
	this.Type = type_
	return &this
}

// GetStaticBranches returns the StaticBranches field value
func (o *ApiStaticBranchAction) GetStaticBranches() []ApiStaticBranch {
	if o == nil {
		var ret []ApiStaticBranch
		return ret
	}

	return o.StaticBranches
}

// GetStaticBranchesOk returns a tuple with the StaticBranches field value
// and a boolean to check if the value has been set.
func (o *ApiStaticBranchAction) GetStaticBranchesOk() ([]ApiStaticBranch, bool) {
	if o == nil {
		return nil, false
	}
	return o.StaticBranches, true
}

// SetStaticBranches sets field value
func (o *ApiStaticBranchAction) SetStaticBranches(v []ApiStaticBranch) {
	o.StaticBranches = v
}

// GetDefaultBranchName returns the DefaultBranchName field value if set, zero value otherwise.
func (o *ApiStaticBranchAction) GetDefaultBranchName() string {
	if o == nil || IsNil(o.DefaultBranchName) {
		var ret string
		return ret
	}
	return *o.DefaultBranchName
}

// GetDefaultBranchNameOk returns a tuple with the DefaultBranchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStaticBranchAction) GetDefaultBranchNameOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultBranchName) {
		return nil, false
	}
	return o.DefaultBranchName, true
}

// HasDefaultBranchName returns a boolean if a field has been set.
func (o *ApiStaticBranchAction) HasDefaultBranchName() bool {
	if o != nil && !IsNil(o.DefaultBranchName) {
		return true
	}

	return false
}

// SetDefaultBranchName gets a reference to the given string and assigns it to the DefaultBranchName field.
func (o *ApiStaticBranchAction) SetDefaultBranchName(v string) {
	o.DefaultBranchName = &v
}

// GetDefaultBranch returns the DefaultBranch field value if set, zero value otherwise.
func (o *ApiStaticBranchAction) GetDefaultBranch() ApiConnection {
	if o == nil || IsNil(o.DefaultBranch) {
		var ret ApiConnection
		return ret
	}
	return *o.DefaultBranch
}

// GetDefaultBranchOk returns a tuple with the DefaultBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStaticBranchAction) GetDefaultBranchOk() (*ApiConnection, bool) {
	if o == nil || IsNil(o.DefaultBranch) {
		return nil, false
	}
	return o.DefaultBranch, true
}

// HasDefaultBranch returns a boolean if a field has been set.
func (o *ApiStaticBranchAction) HasDefaultBranch() bool {
	if o != nil && !IsNil(o.DefaultBranch) {
		return true
	}

	return false
}

// SetDefaultBranch gets a reference to the given ApiConnection and assigns it to the DefaultBranch field.
func (o *ApiStaticBranchAction) SetDefaultBranch(v ApiConnection) {
	o.DefaultBranch = &v
}

// GetInputValue returns the InputValue field value
func (o *ApiStaticBranchAction) GetInputValue() ApiStaticBranchActionInputValue {
	if o == nil {
		var ret ApiStaticBranchActionInputValue
		return ret
	}

	return o.InputValue
}

// GetInputValueOk returns a tuple with the InputValue field value
// and a boolean to check if the value has been set.
func (o *ApiStaticBranchAction) GetInputValueOk() (*ApiStaticBranchActionInputValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputValue, true
}

// SetInputValue sets field value
func (o *ApiStaticBranchAction) SetInputValue(v ApiStaticBranchActionInputValue) {
	o.InputValue = v
}

// GetActionId returns the ActionId field value
func (o *ApiStaticBranchAction) GetActionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionId
}

// GetActionIdOk returns a tuple with the ActionId field value
// and a boolean to check if the value has been set.
func (o *ApiStaticBranchAction) GetActionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionId, true
}

// SetActionId sets field value
func (o *ApiStaticBranchAction) SetActionId(v string) {
	o.ActionId = v
}

// GetType returns the Type field value
func (o *ApiStaticBranchAction) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiStaticBranchAction) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiStaticBranchAction) SetType(v string) {
	o.Type = v
}

func (o ApiStaticBranchAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiStaticBranchAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["staticBranches"] = o.StaticBranches
	if !IsNil(o.DefaultBranchName) {
		toSerialize["defaultBranchName"] = o.DefaultBranchName
	}
	if !IsNil(o.DefaultBranch) {
		toSerialize["defaultBranch"] = o.DefaultBranch
	}
	toSerialize["inputValue"] = o.InputValue
	toSerialize["actionId"] = o.ActionId
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *ApiStaticBranchAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"staticBranches",
		"inputValue",
		"actionId",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiStaticBranchAction := _ApiStaticBranchAction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiStaticBranchAction)

	if err != nil {
		return err
	}

	*o = ApiStaticBranchAction(varApiStaticBranchAction)

	return err
}

type NullableApiStaticBranchAction struct {
	value *ApiStaticBranchAction
	isSet bool
}

func (v NullableApiStaticBranchAction) Get() *ApiStaticBranchAction {
	return v.value
}

func (v *NullableApiStaticBranchAction) Set(val *ApiStaticBranchAction) {
	v.value = val
	v.isSet = true
}

func (v NullableApiStaticBranchAction) IsSet() bool {
	return v.isSet
}

func (v *NullableApiStaticBranchAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiStaticBranchAction(val *ApiStaticBranchAction) *NullableApiStaticBranchAction {
	return &NullableApiStaticBranchAction{value: val, isSet: true}
}

func (v NullableApiStaticBranchAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiStaticBranchAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


