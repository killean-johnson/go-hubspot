/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApiFlowBatchMigrationInputInputsInner - struct for ApiFlowBatchMigrationInputInputsInner
type ApiFlowBatchMigrationInputInputsInner struct {
	ApiFlowBatchFetchMigrationFlowIdCoordinate *ApiFlowBatchFetchMigrationFlowIdCoordinate
	ApiFlowBatchFetchMigrationWorkflowIdCoordinate *ApiFlowBatchFetchMigrationWorkflowIdCoordinate
}

// ApiFlowBatchFetchMigrationFlowIdCoordinateAsApiFlowBatchMigrationInputInputsInner is a convenience function that returns ApiFlowBatchFetchMigrationFlowIdCoordinate wrapped in ApiFlowBatchMigrationInputInputsInner
func ApiFlowBatchFetchMigrationFlowIdCoordinateAsApiFlowBatchMigrationInputInputsInner(v *ApiFlowBatchFetchMigrationFlowIdCoordinate) ApiFlowBatchMigrationInputInputsInner {
	return ApiFlowBatchMigrationInputInputsInner{
		ApiFlowBatchFetchMigrationFlowIdCoordinate: v,
	}
}

// ApiFlowBatchFetchMigrationWorkflowIdCoordinateAsApiFlowBatchMigrationInputInputsInner is a convenience function that returns ApiFlowBatchFetchMigrationWorkflowIdCoordinate wrapped in ApiFlowBatchMigrationInputInputsInner
func ApiFlowBatchFetchMigrationWorkflowIdCoordinateAsApiFlowBatchMigrationInputInputsInner(v *ApiFlowBatchFetchMigrationWorkflowIdCoordinate) ApiFlowBatchMigrationInputInputsInner {
	return ApiFlowBatchMigrationInputInputsInner{
		ApiFlowBatchFetchMigrationWorkflowIdCoordinate: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApiFlowBatchMigrationInputInputsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApiFlowBatchFetchMigrationFlowIdCoordinate
	err = newStrictDecoder(data).Decode(&dst.ApiFlowBatchFetchMigrationFlowIdCoordinate)
	if err == nil {
		jsonApiFlowBatchFetchMigrationFlowIdCoordinate, _ := json.Marshal(dst.ApiFlowBatchFetchMigrationFlowIdCoordinate)
		if string(jsonApiFlowBatchFetchMigrationFlowIdCoordinate) == "{}" { // empty struct
			dst.ApiFlowBatchFetchMigrationFlowIdCoordinate = nil
		} else {
			if err = validator.Validate(dst.ApiFlowBatchFetchMigrationFlowIdCoordinate); err != nil {
				dst.ApiFlowBatchFetchMigrationFlowIdCoordinate = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiFlowBatchFetchMigrationFlowIdCoordinate = nil
	}

	// try to unmarshal data into ApiFlowBatchFetchMigrationWorkflowIdCoordinate
	err = newStrictDecoder(data).Decode(&dst.ApiFlowBatchFetchMigrationWorkflowIdCoordinate)
	if err == nil {
		jsonApiFlowBatchFetchMigrationWorkflowIdCoordinate, _ := json.Marshal(dst.ApiFlowBatchFetchMigrationWorkflowIdCoordinate)
		if string(jsonApiFlowBatchFetchMigrationWorkflowIdCoordinate) == "{}" { // empty struct
			dst.ApiFlowBatchFetchMigrationWorkflowIdCoordinate = nil
		} else {
			if err = validator.Validate(dst.ApiFlowBatchFetchMigrationWorkflowIdCoordinate); err != nil {
				dst.ApiFlowBatchFetchMigrationWorkflowIdCoordinate = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiFlowBatchFetchMigrationWorkflowIdCoordinate = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApiFlowBatchFetchMigrationFlowIdCoordinate = nil
		dst.ApiFlowBatchFetchMigrationWorkflowIdCoordinate = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApiFlowBatchMigrationInputInputsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApiFlowBatchMigrationInputInputsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApiFlowBatchMigrationInputInputsInner) MarshalJSON() ([]byte, error) {
	if src.ApiFlowBatchFetchMigrationFlowIdCoordinate != nil {
		return json.Marshal(&src.ApiFlowBatchFetchMigrationFlowIdCoordinate)
	}

	if src.ApiFlowBatchFetchMigrationWorkflowIdCoordinate != nil {
		return json.Marshal(&src.ApiFlowBatchFetchMigrationWorkflowIdCoordinate)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApiFlowBatchMigrationInputInputsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApiFlowBatchFetchMigrationFlowIdCoordinate != nil {
		return obj.ApiFlowBatchFetchMigrationFlowIdCoordinate
	}

	if obj.ApiFlowBatchFetchMigrationWorkflowIdCoordinate != nil {
		return obj.ApiFlowBatchFetchMigrationWorkflowIdCoordinate
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApiFlowBatchMigrationInputInputsInner) GetActualInstanceValue() (interface{}) {
	if obj.ApiFlowBatchFetchMigrationFlowIdCoordinate != nil {
		return *obj.ApiFlowBatchFetchMigrationFlowIdCoordinate
	}

	if obj.ApiFlowBatchFetchMigrationWorkflowIdCoordinate != nil {
		return *obj.ApiFlowBatchFetchMigrationWorkflowIdCoordinate
	}

	// all schemas are nil
	return nil
}

type NullableApiFlowBatchMigrationInputInputsInner struct {
	value *ApiFlowBatchMigrationInputInputsInner
	isSet bool
}

func (v NullableApiFlowBatchMigrationInputInputsInner) Get() *ApiFlowBatchMigrationInputInputsInner {
	return v.value
}

func (v *NullableApiFlowBatchMigrationInputInputsInner) Set(val *ApiFlowBatchMigrationInputInputsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiFlowBatchMigrationInputInputsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiFlowBatchMigrationInputInputsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiFlowBatchMigrationInputInputsInner(val *ApiFlowBatchMigrationInputInputsInner) *NullableApiFlowBatchMigrationInputInputsInner {
	return &NullableApiFlowBatchMigrationInputInputsInner{value: val, isSet: true}
}

func (v NullableApiFlowBatchMigrationInputInputsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiFlowBatchMigrationInputInputsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


