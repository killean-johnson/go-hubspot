/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiEventBasedEnrollmentCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiEventBasedEnrollmentCriteria{}

// ApiEventBasedEnrollmentCriteria struct for ApiEventBasedEnrollmentCriteria
type ApiEventBasedEnrollmentCriteria struct {
	RefinementCriteria *ApiEventBasedEnrollmentCriteriaRefinementCriteria `json:"refinementCriteria,omitempty"`
	// If you want to listen to list-membership events (an object was added to a list, an object was removed from a list) you need to use this `listMembershipFilterBranches` property instead of `eventFilterBranches`, because list membership events work differently.
	ListMembershipFilterBranches []ApiPlatformFlowPutRequestAllOfSuppressionFilterBranch `json:"listMembershipFilterBranches"`
	EventFilterBranches []PublicUnifiedEventsFilterBranch `json:"eventFilterBranches"`
	// Whether or not the same object can enroll in this workflow twice.
	ShouldReEnroll bool `json:"shouldReEnroll"`
	// The type of enrollment criteria this is, this can be \"LIST_BASED\", \"EVENT_BASED\", or \"MANUAL\".
	Type string `json:"type"`
}

type _ApiEventBasedEnrollmentCriteria ApiEventBasedEnrollmentCriteria

// NewApiEventBasedEnrollmentCriteria instantiates a new ApiEventBasedEnrollmentCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiEventBasedEnrollmentCriteria(listMembershipFilterBranches []ApiPlatformFlowPutRequestAllOfSuppressionFilterBranch, eventFilterBranches []PublicUnifiedEventsFilterBranch, shouldReEnroll bool, type_ string) *ApiEventBasedEnrollmentCriteria {
	this := ApiEventBasedEnrollmentCriteria{}
	this.ListMembershipFilterBranches = listMembershipFilterBranches
	this.EventFilterBranches = eventFilterBranches
	this.ShouldReEnroll = shouldReEnroll
	this.Type = type_
	return &this
}

// NewApiEventBasedEnrollmentCriteriaWithDefaults instantiates a new ApiEventBasedEnrollmentCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiEventBasedEnrollmentCriteriaWithDefaults() *ApiEventBasedEnrollmentCriteria {
	this := ApiEventBasedEnrollmentCriteria{}
	var type_ string = "EVENT_BASED"
	this.Type = type_
	return &this
}

// GetRefinementCriteria returns the RefinementCriteria field value if set, zero value otherwise.
func (o *ApiEventBasedEnrollmentCriteria) GetRefinementCriteria() ApiEventBasedEnrollmentCriteriaRefinementCriteria {
	if o == nil || IsNil(o.RefinementCriteria) {
		var ret ApiEventBasedEnrollmentCriteriaRefinementCriteria
		return ret
	}
	return *o.RefinementCriteria
}

// GetRefinementCriteriaOk returns a tuple with the RefinementCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEventBasedEnrollmentCriteria) GetRefinementCriteriaOk() (*ApiEventBasedEnrollmentCriteriaRefinementCriteria, bool) {
	if o == nil || IsNil(o.RefinementCriteria) {
		return nil, false
	}
	return o.RefinementCriteria, true
}

// HasRefinementCriteria returns a boolean if a field has been set.
func (o *ApiEventBasedEnrollmentCriteria) HasRefinementCriteria() bool {
	if o != nil && !IsNil(o.RefinementCriteria) {
		return true
	}

	return false
}

// SetRefinementCriteria gets a reference to the given ApiEventBasedEnrollmentCriteriaRefinementCriteria and assigns it to the RefinementCriteria field.
func (o *ApiEventBasedEnrollmentCriteria) SetRefinementCriteria(v ApiEventBasedEnrollmentCriteriaRefinementCriteria) {
	o.RefinementCriteria = &v
}

// GetListMembershipFilterBranches returns the ListMembershipFilterBranches field value
func (o *ApiEventBasedEnrollmentCriteria) GetListMembershipFilterBranches() []ApiPlatformFlowPutRequestAllOfSuppressionFilterBranch {
	if o == nil {
		var ret []ApiPlatformFlowPutRequestAllOfSuppressionFilterBranch
		return ret
	}

	return o.ListMembershipFilterBranches
}

// GetListMembershipFilterBranchesOk returns a tuple with the ListMembershipFilterBranches field value
// and a boolean to check if the value has been set.
func (o *ApiEventBasedEnrollmentCriteria) GetListMembershipFilterBranchesOk() ([]ApiPlatformFlowPutRequestAllOfSuppressionFilterBranch, bool) {
	if o == nil {
		return nil, false
	}
	return o.ListMembershipFilterBranches, true
}

// SetListMembershipFilterBranches sets field value
func (o *ApiEventBasedEnrollmentCriteria) SetListMembershipFilterBranches(v []ApiPlatformFlowPutRequestAllOfSuppressionFilterBranch) {
	o.ListMembershipFilterBranches = v
}

// GetEventFilterBranches returns the EventFilterBranches field value
func (o *ApiEventBasedEnrollmentCriteria) GetEventFilterBranches() []PublicUnifiedEventsFilterBranch {
	if o == nil {
		var ret []PublicUnifiedEventsFilterBranch
		return ret
	}

	return o.EventFilterBranches
}

// GetEventFilterBranchesOk returns a tuple with the EventFilterBranches field value
// and a boolean to check if the value has been set.
func (o *ApiEventBasedEnrollmentCriteria) GetEventFilterBranchesOk() ([]PublicUnifiedEventsFilterBranch, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventFilterBranches, true
}

// SetEventFilterBranches sets field value
func (o *ApiEventBasedEnrollmentCriteria) SetEventFilterBranches(v []PublicUnifiedEventsFilterBranch) {
	o.EventFilterBranches = v
}

// GetShouldReEnroll returns the ShouldReEnroll field value
func (o *ApiEventBasedEnrollmentCriteria) GetShouldReEnroll() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShouldReEnroll
}

// GetShouldReEnrollOk returns a tuple with the ShouldReEnroll field value
// and a boolean to check if the value has been set.
func (o *ApiEventBasedEnrollmentCriteria) GetShouldReEnrollOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShouldReEnroll, true
}

// SetShouldReEnroll sets field value
func (o *ApiEventBasedEnrollmentCriteria) SetShouldReEnroll(v bool) {
	o.ShouldReEnroll = v
}

// GetType returns the Type field value
func (o *ApiEventBasedEnrollmentCriteria) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiEventBasedEnrollmentCriteria) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiEventBasedEnrollmentCriteria) SetType(v string) {
	o.Type = v
}

func (o ApiEventBasedEnrollmentCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiEventBasedEnrollmentCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RefinementCriteria) {
		toSerialize["refinementCriteria"] = o.RefinementCriteria
	}
	toSerialize["listMembershipFilterBranches"] = o.ListMembershipFilterBranches
	toSerialize["eventFilterBranches"] = o.EventFilterBranches
	toSerialize["shouldReEnroll"] = o.ShouldReEnroll
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *ApiEventBasedEnrollmentCriteria) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"listMembershipFilterBranches",
		"eventFilterBranches",
		"shouldReEnroll",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiEventBasedEnrollmentCriteria := _ApiEventBasedEnrollmentCriteria{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiEventBasedEnrollmentCriteria)

	if err != nil {
		return err
	}

	*o = ApiEventBasedEnrollmentCriteria(varApiEventBasedEnrollmentCriteria)

	return err
}

type NullableApiEventBasedEnrollmentCriteria struct {
	value *ApiEventBasedEnrollmentCriteria
	isSet bool
}

func (v NullableApiEventBasedEnrollmentCriteria) Get() *ApiEventBasedEnrollmentCriteria {
	return v.value
}

func (v *NullableApiEventBasedEnrollmentCriteria) Set(val *ApiEventBasedEnrollmentCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableApiEventBasedEnrollmentCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableApiEventBasedEnrollmentCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiEventBasedEnrollmentCriteria(val *ApiEventBasedEnrollmentCriteria) *NullableApiEventBasedEnrollmentCriteria {
	return &NullableApiEventBasedEnrollmentCriteria{value: val, isSet: true}
}

func (v NullableApiEventBasedEnrollmentCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiEventBasedEnrollmentCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


