/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApiStaticBranchActionInputValue - The input value to branch off of.
type ApiStaticBranchActionInputValue struct {
	ApiActionDataValue *ApiActionDataValue
	ApiAppendObjectPropertyValue *ApiAppendObjectPropertyValue
	ApiEnrollmentEventPropertyValue *ApiEnrollmentEventPropertyValue
	ApiFetchedObjectPropertyValue *ApiFetchedObjectPropertyValue
	ApiIncrementValue *ApiIncrementValue
	ApiObjectPropertyValue *ApiObjectPropertyValue
	ApiRelativeDateTimeValue *ApiRelativeDateTimeValue
	ApiStaticAppendValue *ApiStaticAppendValue
	ApiStaticValue *ApiStaticValue
	ApiTimestampValue *ApiTimestampValue
}

// ApiActionDataValueAsApiStaticBranchActionInputValue is a convenience function that returns ApiActionDataValue wrapped in ApiStaticBranchActionInputValue
func ApiActionDataValueAsApiStaticBranchActionInputValue(v *ApiActionDataValue) ApiStaticBranchActionInputValue {
	return ApiStaticBranchActionInputValue{
		ApiActionDataValue: v,
	}
}

// ApiAppendObjectPropertyValueAsApiStaticBranchActionInputValue is a convenience function that returns ApiAppendObjectPropertyValue wrapped in ApiStaticBranchActionInputValue
func ApiAppendObjectPropertyValueAsApiStaticBranchActionInputValue(v *ApiAppendObjectPropertyValue) ApiStaticBranchActionInputValue {
	return ApiStaticBranchActionInputValue{
		ApiAppendObjectPropertyValue: v,
	}
}

// ApiEnrollmentEventPropertyValueAsApiStaticBranchActionInputValue is a convenience function that returns ApiEnrollmentEventPropertyValue wrapped in ApiStaticBranchActionInputValue
func ApiEnrollmentEventPropertyValueAsApiStaticBranchActionInputValue(v *ApiEnrollmentEventPropertyValue) ApiStaticBranchActionInputValue {
	return ApiStaticBranchActionInputValue{
		ApiEnrollmentEventPropertyValue: v,
	}
}

// ApiFetchedObjectPropertyValueAsApiStaticBranchActionInputValue is a convenience function that returns ApiFetchedObjectPropertyValue wrapped in ApiStaticBranchActionInputValue
func ApiFetchedObjectPropertyValueAsApiStaticBranchActionInputValue(v *ApiFetchedObjectPropertyValue) ApiStaticBranchActionInputValue {
	return ApiStaticBranchActionInputValue{
		ApiFetchedObjectPropertyValue: v,
	}
}

// ApiIncrementValueAsApiStaticBranchActionInputValue is a convenience function that returns ApiIncrementValue wrapped in ApiStaticBranchActionInputValue
func ApiIncrementValueAsApiStaticBranchActionInputValue(v *ApiIncrementValue) ApiStaticBranchActionInputValue {
	return ApiStaticBranchActionInputValue{
		ApiIncrementValue: v,
	}
}

// ApiObjectPropertyValueAsApiStaticBranchActionInputValue is a convenience function that returns ApiObjectPropertyValue wrapped in ApiStaticBranchActionInputValue
func ApiObjectPropertyValueAsApiStaticBranchActionInputValue(v *ApiObjectPropertyValue) ApiStaticBranchActionInputValue {
	return ApiStaticBranchActionInputValue{
		ApiObjectPropertyValue: v,
	}
}

// ApiRelativeDateTimeValueAsApiStaticBranchActionInputValue is a convenience function that returns ApiRelativeDateTimeValue wrapped in ApiStaticBranchActionInputValue
func ApiRelativeDateTimeValueAsApiStaticBranchActionInputValue(v *ApiRelativeDateTimeValue) ApiStaticBranchActionInputValue {
	return ApiStaticBranchActionInputValue{
		ApiRelativeDateTimeValue: v,
	}
}

// ApiStaticAppendValueAsApiStaticBranchActionInputValue is a convenience function that returns ApiStaticAppendValue wrapped in ApiStaticBranchActionInputValue
func ApiStaticAppendValueAsApiStaticBranchActionInputValue(v *ApiStaticAppendValue) ApiStaticBranchActionInputValue {
	return ApiStaticBranchActionInputValue{
		ApiStaticAppendValue: v,
	}
}

// ApiStaticValueAsApiStaticBranchActionInputValue is a convenience function that returns ApiStaticValue wrapped in ApiStaticBranchActionInputValue
func ApiStaticValueAsApiStaticBranchActionInputValue(v *ApiStaticValue) ApiStaticBranchActionInputValue {
	return ApiStaticBranchActionInputValue{
		ApiStaticValue: v,
	}
}

// ApiTimestampValueAsApiStaticBranchActionInputValue is a convenience function that returns ApiTimestampValue wrapped in ApiStaticBranchActionInputValue
func ApiTimestampValueAsApiStaticBranchActionInputValue(v *ApiTimestampValue) ApiStaticBranchActionInputValue {
	return ApiStaticBranchActionInputValue{
		ApiTimestampValue: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApiStaticBranchActionInputValue) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApiActionDataValue
	err = newStrictDecoder(data).Decode(&dst.ApiActionDataValue)
	if err == nil {
		jsonApiActionDataValue, _ := json.Marshal(dst.ApiActionDataValue)
		if string(jsonApiActionDataValue) == "{}" { // empty struct
			dst.ApiActionDataValue = nil
		} else {
			if err = validator.Validate(dst.ApiActionDataValue); err != nil {
				dst.ApiActionDataValue = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiActionDataValue = nil
	}

	// try to unmarshal data into ApiAppendObjectPropertyValue
	err = newStrictDecoder(data).Decode(&dst.ApiAppendObjectPropertyValue)
	if err == nil {
		jsonApiAppendObjectPropertyValue, _ := json.Marshal(dst.ApiAppendObjectPropertyValue)
		if string(jsonApiAppendObjectPropertyValue) == "{}" { // empty struct
			dst.ApiAppendObjectPropertyValue = nil
		} else {
			if err = validator.Validate(dst.ApiAppendObjectPropertyValue); err != nil {
				dst.ApiAppendObjectPropertyValue = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiAppendObjectPropertyValue = nil
	}

	// try to unmarshal data into ApiEnrollmentEventPropertyValue
	err = newStrictDecoder(data).Decode(&dst.ApiEnrollmentEventPropertyValue)
	if err == nil {
		jsonApiEnrollmentEventPropertyValue, _ := json.Marshal(dst.ApiEnrollmentEventPropertyValue)
		if string(jsonApiEnrollmentEventPropertyValue) == "{}" { // empty struct
			dst.ApiEnrollmentEventPropertyValue = nil
		} else {
			if err = validator.Validate(dst.ApiEnrollmentEventPropertyValue); err != nil {
				dst.ApiEnrollmentEventPropertyValue = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiEnrollmentEventPropertyValue = nil
	}

	// try to unmarshal data into ApiFetchedObjectPropertyValue
	err = newStrictDecoder(data).Decode(&dst.ApiFetchedObjectPropertyValue)
	if err == nil {
		jsonApiFetchedObjectPropertyValue, _ := json.Marshal(dst.ApiFetchedObjectPropertyValue)
		if string(jsonApiFetchedObjectPropertyValue) == "{}" { // empty struct
			dst.ApiFetchedObjectPropertyValue = nil
		} else {
			if err = validator.Validate(dst.ApiFetchedObjectPropertyValue); err != nil {
				dst.ApiFetchedObjectPropertyValue = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiFetchedObjectPropertyValue = nil
	}

	// try to unmarshal data into ApiIncrementValue
	err = newStrictDecoder(data).Decode(&dst.ApiIncrementValue)
	if err == nil {
		jsonApiIncrementValue, _ := json.Marshal(dst.ApiIncrementValue)
		if string(jsonApiIncrementValue) == "{}" { // empty struct
			dst.ApiIncrementValue = nil
		} else {
			if err = validator.Validate(dst.ApiIncrementValue); err != nil {
				dst.ApiIncrementValue = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiIncrementValue = nil
	}

	// try to unmarshal data into ApiObjectPropertyValue
	err = newStrictDecoder(data).Decode(&dst.ApiObjectPropertyValue)
	if err == nil {
		jsonApiObjectPropertyValue, _ := json.Marshal(dst.ApiObjectPropertyValue)
		if string(jsonApiObjectPropertyValue) == "{}" { // empty struct
			dst.ApiObjectPropertyValue = nil
		} else {
			if err = validator.Validate(dst.ApiObjectPropertyValue); err != nil {
				dst.ApiObjectPropertyValue = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiObjectPropertyValue = nil
	}

	// try to unmarshal data into ApiRelativeDateTimeValue
	err = newStrictDecoder(data).Decode(&dst.ApiRelativeDateTimeValue)
	if err == nil {
		jsonApiRelativeDateTimeValue, _ := json.Marshal(dst.ApiRelativeDateTimeValue)
		if string(jsonApiRelativeDateTimeValue) == "{}" { // empty struct
			dst.ApiRelativeDateTimeValue = nil
		} else {
			if err = validator.Validate(dst.ApiRelativeDateTimeValue); err != nil {
				dst.ApiRelativeDateTimeValue = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiRelativeDateTimeValue = nil
	}

	// try to unmarshal data into ApiStaticAppendValue
	err = newStrictDecoder(data).Decode(&dst.ApiStaticAppendValue)
	if err == nil {
		jsonApiStaticAppendValue, _ := json.Marshal(dst.ApiStaticAppendValue)
		if string(jsonApiStaticAppendValue) == "{}" { // empty struct
			dst.ApiStaticAppendValue = nil
		} else {
			if err = validator.Validate(dst.ApiStaticAppendValue); err != nil {
				dst.ApiStaticAppendValue = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiStaticAppendValue = nil
	}

	// try to unmarshal data into ApiStaticValue
	err = newStrictDecoder(data).Decode(&dst.ApiStaticValue)
	if err == nil {
		jsonApiStaticValue, _ := json.Marshal(dst.ApiStaticValue)
		if string(jsonApiStaticValue) == "{}" { // empty struct
			dst.ApiStaticValue = nil
		} else {
			if err = validator.Validate(dst.ApiStaticValue); err != nil {
				dst.ApiStaticValue = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiStaticValue = nil
	}

	// try to unmarshal data into ApiTimestampValue
	err = newStrictDecoder(data).Decode(&dst.ApiTimestampValue)
	if err == nil {
		jsonApiTimestampValue, _ := json.Marshal(dst.ApiTimestampValue)
		if string(jsonApiTimestampValue) == "{}" { // empty struct
			dst.ApiTimestampValue = nil
		} else {
			if err = validator.Validate(dst.ApiTimestampValue); err != nil {
				dst.ApiTimestampValue = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiTimestampValue = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApiActionDataValue = nil
		dst.ApiAppendObjectPropertyValue = nil
		dst.ApiEnrollmentEventPropertyValue = nil
		dst.ApiFetchedObjectPropertyValue = nil
		dst.ApiIncrementValue = nil
		dst.ApiObjectPropertyValue = nil
		dst.ApiRelativeDateTimeValue = nil
		dst.ApiStaticAppendValue = nil
		dst.ApiStaticValue = nil
		dst.ApiTimestampValue = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApiStaticBranchActionInputValue)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApiStaticBranchActionInputValue)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApiStaticBranchActionInputValue) MarshalJSON() ([]byte, error) {
	if src.ApiActionDataValue != nil {
		return json.Marshal(&src.ApiActionDataValue)
	}

	if src.ApiAppendObjectPropertyValue != nil {
		return json.Marshal(&src.ApiAppendObjectPropertyValue)
	}

	if src.ApiEnrollmentEventPropertyValue != nil {
		return json.Marshal(&src.ApiEnrollmentEventPropertyValue)
	}

	if src.ApiFetchedObjectPropertyValue != nil {
		return json.Marshal(&src.ApiFetchedObjectPropertyValue)
	}

	if src.ApiIncrementValue != nil {
		return json.Marshal(&src.ApiIncrementValue)
	}

	if src.ApiObjectPropertyValue != nil {
		return json.Marshal(&src.ApiObjectPropertyValue)
	}

	if src.ApiRelativeDateTimeValue != nil {
		return json.Marshal(&src.ApiRelativeDateTimeValue)
	}

	if src.ApiStaticAppendValue != nil {
		return json.Marshal(&src.ApiStaticAppendValue)
	}

	if src.ApiStaticValue != nil {
		return json.Marshal(&src.ApiStaticValue)
	}

	if src.ApiTimestampValue != nil {
		return json.Marshal(&src.ApiTimestampValue)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApiStaticBranchActionInputValue) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApiActionDataValue != nil {
		return obj.ApiActionDataValue
	}

	if obj.ApiAppendObjectPropertyValue != nil {
		return obj.ApiAppendObjectPropertyValue
	}

	if obj.ApiEnrollmentEventPropertyValue != nil {
		return obj.ApiEnrollmentEventPropertyValue
	}

	if obj.ApiFetchedObjectPropertyValue != nil {
		return obj.ApiFetchedObjectPropertyValue
	}

	if obj.ApiIncrementValue != nil {
		return obj.ApiIncrementValue
	}

	if obj.ApiObjectPropertyValue != nil {
		return obj.ApiObjectPropertyValue
	}

	if obj.ApiRelativeDateTimeValue != nil {
		return obj.ApiRelativeDateTimeValue
	}

	if obj.ApiStaticAppendValue != nil {
		return obj.ApiStaticAppendValue
	}

	if obj.ApiStaticValue != nil {
		return obj.ApiStaticValue
	}

	if obj.ApiTimestampValue != nil {
		return obj.ApiTimestampValue
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApiStaticBranchActionInputValue) GetActualInstanceValue() (interface{}) {
	if obj.ApiActionDataValue != nil {
		return *obj.ApiActionDataValue
	}

	if obj.ApiAppendObjectPropertyValue != nil {
		return *obj.ApiAppendObjectPropertyValue
	}

	if obj.ApiEnrollmentEventPropertyValue != nil {
		return *obj.ApiEnrollmentEventPropertyValue
	}

	if obj.ApiFetchedObjectPropertyValue != nil {
		return *obj.ApiFetchedObjectPropertyValue
	}

	if obj.ApiIncrementValue != nil {
		return *obj.ApiIncrementValue
	}

	if obj.ApiObjectPropertyValue != nil {
		return *obj.ApiObjectPropertyValue
	}

	if obj.ApiRelativeDateTimeValue != nil {
		return *obj.ApiRelativeDateTimeValue
	}

	if obj.ApiStaticAppendValue != nil {
		return *obj.ApiStaticAppendValue
	}

	if obj.ApiStaticValue != nil {
		return *obj.ApiStaticValue
	}

	if obj.ApiTimestampValue != nil {
		return *obj.ApiTimestampValue
	}

	// all schemas are nil
	return nil
}

type NullableApiStaticBranchActionInputValue struct {
	value *ApiStaticBranchActionInputValue
	isSet bool
}

func (v NullableApiStaticBranchActionInputValue) Get() *ApiStaticBranchActionInputValue {
	return v.value
}

func (v *NullableApiStaticBranchActionInputValue) Set(val *ApiStaticBranchActionInputValue) {
	v.value = val
	v.isSet = true
}

func (v NullableApiStaticBranchActionInputValue) IsSet() bool {
	return v.isSet
}

func (v *NullableApiStaticBranchActionInputValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiStaticBranchActionInputValue(val *ApiStaticBranchActionInputValue) *NullableApiStaticBranchActionInputValue {
	return &NullableApiStaticBranchActionInputValue{value: val, isSet: true}
}

func (v NullableApiStaticBranchActionInputValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiStaticBranchActionInputValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


