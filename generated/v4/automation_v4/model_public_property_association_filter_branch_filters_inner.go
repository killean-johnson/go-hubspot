/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// PublicPropertyAssociationFilterBranchFiltersInner - struct for PublicPropertyAssociationFilterBranchFiltersInner
type PublicPropertyAssociationFilterBranchFiltersInner struct {
	PublicAdsSearchFilter *PublicAdsSearchFilter
	PublicAdsTimeFilter *PublicAdsTimeFilter
	PublicAssociationInListFilter *PublicAssociationInListFilter
	PublicCampaignInfluencedFilter *PublicCampaignInfluencedFilter
	PublicCommunicationSubscriptionFilter *PublicCommunicationSubscriptionFilter
	PublicConstantFilter *PublicConstantFilter
	PublicCtaAnalyticsFilter *PublicCtaAnalyticsFilter
	PublicEmailEventFilter *PublicEmailEventFilter
	PublicEmailSubscriptionFilter *PublicEmailSubscriptionFilter
	PublicEventAnalyticsFilter *PublicEventAnalyticsFilter
	PublicFormSubmissionFilter *PublicFormSubmissionFilter
	PublicFormSubmissionOnPageFilter *PublicFormSubmissionOnPageFilter
	PublicInListFilter *PublicInListFilter
	PublicIntegrationEventFilter *PublicIntegrationEventFilter
	PublicNumAssociationsFilter *PublicNumAssociationsFilter
	PublicPageViewAnalyticsFilter *PublicPageViewAnalyticsFilter
	PublicPrivacyAnalyticsFilter *PublicPrivacyAnalyticsFilter
	PublicPropertyAssociationInListFilter *PublicPropertyAssociationInListFilter
	PublicPropertyFilter *PublicPropertyFilter
	PublicSurveyMonkeyFilter *PublicSurveyMonkeyFilter
	PublicSurveyMonkeyValueFilter *PublicSurveyMonkeyValueFilter
	PublicUnifiedEventsFilter *PublicUnifiedEventsFilter
	PublicWebinarFilter *PublicWebinarFilter
}

// PublicAdsSearchFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicAdsSearchFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicAdsSearchFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicAdsSearchFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicAdsSearchFilter: v,
	}
}

// PublicAdsTimeFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicAdsTimeFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicAdsTimeFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicAdsTimeFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicAdsTimeFilter: v,
	}
}

// PublicAssociationInListFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicAssociationInListFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicAssociationInListFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicAssociationInListFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicAssociationInListFilter: v,
	}
}

// PublicCampaignInfluencedFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicCampaignInfluencedFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicCampaignInfluencedFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicCampaignInfluencedFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicCampaignInfluencedFilter: v,
	}
}

// PublicCommunicationSubscriptionFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicCommunicationSubscriptionFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicCommunicationSubscriptionFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicCommunicationSubscriptionFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicCommunicationSubscriptionFilter: v,
	}
}

// PublicConstantFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicConstantFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicConstantFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicConstantFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicConstantFilter: v,
	}
}

// PublicCtaAnalyticsFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicCtaAnalyticsFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicCtaAnalyticsFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicCtaAnalyticsFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicCtaAnalyticsFilter: v,
	}
}

// PublicEmailEventFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicEmailEventFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicEmailEventFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicEmailEventFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicEmailEventFilter: v,
	}
}

// PublicEmailSubscriptionFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicEmailSubscriptionFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicEmailSubscriptionFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicEmailSubscriptionFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicEmailSubscriptionFilter: v,
	}
}

// PublicEventAnalyticsFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicEventAnalyticsFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicEventAnalyticsFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicEventAnalyticsFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicEventAnalyticsFilter: v,
	}
}

// PublicFormSubmissionFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicFormSubmissionFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicFormSubmissionFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicFormSubmissionFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicFormSubmissionFilter: v,
	}
}

// PublicFormSubmissionOnPageFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicFormSubmissionOnPageFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicFormSubmissionOnPageFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicFormSubmissionOnPageFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicFormSubmissionOnPageFilter: v,
	}
}

// PublicInListFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicInListFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicInListFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicInListFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicInListFilter: v,
	}
}

// PublicIntegrationEventFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicIntegrationEventFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicIntegrationEventFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicIntegrationEventFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicIntegrationEventFilter: v,
	}
}

// PublicNumAssociationsFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicNumAssociationsFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicNumAssociationsFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicNumAssociationsFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicNumAssociationsFilter: v,
	}
}

// PublicPageViewAnalyticsFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicPageViewAnalyticsFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicPageViewAnalyticsFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicPageViewAnalyticsFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicPageViewAnalyticsFilter: v,
	}
}

// PublicPrivacyAnalyticsFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicPrivacyAnalyticsFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicPrivacyAnalyticsFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicPrivacyAnalyticsFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicPrivacyAnalyticsFilter: v,
	}
}

// PublicPropertyAssociationInListFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicPropertyAssociationInListFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicPropertyAssociationInListFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicPropertyAssociationInListFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicPropertyAssociationInListFilter: v,
	}
}

// PublicPropertyFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicPropertyFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicPropertyFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicPropertyFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicPropertyFilter: v,
	}
}

// PublicSurveyMonkeyFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicSurveyMonkeyFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicSurveyMonkeyFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicSurveyMonkeyFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicSurveyMonkeyFilter: v,
	}
}

// PublicSurveyMonkeyValueFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicSurveyMonkeyValueFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicSurveyMonkeyValueFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicSurveyMonkeyValueFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicSurveyMonkeyValueFilter: v,
	}
}

// PublicUnifiedEventsFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicUnifiedEventsFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicUnifiedEventsFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicUnifiedEventsFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicUnifiedEventsFilter: v,
	}
}

// PublicWebinarFilterAsPublicPropertyAssociationFilterBranchFiltersInner is a convenience function that returns PublicWebinarFilter wrapped in PublicPropertyAssociationFilterBranchFiltersInner
func PublicWebinarFilterAsPublicPropertyAssociationFilterBranchFiltersInner(v *PublicWebinarFilter) PublicPropertyAssociationFilterBranchFiltersInner {
	return PublicPropertyAssociationFilterBranchFiltersInner{
		PublicWebinarFilter: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *PublicPropertyAssociationFilterBranchFiltersInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into PublicAdsSearchFilter
	err = newStrictDecoder(data).Decode(&dst.PublicAdsSearchFilter)
	if err == nil {
		jsonPublicAdsSearchFilter, _ := json.Marshal(dst.PublicAdsSearchFilter)
		if string(jsonPublicAdsSearchFilter) == "{}" { // empty struct
			dst.PublicAdsSearchFilter = nil
		} else {
			if err = validator.Validate(dst.PublicAdsSearchFilter); err != nil {
				dst.PublicAdsSearchFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicAdsSearchFilter = nil
	}

	// try to unmarshal data into PublicAdsTimeFilter
	err = newStrictDecoder(data).Decode(&dst.PublicAdsTimeFilter)
	if err == nil {
		jsonPublicAdsTimeFilter, _ := json.Marshal(dst.PublicAdsTimeFilter)
		if string(jsonPublicAdsTimeFilter) == "{}" { // empty struct
			dst.PublicAdsTimeFilter = nil
		} else {
			if err = validator.Validate(dst.PublicAdsTimeFilter); err != nil {
				dst.PublicAdsTimeFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicAdsTimeFilter = nil
	}

	// try to unmarshal data into PublicAssociationInListFilter
	err = newStrictDecoder(data).Decode(&dst.PublicAssociationInListFilter)
	if err == nil {
		jsonPublicAssociationInListFilter, _ := json.Marshal(dst.PublicAssociationInListFilter)
		if string(jsonPublicAssociationInListFilter) == "{}" { // empty struct
			dst.PublicAssociationInListFilter = nil
		} else {
			if err = validator.Validate(dst.PublicAssociationInListFilter); err != nil {
				dst.PublicAssociationInListFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicAssociationInListFilter = nil
	}

	// try to unmarshal data into PublicCampaignInfluencedFilter
	err = newStrictDecoder(data).Decode(&dst.PublicCampaignInfluencedFilter)
	if err == nil {
		jsonPublicCampaignInfluencedFilter, _ := json.Marshal(dst.PublicCampaignInfluencedFilter)
		if string(jsonPublicCampaignInfluencedFilter) == "{}" { // empty struct
			dst.PublicCampaignInfluencedFilter = nil
		} else {
			if err = validator.Validate(dst.PublicCampaignInfluencedFilter); err != nil {
				dst.PublicCampaignInfluencedFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicCampaignInfluencedFilter = nil
	}

	// try to unmarshal data into PublicCommunicationSubscriptionFilter
	err = newStrictDecoder(data).Decode(&dst.PublicCommunicationSubscriptionFilter)
	if err == nil {
		jsonPublicCommunicationSubscriptionFilter, _ := json.Marshal(dst.PublicCommunicationSubscriptionFilter)
		if string(jsonPublicCommunicationSubscriptionFilter) == "{}" { // empty struct
			dst.PublicCommunicationSubscriptionFilter = nil
		} else {
			if err = validator.Validate(dst.PublicCommunicationSubscriptionFilter); err != nil {
				dst.PublicCommunicationSubscriptionFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicCommunicationSubscriptionFilter = nil
	}

	// try to unmarshal data into PublicConstantFilter
	err = newStrictDecoder(data).Decode(&dst.PublicConstantFilter)
	if err == nil {
		jsonPublicConstantFilter, _ := json.Marshal(dst.PublicConstantFilter)
		if string(jsonPublicConstantFilter) == "{}" { // empty struct
			dst.PublicConstantFilter = nil
		} else {
			if err = validator.Validate(dst.PublicConstantFilter); err != nil {
				dst.PublicConstantFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicConstantFilter = nil
	}

	// try to unmarshal data into PublicCtaAnalyticsFilter
	err = newStrictDecoder(data).Decode(&dst.PublicCtaAnalyticsFilter)
	if err == nil {
		jsonPublicCtaAnalyticsFilter, _ := json.Marshal(dst.PublicCtaAnalyticsFilter)
		if string(jsonPublicCtaAnalyticsFilter) == "{}" { // empty struct
			dst.PublicCtaAnalyticsFilter = nil
		} else {
			if err = validator.Validate(dst.PublicCtaAnalyticsFilter); err != nil {
				dst.PublicCtaAnalyticsFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicCtaAnalyticsFilter = nil
	}

	// try to unmarshal data into PublicEmailEventFilter
	err = newStrictDecoder(data).Decode(&dst.PublicEmailEventFilter)
	if err == nil {
		jsonPublicEmailEventFilter, _ := json.Marshal(dst.PublicEmailEventFilter)
		if string(jsonPublicEmailEventFilter) == "{}" { // empty struct
			dst.PublicEmailEventFilter = nil
		} else {
			if err = validator.Validate(dst.PublicEmailEventFilter); err != nil {
				dst.PublicEmailEventFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicEmailEventFilter = nil
	}

	// try to unmarshal data into PublicEmailSubscriptionFilter
	err = newStrictDecoder(data).Decode(&dst.PublicEmailSubscriptionFilter)
	if err == nil {
		jsonPublicEmailSubscriptionFilter, _ := json.Marshal(dst.PublicEmailSubscriptionFilter)
		if string(jsonPublicEmailSubscriptionFilter) == "{}" { // empty struct
			dst.PublicEmailSubscriptionFilter = nil
		} else {
			if err = validator.Validate(dst.PublicEmailSubscriptionFilter); err != nil {
				dst.PublicEmailSubscriptionFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicEmailSubscriptionFilter = nil
	}

	// try to unmarshal data into PublicEventAnalyticsFilter
	err = newStrictDecoder(data).Decode(&dst.PublicEventAnalyticsFilter)
	if err == nil {
		jsonPublicEventAnalyticsFilter, _ := json.Marshal(dst.PublicEventAnalyticsFilter)
		if string(jsonPublicEventAnalyticsFilter) == "{}" { // empty struct
			dst.PublicEventAnalyticsFilter = nil
		} else {
			if err = validator.Validate(dst.PublicEventAnalyticsFilter); err != nil {
				dst.PublicEventAnalyticsFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicEventAnalyticsFilter = nil
	}

	// try to unmarshal data into PublicFormSubmissionFilter
	err = newStrictDecoder(data).Decode(&dst.PublicFormSubmissionFilter)
	if err == nil {
		jsonPublicFormSubmissionFilter, _ := json.Marshal(dst.PublicFormSubmissionFilter)
		if string(jsonPublicFormSubmissionFilter) == "{}" { // empty struct
			dst.PublicFormSubmissionFilter = nil
		} else {
			if err = validator.Validate(dst.PublicFormSubmissionFilter); err != nil {
				dst.PublicFormSubmissionFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicFormSubmissionFilter = nil
	}

	// try to unmarshal data into PublicFormSubmissionOnPageFilter
	err = newStrictDecoder(data).Decode(&dst.PublicFormSubmissionOnPageFilter)
	if err == nil {
		jsonPublicFormSubmissionOnPageFilter, _ := json.Marshal(dst.PublicFormSubmissionOnPageFilter)
		if string(jsonPublicFormSubmissionOnPageFilter) == "{}" { // empty struct
			dst.PublicFormSubmissionOnPageFilter = nil
		} else {
			if err = validator.Validate(dst.PublicFormSubmissionOnPageFilter); err != nil {
				dst.PublicFormSubmissionOnPageFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicFormSubmissionOnPageFilter = nil
	}

	// try to unmarshal data into PublicInListFilter
	err = newStrictDecoder(data).Decode(&dst.PublicInListFilter)
	if err == nil {
		jsonPublicInListFilter, _ := json.Marshal(dst.PublicInListFilter)
		if string(jsonPublicInListFilter) == "{}" { // empty struct
			dst.PublicInListFilter = nil
		} else {
			if err = validator.Validate(dst.PublicInListFilter); err != nil {
				dst.PublicInListFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicInListFilter = nil
	}

	// try to unmarshal data into PublicIntegrationEventFilter
	err = newStrictDecoder(data).Decode(&dst.PublicIntegrationEventFilter)
	if err == nil {
		jsonPublicIntegrationEventFilter, _ := json.Marshal(dst.PublicIntegrationEventFilter)
		if string(jsonPublicIntegrationEventFilter) == "{}" { // empty struct
			dst.PublicIntegrationEventFilter = nil
		} else {
			if err = validator.Validate(dst.PublicIntegrationEventFilter); err != nil {
				dst.PublicIntegrationEventFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicIntegrationEventFilter = nil
	}

	// try to unmarshal data into PublicNumAssociationsFilter
	err = newStrictDecoder(data).Decode(&dst.PublicNumAssociationsFilter)
	if err == nil {
		jsonPublicNumAssociationsFilter, _ := json.Marshal(dst.PublicNumAssociationsFilter)
		if string(jsonPublicNumAssociationsFilter) == "{}" { // empty struct
			dst.PublicNumAssociationsFilter = nil
		} else {
			if err = validator.Validate(dst.PublicNumAssociationsFilter); err != nil {
				dst.PublicNumAssociationsFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicNumAssociationsFilter = nil
	}

	// try to unmarshal data into PublicPageViewAnalyticsFilter
	err = newStrictDecoder(data).Decode(&dst.PublicPageViewAnalyticsFilter)
	if err == nil {
		jsonPublicPageViewAnalyticsFilter, _ := json.Marshal(dst.PublicPageViewAnalyticsFilter)
		if string(jsonPublicPageViewAnalyticsFilter) == "{}" { // empty struct
			dst.PublicPageViewAnalyticsFilter = nil
		} else {
			if err = validator.Validate(dst.PublicPageViewAnalyticsFilter); err != nil {
				dst.PublicPageViewAnalyticsFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicPageViewAnalyticsFilter = nil
	}

	// try to unmarshal data into PublicPrivacyAnalyticsFilter
	err = newStrictDecoder(data).Decode(&dst.PublicPrivacyAnalyticsFilter)
	if err == nil {
		jsonPublicPrivacyAnalyticsFilter, _ := json.Marshal(dst.PublicPrivacyAnalyticsFilter)
		if string(jsonPublicPrivacyAnalyticsFilter) == "{}" { // empty struct
			dst.PublicPrivacyAnalyticsFilter = nil
		} else {
			if err = validator.Validate(dst.PublicPrivacyAnalyticsFilter); err != nil {
				dst.PublicPrivacyAnalyticsFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicPrivacyAnalyticsFilter = nil
	}

	// try to unmarshal data into PublicPropertyAssociationInListFilter
	err = newStrictDecoder(data).Decode(&dst.PublicPropertyAssociationInListFilter)
	if err == nil {
		jsonPublicPropertyAssociationInListFilter, _ := json.Marshal(dst.PublicPropertyAssociationInListFilter)
		if string(jsonPublicPropertyAssociationInListFilter) == "{}" { // empty struct
			dst.PublicPropertyAssociationInListFilter = nil
		} else {
			if err = validator.Validate(dst.PublicPropertyAssociationInListFilter); err != nil {
				dst.PublicPropertyAssociationInListFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicPropertyAssociationInListFilter = nil
	}

	// try to unmarshal data into PublicPropertyFilter
	err = newStrictDecoder(data).Decode(&dst.PublicPropertyFilter)
	if err == nil {
		jsonPublicPropertyFilter, _ := json.Marshal(dst.PublicPropertyFilter)
		if string(jsonPublicPropertyFilter) == "{}" { // empty struct
			dst.PublicPropertyFilter = nil
		} else {
			if err = validator.Validate(dst.PublicPropertyFilter); err != nil {
				dst.PublicPropertyFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicPropertyFilter = nil
	}

	// try to unmarshal data into PublicSurveyMonkeyFilter
	err = newStrictDecoder(data).Decode(&dst.PublicSurveyMonkeyFilter)
	if err == nil {
		jsonPublicSurveyMonkeyFilter, _ := json.Marshal(dst.PublicSurveyMonkeyFilter)
		if string(jsonPublicSurveyMonkeyFilter) == "{}" { // empty struct
			dst.PublicSurveyMonkeyFilter = nil
		} else {
			if err = validator.Validate(dst.PublicSurveyMonkeyFilter); err != nil {
				dst.PublicSurveyMonkeyFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicSurveyMonkeyFilter = nil
	}

	// try to unmarshal data into PublicSurveyMonkeyValueFilter
	err = newStrictDecoder(data).Decode(&dst.PublicSurveyMonkeyValueFilter)
	if err == nil {
		jsonPublicSurveyMonkeyValueFilter, _ := json.Marshal(dst.PublicSurveyMonkeyValueFilter)
		if string(jsonPublicSurveyMonkeyValueFilter) == "{}" { // empty struct
			dst.PublicSurveyMonkeyValueFilter = nil
		} else {
			if err = validator.Validate(dst.PublicSurveyMonkeyValueFilter); err != nil {
				dst.PublicSurveyMonkeyValueFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicSurveyMonkeyValueFilter = nil
	}

	// try to unmarshal data into PublicUnifiedEventsFilter
	err = newStrictDecoder(data).Decode(&dst.PublicUnifiedEventsFilter)
	if err == nil {
		jsonPublicUnifiedEventsFilter, _ := json.Marshal(dst.PublicUnifiedEventsFilter)
		if string(jsonPublicUnifiedEventsFilter) == "{}" { // empty struct
			dst.PublicUnifiedEventsFilter = nil
		} else {
			if err = validator.Validate(dst.PublicUnifiedEventsFilter); err != nil {
				dst.PublicUnifiedEventsFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicUnifiedEventsFilter = nil
	}

	// try to unmarshal data into PublicWebinarFilter
	err = newStrictDecoder(data).Decode(&dst.PublicWebinarFilter)
	if err == nil {
		jsonPublicWebinarFilter, _ := json.Marshal(dst.PublicWebinarFilter)
		if string(jsonPublicWebinarFilter) == "{}" { // empty struct
			dst.PublicWebinarFilter = nil
		} else {
			if err = validator.Validate(dst.PublicWebinarFilter); err != nil {
				dst.PublicWebinarFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.PublicWebinarFilter = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.PublicAdsSearchFilter = nil
		dst.PublicAdsTimeFilter = nil
		dst.PublicAssociationInListFilter = nil
		dst.PublicCampaignInfluencedFilter = nil
		dst.PublicCommunicationSubscriptionFilter = nil
		dst.PublicConstantFilter = nil
		dst.PublicCtaAnalyticsFilter = nil
		dst.PublicEmailEventFilter = nil
		dst.PublicEmailSubscriptionFilter = nil
		dst.PublicEventAnalyticsFilter = nil
		dst.PublicFormSubmissionFilter = nil
		dst.PublicFormSubmissionOnPageFilter = nil
		dst.PublicInListFilter = nil
		dst.PublicIntegrationEventFilter = nil
		dst.PublicNumAssociationsFilter = nil
		dst.PublicPageViewAnalyticsFilter = nil
		dst.PublicPrivacyAnalyticsFilter = nil
		dst.PublicPropertyAssociationInListFilter = nil
		dst.PublicPropertyFilter = nil
		dst.PublicSurveyMonkeyFilter = nil
		dst.PublicSurveyMonkeyValueFilter = nil
		dst.PublicUnifiedEventsFilter = nil
		dst.PublicWebinarFilter = nil

		return fmt.Errorf("data matches more than one schema in oneOf(PublicPropertyAssociationFilterBranchFiltersInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(PublicPropertyAssociationFilterBranchFiltersInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src PublicPropertyAssociationFilterBranchFiltersInner) MarshalJSON() ([]byte, error) {
	if src.PublicAdsSearchFilter != nil {
		return json.Marshal(&src.PublicAdsSearchFilter)
	}

	if src.PublicAdsTimeFilter != nil {
		return json.Marshal(&src.PublicAdsTimeFilter)
	}

	if src.PublicAssociationInListFilter != nil {
		return json.Marshal(&src.PublicAssociationInListFilter)
	}

	if src.PublicCampaignInfluencedFilter != nil {
		return json.Marshal(&src.PublicCampaignInfluencedFilter)
	}

	if src.PublicCommunicationSubscriptionFilter != nil {
		return json.Marshal(&src.PublicCommunicationSubscriptionFilter)
	}

	if src.PublicConstantFilter != nil {
		return json.Marshal(&src.PublicConstantFilter)
	}

	if src.PublicCtaAnalyticsFilter != nil {
		return json.Marshal(&src.PublicCtaAnalyticsFilter)
	}

	if src.PublicEmailEventFilter != nil {
		return json.Marshal(&src.PublicEmailEventFilter)
	}

	if src.PublicEmailSubscriptionFilter != nil {
		return json.Marshal(&src.PublicEmailSubscriptionFilter)
	}

	if src.PublicEventAnalyticsFilter != nil {
		return json.Marshal(&src.PublicEventAnalyticsFilter)
	}

	if src.PublicFormSubmissionFilter != nil {
		return json.Marshal(&src.PublicFormSubmissionFilter)
	}

	if src.PublicFormSubmissionOnPageFilter != nil {
		return json.Marshal(&src.PublicFormSubmissionOnPageFilter)
	}

	if src.PublicInListFilter != nil {
		return json.Marshal(&src.PublicInListFilter)
	}

	if src.PublicIntegrationEventFilter != nil {
		return json.Marshal(&src.PublicIntegrationEventFilter)
	}

	if src.PublicNumAssociationsFilter != nil {
		return json.Marshal(&src.PublicNumAssociationsFilter)
	}

	if src.PublicPageViewAnalyticsFilter != nil {
		return json.Marshal(&src.PublicPageViewAnalyticsFilter)
	}

	if src.PublicPrivacyAnalyticsFilter != nil {
		return json.Marshal(&src.PublicPrivacyAnalyticsFilter)
	}

	if src.PublicPropertyAssociationInListFilter != nil {
		return json.Marshal(&src.PublicPropertyAssociationInListFilter)
	}

	if src.PublicPropertyFilter != nil {
		return json.Marshal(&src.PublicPropertyFilter)
	}

	if src.PublicSurveyMonkeyFilter != nil {
		return json.Marshal(&src.PublicSurveyMonkeyFilter)
	}

	if src.PublicSurveyMonkeyValueFilter != nil {
		return json.Marshal(&src.PublicSurveyMonkeyValueFilter)
	}

	if src.PublicUnifiedEventsFilter != nil {
		return json.Marshal(&src.PublicUnifiedEventsFilter)
	}

	if src.PublicWebinarFilter != nil {
		return json.Marshal(&src.PublicWebinarFilter)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *PublicPropertyAssociationFilterBranchFiltersInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.PublicAdsSearchFilter != nil {
		return obj.PublicAdsSearchFilter
	}

	if obj.PublicAdsTimeFilter != nil {
		return obj.PublicAdsTimeFilter
	}

	if obj.PublicAssociationInListFilter != nil {
		return obj.PublicAssociationInListFilter
	}

	if obj.PublicCampaignInfluencedFilter != nil {
		return obj.PublicCampaignInfluencedFilter
	}

	if obj.PublicCommunicationSubscriptionFilter != nil {
		return obj.PublicCommunicationSubscriptionFilter
	}

	if obj.PublicConstantFilter != nil {
		return obj.PublicConstantFilter
	}

	if obj.PublicCtaAnalyticsFilter != nil {
		return obj.PublicCtaAnalyticsFilter
	}

	if obj.PublicEmailEventFilter != nil {
		return obj.PublicEmailEventFilter
	}

	if obj.PublicEmailSubscriptionFilter != nil {
		return obj.PublicEmailSubscriptionFilter
	}

	if obj.PublicEventAnalyticsFilter != nil {
		return obj.PublicEventAnalyticsFilter
	}

	if obj.PublicFormSubmissionFilter != nil {
		return obj.PublicFormSubmissionFilter
	}

	if obj.PublicFormSubmissionOnPageFilter != nil {
		return obj.PublicFormSubmissionOnPageFilter
	}

	if obj.PublicInListFilter != nil {
		return obj.PublicInListFilter
	}

	if obj.PublicIntegrationEventFilter != nil {
		return obj.PublicIntegrationEventFilter
	}

	if obj.PublicNumAssociationsFilter != nil {
		return obj.PublicNumAssociationsFilter
	}

	if obj.PublicPageViewAnalyticsFilter != nil {
		return obj.PublicPageViewAnalyticsFilter
	}

	if obj.PublicPrivacyAnalyticsFilter != nil {
		return obj.PublicPrivacyAnalyticsFilter
	}

	if obj.PublicPropertyAssociationInListFilter != nil {
		return obj.PublicPropertyAssociationInListFilter
	}

	if obj.PublicPropertyFilter != nil {
		return obj.PublicPropertyFilter
	}

	if obj.PublicSurveyMonkeyFilter != nil {
		return obj.PublicSurveyMonkeyFilter
	}

	if obj.PublicSurveyMonkeyValueFilter != nil {
		return obj.PublicSurveyMonkeyValueFilter
	}

	if obj.PublicUnifiedEventsFilter != nil {
		return obj.PublicUnifiedEventsFilter
	}

	if obj.PublicWebinarFilter != nil {
		return obj.PublicWebinarFilter
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj PublicPropertyAssociationFilterBranchFiltersInner) GetActualInstanceValue() (interface{}) {
	if obj.PublicAdsSearchFilter != nil {
		return *obj.PublicAdsSearchFilter
	}

	if obj.PublicAdsTimeFilter != nil {
		return *obj.PublicAdsTimeFilter
	}

	if obj.PublicAssociationInListFilter != nil {
		return *obj.PublicAssociationInListFilter
	}

	if obj.PublicCampaignInfluencedFilter != nil {
		return *obj.PublicCampaignInfluencedFilter
	}

	if obj.PublicCommunicationSubscriptionFilter != nil {
		return *obj.PublicCommunicationSubscriptionFilter
	}

	if obj.PublicConstantFilter != nil {
		return *obj.PublicConstantFilter
	}

	if obj.PublicCtaAnalyticsFilter != nil {
		return *obj.PublicCtaAnalyticsFilter
	}

	if obj.PublicEmailEventFilter != nil {
		return *obj.PublicEmailEventFilter
	}

	if obj.PublicEmailSubscriptionFilter != nil {
		return *obj.PublicEmailSubscriptionFilter
	}

	if obj.PublicEventAnalyticsFilter != nil {
		return *obj.PublicEventAnalyticsFilter
	}

	if obj.PublicFormSubmissionFilter != nil {
		return *obj.PublicFormSubmissionFilter
	}

	if obj.PublicFormSubmissionOnPageFilter != nil {
		return *obj.PublicFormSubmissionOnPageFilter
	}

	if obj.PublicInListFilter != nil {
		return *obj.PublicInListFilter
	}

	if obj.PublicIntegrationEventFilter != nil {
		return *obj.PublicIntegrationEventFilter
	}

	if obj.PublicNumAssociationsFilter != nil {
		return *obj.PublicNumAssociationsFilter
	}

	if obj.PublicPageViewAnalyticsFilter != nil {
		return *obj.PublicPageViewAnalyticsFilter
	}

	if obj.PublicPrivacyAnalyticsFilter != nil {
		return *obj.PublicPrivacyAnalyticsFilter
	}

	if obj.PublicPropertyAssociationInListFilter != nil {
		return *obj.PublicPropertyAssociationInListFilter
	}

	if obj.PublicPropertyFilter != nil {
		return *obj.PublicPropertyFilter
	}

	if obj.PublicSurveyMonkeyFilter != nil {
		return *obj.PublicSurveyMonkeyFilter
	}

	if obj.PublicSurveyMonkeyValueFilter != nil {
		return *obj.PublicSurveyMonkeyValueFilter
	}

	if obj.PublicUnifiedEventsFilter != nil {
		return *obj.PublicUnifiedEventsFilter
	}

	if obj.PublicWebinarFilter != nil {
		return *obj.PublicWebinarFilter
	}

	// all schemas are nil
	return nil
}

type NullablePublicPropertyAssociationFilterBranchFiltersInner struct {
	value *PublicPropertyAssociationFilterBranchFiltersInner
	isSet bool
}

func (v NullablePublicPropertyAssociationFilterBranchFiltersInner) Get() *PublicPropertyAssociationFilterBranchFiltersInner {
	return v.value
}

func (v *NullablePublicPropertyAssociationFilterBranchFiltersInner) Set(val *PublicPropertyAssociationFilterBranchFiltersInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicPropertyAssociationFilterBranchFiltersInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicPropertyAssociationFilterBranchFiltersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicPropertyAssociationFilterBranchFiltersInner(val *PublicPropertyAssociationFilterBranchFiltersInner) *NullablePublicPropertyAssociationFilterBranchFiltersInner {
	return &NullablePublicPropertyAssociationFilterBranchFiltersInner{value: val, isSet: true}
}

func (v NullablePublicPropertyAssociationFilterBranchFiltersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicPropertyAssociationFilterBranchFiltersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


