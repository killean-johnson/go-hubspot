/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApiFlowBatchInputInputsInner - struct for ApiFlowBatchInputInputsInner
type ApiFlowBatchInputInputsInner struct {
	ApiFlowBatchFetchFlowIdCoordinate *ApiFlowBatchFetchFlowIdCoordinate
}

// ApiFlowBatchFetchFlowIdCoordinateAsApiFlowBatchInputInputsInner is a convenience function that returns ApiFlowBatchFetchFlowIdCoordinate wrapped in ApiFlowBatchInputInputsInner
func ApiFlowBatchFetchFlowIdCoordinateAsApiFlowBatchInputInputsInner(v *ApiFlowBatchFetchFlowIdCoordinate) ApiFlowBatchInputInputsInner {
	return ApiFlowBatchInputInputsInner{
		ApiFlowBatchFetchFlowIdCoordinate: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApiFlowBatchInputInputsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApiFlowBatchFetchFlowIdCoordinate
	err = newStrictDecoder(data).Decode(&dst.ApiFlowBatchFetchFlowIdCoordinate)
	if err == nil {
		jsonApiFlowBatchFetchFlowIdCoordinate, _ := json.Marshal(dst.ApiFlowBatchFetchFlowIdCoordinate)
		if string(jsonApiFlowBatchFetchFlowIdCoordinate) == "{}" { // empty struct
			dst.ApiFlowBatchFetchFlowIdCoordinate = nil
		} else {
			if err = validator.Validate(dst.ApiFlowBatchFetchFlowIdCoordinate); err != nil {
				dst.ApiFlowBatchFetchFlowIdCoordinate = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiFlowBatchFetchFlowIdCoordinate = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApiFlowBatchFetchFlowIdCoordinate = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApiFlowBatchInputInputsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApiFlowBatchInputInputsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApiFlowBatchInputInputsInner) MarshalJSON() ([]byte, error) {
	if src.ApiFlowBatchFetchFlowIdCoordinate != nil {
		return json.Marshal(&src.ApiFlowBatchFetchFlowIdCoordinate)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApiFlowBatchInputInputsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApiFlowBatchFetchFlowIdCoordinate != nil {
		return obj.ApiFlowBatchFetchFlowIdCoordinate
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApiFlowBatchInputInputsInner) GetActualInstanceValue() (interface{}) {
	if obj.ApiFlowBatchFetchFlowIdCoordinate != nil {
		return *obj.ApiFlowBatchFetchFlowIdCoordinate
	}

	// all schemas are nil
	return nil
}

type NullableApiFlowBatchInputInputsInner struct {
	value *ApiFlowBatchInputInputsInner
	isSet bool
}

func (v NullableApiFlowBatchInputInputsInner) Get() *ApiFlowBatchInputInputsInner {
	return v.value
}

func (v *NullableApiFlowBatchInputInputsInner) Set(val *ApiFlowBatchInputInputsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiFlowBatchInputInputsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiFlowBatchInputInputsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiFlowBatchInputInputsInner(val *ApiFlowBatchInputInputsInner) *NullableApiFlowBatchInputInputsInner {
	return &NullableApiFlowBatchInputInputsInner{value: val, isSet: true}
}

func (v NullableApiFlowBatchInputInputsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiFlowBatchInputInputsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


