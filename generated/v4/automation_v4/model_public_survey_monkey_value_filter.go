/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicSurveyMonkeyValueFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicSurveyMonkeyValueFilter{}

// PublicSurveyMonkeyValueFilter struct for PublicSurveyMonkeyValueFilter
type PublicSurveyMonkeyValueFilter struct {
	ValueComparison PublicSurveyMonkeyValueFilterValueComparison `json:"valueComparison"`
	SurveyId string `json:"surveyId"`
	SurveyQuestion string `json:"surveyQuestion"`
	FilterType string `json:"filterType"`
	SurveyAnswerRowId *string `json:"surveyAnswerRowId,omitempty"`
	SurveyAnswerColId *string `json:"surveyAnswerColId,omitempty"`
	Operator string `json:"operator"`
}

type _PublicSurveyMonkeyValueFilter PublicSurveyMonkeyValueFilter

// NewPublicSurveyMonkeyValueFilter instantiates a new PublicSurveyMonkeyValueFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicSurveyMonkeyValueFilter(valueComparison PublicSurveyMonkeyValueFilterValueComparison, surveyId string, surveyQuestion string, filterType string, operator string) *PublicSurveyMonkeyValueFilter {
	this := PublicSurveyMonkeyValueFilter{}
	this.ValueComparison = valueComparison
	this.SurveyId = surveyId
	this.SurveyQuestion = surveyQuestion
	this.FilterType = filterType
	this.Operator = operator
	return &this
}

// NewPublicSurveyMonkeyValueFilterWithDefaults instantiates a new PublicSurveyMonkeyValueFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicSurveyMonkeyValueFilterWithDefaults() *PublicSurveyMonkeyValueFilter {
	this := PublicSurveyMonkeyValueFilter{}
	var filterType string = "SURVEY_MONKEY_VALUE"
	this.FilterType = filterType
	return &this
}

// GetValueComparison returns the ValueComparison field value
func (o *PublicSurveyMonkeyValueFilter) GetValueComparison() PublicSurveyMonkeyValueFilterValueComparison {
	if o == nil {
		var ret PublicSurveyMonkeyValueFilterValueComparison
		return ret
	}

	return o.ValueComparison
}

// GetValueComparisonOk returns a tuple with the ValueComparison field value
// and a boolean to check if the value has been set.
func (o *PublicSurveyMonkeyValueFilter) GetValueComparisonOk() (*PublicSurveyMonkeyValueFilterValueComparison, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueComparison, true
}

// SetValueComparison sets field value
func (o *PublicSurveyMonkeyValueFilter) SetValueComparison(v PublicSurveyMonkeyValueFilterValueComparison) {
	o.ValueComparison = v
}

// GetSurveyId returns the SurveyId field value
func (o *PublicSurveyMonkeyValueFilter) GetSurveyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SurveyId
}

// GetSurveyIdOk returns a tuple with the SurveyId field value
// and a boolean to check if the value has been set.
func (o *PublicSurveyMonkeyValueFilter) GetSurveyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SurveyId, true
}

// SetSurveyId sets field value
func (o *PublicSurveyMonkeyValueFilter) SetSurveyId(v string) {
	o.SurveyId = v
}

// GetSurveyQuestion returns the SurveyQuestion field value
func (o *PublicSurveyMonkeyValueFilter) GetSurveyQuestion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SurveyQuestion
}

// GetSurveyQuestionOk returns a tuple with the SurveyQuestion field value
// and a boolean to check if the value has been set.
func (o *PublicSurveyMonkeyValueFilter) GetSurveyQuestionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SurveyQuestion, true
}

// SetSurveyQuestion sets field value
func (o *PublicSurveyMonkeyValueFilter) SetSurveyQuestion(v string) {
	o.SurveyQuestion = v
}

// GetFilterType returns the FilterType field value
func (o *PublicSurveyMonkeyValueFilter) GetFilterType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FilterType
}

// GetFilterTypeOk returns a tuple with the FilterType field value
// and a boolean to check if the value has been set.
func (o *PublicSurveyMonkeyValueFilter) GetFilterTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilterType, true
}

// SetFilterType sets field value
func (o *PublicSurveyMonkeyValueFilter) SetFilterType(v string) {
	o.FilterType = v
}

// GetSurveyAnswerRowId returns the SurveyAnswerRowId field value if set, zero value otherwise.
func (o *PublicSurveyMonkeyValueFilter) GetSurveyAnswerRowId() string {
	if o == nil || IsNil(o.SurveyAnswerRowId) {
		var ret string
		return ret
	}
	return *o.SurveyAnswerRowId
}

// GetSurveyAnswerRowIdOk returns a tuple with the SurveyAnswerRowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSurveyMonkeyValueFilter) GetSurveyAnswerRowIdOk() (*string, bool) {
	if o == nil || IsNil(o.SurveyAnswerRowId) {
		return nil, false
	}
	return o.SurveyAnswerRowId, true
}

// HasSurveyAnswerRowId returns a boolean if a field has been set.
func (o *PublicSurveyMonkeyValueFilter) HasSurveyAnswerRowId() bool {
	if o != nil && !IsNil(o.SurveyAnswerRowId) {
		return true
	}

	return false
}

// SetSurveyAnswerRowId gets a reference to the given string and assigns it to the SurveyAnswerRowId field.
func (o *PublicSurveyMonkeyValueFilter) SetSurveyAnswerRowId(v string) {
	o.SurveyAnswerRowId = &v
}

// GetSurveyAnswerColId returns the SurveyAnswerColId field value if set, zero value otherwise.
func (o *PublicSurveyMonkeyValueFilter) GetSurveyAnswerColId() string {
	if o == nil || IsNil(o.SurveyAnswerColId) {
		var ret string
		return ret
	}
	return *o.SurveyAnswerColId
}

// GetSurveyAnswerColIdOk returns a tuple with the SurveyAnswerColId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSurveyMonkeyValueFilter) GetSurveyAnswerColIdOk() (*string, bool) {
	if o == nil || IsNil(o.SurveyAnswerColId) {
		return nil, false
	}
	return o.SurveyAnswerColId, true
}

// HasSurveyAnswerColId returns a boolean if a field has been set.
func (o *PublicSurveyMonkeyValueFilter) HasSurveyAnswerColId() bool {
	if o != nil && !IsNil(o.SurveyAnswerColId) {
		return true
	}

	return false
}

// SetSurveyAnswerColId gets a reference to the given string and assigns it to the SurveyAnswerColId field.
func (o *PublicSurveyMonkeyValueFilter) SetSurveyAnswerColId(v string) {
	o.SurveyAnswerColId = &v
}

// GetOperator returns the Operator field value
func (o *PublicSurveyMonkeyValueFilter) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *PublicSurveyMonkeyValueFilter) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *PublicSurveyMonkeyValueFilter) SetOperator(v string) {
	o.Operator = v
}

func (o PublicSurveyMonkeyValueFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicSurveyMonkeyValueFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["valueComparison"] = o.ValueComparison
	toSerialize["surveyId"] = o.SurveyId
	toSerialize["surveyQuestion"] = o.SurveyQuestion
	toSerialize["filterType"] = o.FilterType
	if !IsNil(o.SurveyAnswerRowId) {
		toSerialize["surveyAnswerRowId"] = o.SurveyAnswerRowId
	}
	if !IsNil(o.SurveyAnswerColId) {
		toSerialize["surveyAnswerColId"] = o.SurveyAnswerColId
	}
	toSerialize["operator"] = o.Operator
	return toSerialize, nil
}

func (o *PublicSurveyMonkeyValueFilter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"valueComparison",
		"surveyId",
		"surveyQuestion",
		"filterType",
		"operator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicSurveyMonkeyValueFilter := _PublicSurveyMonkeyValueFilter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicSurveyMonkeyValueFilter)

	if err != nil {
		return err
	}

	*o = PublicSurveyMonkeyValueFilter(varPublicSurveyMonkeyValueFilter)

	return err
}

type NullablePublicSurveyMonkeyValueFilter struct {
	value *PublicSurveyMonkeyValueFilter
	isSet bool
}

func (v NullablePublicSurveyMonkeyValueFilter) Get() *PublicSurveyMonkeyValueFilter {
	return v.value
}

func (v *NullablePublicSurveyMonkeyValueFilter) Set(val *PublicSurveyMonkeyValueFilter) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicSurveyMonkeyValueFilter) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicSurveyMonkeyValueFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicSurveyMonkeyValueFilter(val *PublicSurveyMonkeyValueFilter) *NullablePublicSurveyMonkeyValueFilter {
	return &NullablePublicSurveyMonkeyValueFilter{value: val, isSet: true}
}

func (v NullablePublicSurveyMonkeyValueFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicSurveyMonkeyValueFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


