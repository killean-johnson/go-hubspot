/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApiContactFlowAllOfActions - struct for ApiContactFlowAllOfActions
type ApiContactFlowAllOfActions struct {
	ApiABTestBranchAction *ApiABTestBranchAction
	ApiCustomCodeAction *ApiCustomCodeAction
	ApiListBranchAction *ApiListBranchAction
	ApiSingleConnectionAction *ApiSingleConnectionAction
	ApiStaticBranchAction *ApiStaticBranchAction
	ApiWebhookAction *ApiWebhookAction
}

// ApiABTestBranchActionAsApiContactFlowAllOfActions is a convenience function that returns ApiABTestBranchAction wrapped in ApiContactFlowAllOfActions
func ApiABTestBranchActionAsApiContactFlowAllOfActions(v *ApiABTestBranchAction) ApiContactFlowAllOfActions {
	return ApiContactFlowAllOfActions{
		ApiABTestBranchAction: v,
	}
}

// ApiCustomCodeActionAsApiContactFlowAllOfActions is a convenience function that returns ApiCustomCodeAction wrapped in ApiContactFlowAllOfActions
func ApiCustomCodeActionAsApiContactFlowAllOfActions(v *ApiCustomCodeAction) ApiContactFlowAllOfActions {
	return ApiContactFlowAllOfActions{
		ApiCustomCodeAction: v,
	}
}

// ApiListBranchActionAsApiContactFlowAllOfActions is a convenience function that returns ApiListBranchAction wrapped in ApiContactFlowAllOfActions
func ApiListBranchActionAsApiContactFlowAllOfActions(v *ApiListBranchAction) ApiContactFlowAllOfActions {
	return ApiContactFlowAllOfActions{
		ApiListBranchAction: v,
	}
}

// ApiSingleConnectionActionAsApiContactFlowAllOfActions is a convenience function that returns ApiSingleConnectionAction wrapped in ApiContactFlowAllOfActions
func ApiSingleConnectionActionAsApiContactFlowAllOfActions(v *ApiSingleConnectionAction) ApiContactFlowAllOfActions {
	return ApiContactFlowAllOfActions{
		ApiSingleConnectionAction: v,
	}
}

// ApiStaticBranchActionAsApiContactFlowAllOfActions is a convenience function that returns ApiStaticBranchAction wrapped in ApiContactFlowAllOfActions
func ApiStaticBranchActionAsApiContactFlowAllOfActions(v *ApiStaticBranchAction) ApiContactFlowAllOfActions {
	return ApiContactFlowAllOfActions{
		ApiStaticBranchAction: v,
	}
}

// ApiWebhookActionAsApiContactFlowAllOfActions is a convenience function that returns ApiWebhookAction wrapped in ApiContactFlowAllOfActions
func ApiWebhookActionAsApiContactFlowAllOfActions(v *ApiWebhookAction) ApiContactFlowAllOfActions {
	return ApiContactFlowAllOfActions{
		ApiWebhookAction: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApiContactFlowAllOfActions) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApiABTestBranchAction
	err = newStrictDecoder(data).Decode(&dst.ApiABTestBranchAction)
	if err == nil {
		jsonApiABTestBranchAction, _ := json.Marshal(dst.ApiABTestBranchAction)
		if string(jsonApiABTestBranchAction) == "{}" { // empty struct
			dst.ApiABTestBranchAction = nil
		} else {
			if err = validator.Validate(dst.ApiABTestBranchAction); err != nil {
				dst.ApiABTestBranchAction = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiABTestBranchAction = nil
	}

	// try to unmarshal data into ApiCustomCodeAction
	err = newStrictDecoder(data).Decode(&dst.ApiCustomCodeAction)
	if err == nil {
		jsonApiCustomCodeAction, _ := json.Marshal(dst.ApiCustomCodeAction)
		if string(jsonApiCustomCodeAction) == "{}" { // empty struct
			dst.ApiCustomCodeAction = nil
		} else {
			if err = validator.Validate(dst.ApiCustomCodeAction); err != nil {
				dst.ApiCustomCodeAction = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiCustomCodeAction = nil
	}

	// try to unmarshal data into ApiListBranchAction
	err = newStrictDecoder(data).Decode(&dst.ApiListBranchAction)
	if err == nil {
		jsonApiListBranchAction, _ := json.Marshal(dst.ApiListBranchAction)
		if string(jsonApiListBranchAction) == "{}" { // empty struct
			dst.ApiListBranchAction = nil
		} else {
			if err = validator.Validate(dst.ApiListBranchAction); err != nil {
				dst.ApiListBranchAction = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiListBranchAction = nil
	}

	// try to unmarshal data into ApiSingleConnectionAction
	err = newStrictDecoder(data).Decode(&dst.ApiSingleConnectionAction)
	if err == nil {
		jsonApiSingleConnectionAction, _ := json.Marshal(dst.ApiSingleConnectionAction)
		if string(jsonApiSingleConnectionAction) == "{}" { // empty struct
			dst.ApiSingleConnectionAction = nil
		} else {
			if err = validator.Validate(dst.ApiSingleConnectionAction); err != nil {
				dst.ApiSingleConnectionAction = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiSingleConnectionAction = nil
	}

	// try to unmarshal data into ApiStaticBranchAction
	err = newStrictDecoder(data).Decode(&dst.ApiStaticBranchAction)
	if err == nil {
		jsonApiStaticBranchAction, _ := json.Marshal(dst.ApiStaticBranchAction)
		if string(jsonApiStaticBranchAction) == "{}" { // empty struct
			dst.ApiStaticBranchAction = nil
		} else {
			if err = validator.Validate(dst.ApiStaticBranchAction); err != nil {
				dst.ApiStaticBranchAction = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiStaticBranchAction = nil
	}

	// try to unmarshal data into ApiWebhookAction
	err = newStrictDecoder(data).Decode(&dst.ApiWebhookAction)
	if err == nil {
		jsonApiWebhookAction, _ := json.Marshal(dst.ApiWebhookAction)
		if string(jsonApiWebhookAction) == "{}" { // empty struct
			dst.ApiWebhookAction = nil
		} else {
			if err = validator.Validate(dst.ApiWebhookAction); err != nil {
				dst.ApiWebhookAction = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiWebhookAction = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApiABTestBranchAction = nil
		dst.ApiCustomCodeAction = nil
		dst.ApiListBranchAction = nil
		dst.ApiSingleConnectionAction = nil
		dst.ApiStaticBranchAction = nil
		dst.ApiWebhookAction = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApiContactFlowAllOfActions)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApiContactFlowAllOfActions)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApiContactFlowAllOfActions) MarshalJSON() ([]byte, error) {
	if src.ApiABTestBranchAction != nil {
		return json.Marshal(&src.ApiABTestBranchAction)
	}

	if src.ApiCustomCodeAction != nil {
		return json.Marshal(&src.ApiCustomCodeAction)
	}

	if src.ApiListBranchAction != nil {
		return json.Marshal(&src.ApiListBranchAction)
	}

	if src.ApiSingleConnectionAction != nil {
		return json.Marshal(&src.ApiSingleConnectionAction)
	}

	if src.ApiStaticBranchAction != nil {
		return json.Marshal(&src.ApiStaticBranchAction)
	}

	if src.ApiWebhookAction != nil {
		return json.Marshal(&src.ApiWebhookAction)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApiContactFlowAllOfActions) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApiABTestBranchAction != nil {
		return obj.ApiABTestBranchAction
	}

	if obj.ApiCustomCodeAction != nil {
		return obj.ApiCustomCodeAction
	}

	if obj.ApiListBranchAction != nil {
		return obj.ApiListBranchAction
	}

	if obj.ApiSingleConnectionAction != nil {
		return obj.ApiSingleConnectionAction
	}

	if obj.ApiStaticBranchAction != nil {
		return obj.ApiStaticBranchAction
	}

	if obj.ApiWebhookAction != nil {
		return obj.ApiWebhookAction
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApiContactFlowAllOfActions) GetActualInstanceValue() (interface{}) {
	if obj.ApiABTestBranchAction != nil {
		return *obj.ApiABTestBranchAction
	}

	if obj.ApiCustomCodeAction != nil {
		return *obj.ApiCustomCodeAction
	}

	if obj.ApiListBranchAction != nil {
		return *obj.ApiListBranchAction
	}

	if obj.ApiSingleConnectionAction != nil {
		return *obj.ApiSingleConnectionAction
	}

	if obj.ApiStaticBranchAction != nil {
		return *obj.ApiStaticBranchAction
	}

	if obj.ApiWebhookAction != nil {
		return *obj.ApiWebhookAction
	}

	// all schemas are nil
	return nil
}

type NullableApiContactFlowAllOfActions struct {
	value *ApiContactFlowAllOfActions
	isSet bool
}

func (v NullableApiContactFlowAllOfActions) Get() *ApiContactFlowAllOfActions {
	return v.value
}

func (v *NullableApiContactFlowAllOfActions) Set(val *ApiContactFlowAllOfActions) {
	v.value = val
	v.isSet = true
}

func (v NullableApiContactFlowAllOfActions) IsSet() bool {
	return v.isSet
}

func (v *NullableApiContactFlowAllOfActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiContactFlowAllOfActions(val *ApiContactFlowAllOfActions) *NullableApiContactFlowAllOfActions {
	return &NullableApiContactFlowAllOfActions{value: val, isSet: true}
}

func (v NullableApiContactFlowAllOfActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiContactFlowAllOfActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


