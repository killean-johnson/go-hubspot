/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApiContactFlowAllOfEnrollmentCriteria - struct for ApiContactFlowAllOfEnrollmentCriteria
type ApiContactFlowAllOfEnrollmentCriteria struct {
	ApiEventBasedEnrollmentCriteria *ApiEventBasedEnrollmentCriteria
	ApiListBasedEnrollmentCriteria *ApiListBasedEnrollmentCriteria
	ApiManualEnrollmentCriteria *ApiManualEnrollmentCriteria
}

// ApiEventBasedEnrollmentCriteriaAsApiContactFlowAllOfEnrollmentCriteria is a convenience function that returns ApiEventBasedEnrollmentCriteria wrapped in ApiContactFlowAllOfEnrollmentCriteria
func ApiEventBasedEnrollmentCriteriaAsApiContactFlowAllOfEnrollmentCriteria(v *ApiEventBasedEnrollmentCriteria) ApiContactFlowAllOfEnrollmentCriteria {
	return ApiContactFlowAllOfEnrollmentCriteria{
		ApiEventBasedEnrollmentCriteria: v,
	}
}

// ApiListBasedEnrollmentCriteriaAsApiContactFlowAllOfEnrollmentCriteria is a convenience function that returns ApiListBasedEnrollmentCriteria wrapped in ApiContactFlowAllOfEnrollmentCriteria
func ApiListBasedEnrollmentCriteriaAsApiContactFlowAllOfEnrollmentCriteria(v *ApiListBasedEnrollmentCriteria) ApiContactFlowAllOfEnrollmentCriteria {
	return ApiContactFlowAllOfEnrollmentCriteria{
		ApiListBasedEnrollmentCriteria: v,
	}
}

// ApiManualEnrollmentCriteriaAsApiContactFlowAllOfEnrollmentCriteria is a convenience function that returns ApiManualEnrollmentCriteria wrapped in ApiContactFlowAllOfEnrollmentCriteria
func ApiManualEnrollmentCriteriaAsApiContactFlowAllOfEnrollmentCriteria(v *ApiManualEnrollmentCriteria) ApiContactFlowAllOfEnrollmentCriteria {
	return ApiContactFlowAllOfEnrollmentCriteria{
		ApiManualEnrollmentCriteria: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApiContactFlowAllOfEnrollmentCriteria) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApiEventBasedEnrollmentCriteria
	err = newStrictDecoder(data).Decode(&dst.ApiEventBasedEnrollmentCriteria)
	if err == nil {
		jsonApiEventBasedEnrollmentCriteria, _ := json.Marshal(dst.ApiEventBasedEnrollmentCriteria)
		if string(jsonApiEventBasedEnrollmentCriteria) == "{}" { // empty struct
			dst.ApiEventBasedEnrollmentCriteria = nil
		} else {
			if err = validator.Validate(dst.ApiEventBasedEnrollmentCriteria); err != nil {
				dst.ApiEventBasedEnrollmentCriteria = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiEventBasedEnrollmentCriteria = nil
	}

	// try to unmarshal data into ApiListBasedEnrollmentCriteria
	err = newStrictDecoder(data).Decode(&dst.ApiListBasedEnrollmentCriteria)
	if err == nil {
		jsonApiListBasedEnrollmentCriteria, _ := json.Marshal(dst.ApiListBasedEnrollmentCriteria)
		if string(jsonApiListBasedEnrollmentCriteria) == "{}" { // empty struct
			dst.ApiListBasedEnrollmentCriteria = nil
		} else {
			if err = validator.Validate(dst.ApiListBasedEnrollmentCriteria); err != nil {
				dst.ApiListBasedEnrollmentCriteria = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiListBasedEnrollmentCriteria = nil
	}

	// try to unmarshal data into ApiManualEnrollmentCriteria
	err = newStrictDecoder(data).Decode(&dst.ApiManualEnrollmentCriteria)
	if err == nil {
		jsonApiManualEnrollmentCriteria, _ := json.Marshal(dst.ApiManualEnrollmentCriteria)
		if string(jsonApiManualEnrollmentCriteria) == "{}" { // empty struct
			dst.ApiManualEnrollmentCriteria = nil
		} else {
			if err = validator.Validate(dst.ApiManualEnrollmentCriteria); err != nil {
				dst.ApiManualEnrollmentCriteria = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiManualEnrollmentCriteria = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApiEventBasedEnrollmentCriteria = nil
		dst.ApiListBasedEnrollmentCriteria = nil
		dst.ApiManualEnrollmentCriteria = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApiContactFlowAllOfEnrollmentCriteria)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApiContactFlowAllOfEnrollmentCriteria)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApiContactFlowAllOfEnrollmentCriteria) MarshalJSON() ([]byte, error) {
	if src.ApiEventBasedEnrollmentCriteria != nil {
		return json.Marshal(&src.ApiEventBasedEnrollmentCriteria)
	}

	if src.ApiListBasedEnrollmentCriteria != nil {
		return json.Marshal(&src.ApiListBasedEnrollmentCriteria)
	}

	if src.ApiManualEnrollmentCriteria != nil {
		return json.Marshal(&src.ApiManualEnrollmentCriteria)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApiContactFlowAllOfEnrollmentCriteria) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApiEventBasedEnrollmentCriteria != nil {
		return obj.ApiEventBasedEnrollmentCriteria
	}

	if obj.ApiListBasedEnrollmentCriteria != nil {
		return obj.ApiListBasedEnrollmentCriteria
	}

	if obj.ApiManualEnrollmentCriteria != nil {
		return obj.ApiManualEnrollmentCriteria
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApiContactFlowAllOfEnrollmentCriteria) GetActualInstanceValue() (interface{}) {
	if obj.ApiEventBasedEnrollmentCriteria != nil {
		return *obj.ApiEventBasedEnrollmentCriteria
	}

	if obj.ApiListBasedEnrollmentCriteria != nil {
		return *obj.ApiListBasedEnrollmentCriteria
	}

	if obj.ApiManualEnrollmentCriteria != nil {
		return *obj.ApiManualEnrollmentCriteria
	}

	// all schemas are nil
	return nil
}

type NullableApiContactFlowAllOfEnrollmentCriteria struct {
	value *ApiContactFlowAllOfEnrollmentCriteria
	isSet bool
}

func (v NullableApiContactFlowAllOfEnrollmentCriteria) Get() *ApiContactFlowAllOfEnrollmentCriteria {
	return v.value
}

func (v *NullableApiContactFlowAllOfEnrollmentCriteria) Set(val *ApiContactFlowAllOfEnrollmentCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableApiContactFlowAllOfEnrollmentCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableApiContactFlowAllOfEnrollmentCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiContactFlowAllOfEnrollmentCriteria(val *ApiContactFlowAllOfEnrollmentCriteria) *NullableApiContactFlowAllOfEnrollmentCriteria {
	return &NullableApiContactFlowAllOfEnrollmentCriteria{value: val, isSet: true}
}

func (v NullableApiContactFlowAllOfEnrollmentCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiContactFlowAllOfEnrollmentCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


