/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ApiContactFlow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiContactFlow{}

// ApiContactFlow struct for ApiContactFlow
type ApiContactFlow struct {
	Type string `json:"type"`
	Id string `json:"id"`
	IsEnabled bool `json:"isEnabled"`
	FlowType string `json:"flowType"`
	RevisionId string `json:"revisionId"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
	StartActionId *string `json:"startActionId,omitempty"`
	NextAvailableActionId string `json:"nextAvailableActionId"`
	Actions []ApiContactFlowAllOfActions `json:"actions"`
	EnrollmentCriteria *ApiContactFlowAllOfEnrollmentCriteria `json:"enrollmentCriteria,omitempty"`
	EnrollmentSchedule *ApiContactFlowAllOfEnrollmentSchedule `json:"enrollmentSchedule,omitempty"`
	TimeWindows []ApiTimeWindow `json:"timeWindows"`
	BlockedDates []ApiBlockedDate `json:"blockedDates"`
	CustomProperties map[string]string `json:"customProperties"`
	DataSources []ApiContactFlowAllOfDataSources `json:"dataSources"`
	CrmObjectCreationStatus string `json:"crmObjectCreationStatus"`
	SuppressionListIds []int32 `json:"suppressionListIds"`
	GoalFilterBranch *ApiContactFlowAllOfGoalFilterBranch `json:"goalFilterBranch,omitempty"`
	CanEnrollFromSalesforce bool `json:"canEnrollFromSalesforce"`
	EventAnchor *ApiContactFlowAllOfEventAnchor `json:"eventAnchor,omitempty"`
	UnEnrollmentSetting *ApiUnEnrollmentSetting `json:"unEnrollmentSetting,omitempty"`
	ObjectTypeId string `json:"objectTypeId"`
	SuppressionFilterBranch *ApiPlatformFlowAllOfSuppressionFilterBranch `json:"suppressionFilterBranch,omitempty"`
}

type _ApiContactFlow ApiContactFlow

// NewApiContactFlow instantiates a new ApiContactFlow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiContactFlow(type_ string, id string, isEnabled bool, flowType string, revisionId string, createdAt time.Time, updatedAt time.Time, nextAvailableActionId string, actions []ApiContactFlowAllOfActions, timeWindows []ApiTimeWindow, blockedDates []ApiBlockedDate, customProperties map[string]string, dataSources []ApiContactFlowAllOfDataSources, crmObjectCreationStatus string, suppressionListIds []int32, canEnrollFromSalesforce bool, objectTypeId string) *ApiContactFlow {
	this := ApiContactFlow{}
	this.Type = type_
	this.Id = id
	this.IsEnabled = isEnabled
	this.FlowType = flowType
	this.RevisionId = revisionId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.NextAvailableActionId = nextAvailableActionId
	this.Actions = actions
	this.TimeWindows = timeWindows
	this.BlockedDates = blockedDates
	this.CustomProperties = customProperties
	this.DataSources = dataSources
	this.CrmObjectCreationStatus = crmObjectCreationStatus
	this.SuppressionListIds = suppressionListIds
	this.CanEnrollFromSalesforce = canEnrollFromSalesforce
	this.ObjectTypeId = objectTypeId
	return &this
}

// NewApiContactFlowWithDefaults instantiates a new ApiContactFlow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiContactFlowWithDefaults() *ApiContactFlow {
	this := ApiContactFlow{}
	var type_ string = "CONTACT_FLOW"
	this.Type = type_
	return &this
}

// GetType returns the Type field value
func (o *ApiContactFlow) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiContactFlow) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *ApiContactFlow) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApiContactFlow) SetId(v string) {
	o.Id = v
}

// GetIsEnabled returns the IsEnabled field value
func (o *ApiContactFlow) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *ApiContactFlow) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetFlowType returns the FlowType field value
func (o *ApiContactFlow) GetFlowType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FlowType
}

// GetFlowTypeOk returns a tuple with the FlowType field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetFlowTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowType, true
}

// SetFlowType sets field value
func (o *ApiContactFlow) SetFlowType(v string) {
	o.FlowType = v
}

// GetRevisionId returns the RevisionId field value
func (o *ApiContactFlow) GetRevisionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetRevisionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionId, true
}

// SetRevisionId sets field value
func (o *ApiContactFlow) SetRevisionId(v string) {
	o.RevisionId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiContactFlow) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiContactFlow) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiContactFlow) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiContactFlow) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiContactFlow) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiContactFlow) SetDescription(v string) {
	o.Description = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ApiContactFlow) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ApiContactFlow) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ApiContactFlow) SetUuid(v string) {
	o.Uuid = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ApiContactFlow) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ApiContactFlow) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ApiContactFlow) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ApiContactFlow) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetStartActionId returns the StartActionId field value if set, zero value otherwise.
func (o *ApiContactFlow) GetStartActionId() string {
	if o == nil || IsNil(o.StartActionId) {
		var ret string
		return ret
	}
	return *o.StartActionId
}

// GetStartActionIdOk returns a tuple with the StartActionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetStartActionIdOk() (*string, bool) {
	if o == nil || IsNil(o.StartActionId) {
		return nil, false
	}
	return o.StartActionId, true
}

// HasStartActionId returns a boolean if a field has been set.
func (o *ApiContactFlow) HasStartActionId() bool {
	if o != nil && !IsNil(o.StartActionId) {
		return true
	}

	return false
}

// SetStartActionId gets a reference to the given string and assigns it to the StartActionId field.
func (o *ApiContactFlow) SetStartActionId(v string) {
	o.StartActionId = &v
}

// GetNextAvailableActionId returns the NextAvailableActionId field value
func (o *ApiContactFlow) GetNextAvailableActionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextAvailableActionId
}

// GetNextAvailableActionIdOk returns a tuple with the NextAvailableActionId field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetNextAvailableActionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextAvailableActionId, true
}

// SetNextAvailableActionId sets field value
func (o *ApiContactFlow) SetNextAvailableActionId(v string) {
	o.NextAvailableActionId = v
}

// GetActions returns the Actions field value
func (o *ApiContactFlow) GetActions() []ApiContactFlowAllOfActions {
	if o == nil {
		var ret []ApiContactFlowAllOfActions
		return ret
	}

	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetActionsOk() ([]ApiContactFlowAllOfActions, bool) {
	if o == nil {
		return nil, false
	}
	return o.Actions, true
}

// SetActions sets field value
func (o *ApiContactFlow) SetActions(v []ApiContactFlowAllOfActions) {
	o.Actions = v
}

// GetEnrollmentCriteria returns the EnrollmentCriteria field value if set, zero value otherwise.
func (o *ApiContactFlow) GetEnrollmentCriteria() ApiContactFlowAllOfEnrollmentCriteria {
	if o == nil || IsNil(o.EnrollmentCriteria) {
		var ret ApiContactFlowAllOfEnrollmentCriteria
		return ret
	}
	return *o.EnrollmentCriteria
}

// GetEnrollmentCriteriaOk returns a tuple with the EnrollmentCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetEnrollmentCriteriaOk() (*ApiContactFlowAllOfEnrollmentCriteria, bool) {
	if o == nil || IsNil(o.EnrollmentCriteria) {
		return nil, false
	}
	return o.EnrollmentCriteria, true
}

// HasEnrollmentCriteria returns a boolean if a field has been set.
func (o *ApiContactFlow) HasEnrollmentCriteria() bool {
	if o != nil && !IsNil(o.EnrollmentCriteria) {
		return true
	}

	return false
}

// SetEnrollmentCriteria gets a reference to the given ApiContactFlowAllOfEnrollmentCriteria and assigns it to the EnrollmentCriteria field.
func (o *ApiContactFlow) SetEnrollmentCriteria(v ApiContactFlowAllOfEnrollmentCriteria) {
	o.EnrollmentCriteria = &v
}

// GetEnrollmentSchedule returns the EnrollmentSchedule field value if set, zero value otherwise.
func (o *ApiContactFlow) GetEnrollmentSchedule() ApiContactFlowAllOfEnrollmentSchedule {
	if o == nil || IsNil(o.EnrollmentSchedule) {
		var ret ApiContactFlowAllOfEnrollmentSchedule
		return ret
	}
	return *o.EnrollmentSchedule
}

// GetEnrollmentScheduleOk returns a tuple with the EnrollmentSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetEnrollmentScheduleOk() (*ApiContactFlowAllOfEnrollmentSchedule, bool) {
	if o == nil || IsNil(o.EnrollmentSchedule) {
		return nil, false
	}
	return o.EnrollmentSchedule, true
}

// HasEnrollmentSchedule returns a boolean if a field has been set.
func (o *ApiContactFlow) HasEnrollmentSchedule() bool {
	if o != nil && !IsNil(o.EnrollmentSchedule) {
		return true
	}

	return false
}

// SetEnrollmentSchedule gets a reference to the given ApiContactFlowAllOfEnrollmentSchedule and assigns it to the EnrollmentSchedule field.
func (o *ApiContactFlow) SetEnrollmentSchedule(v ApiContactFlowAllOfEnrollmentSchedule) {
	o.EnrollmentSchedule = &v
}

// GetTimeWindows returns the TimeWindows field value
func (o *ApiContactFlow) GetTimeWindows() []ApiTimeWindow {
	if o == nil {
		var ret []ApiTimeWindow
		return ret
	}

	return o.TimeWindows
}

// GetTimeWindowsOk returns a tuple with the TimeWindows field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetTimeWindowsOk() ([]ApiTimeWindow, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeWindows, true
}

// SetTimeWindows sets field value
func (o *ApiContactFlow) SetTimeWindows(v []ApiTimeWindow) {
	o.TimeWindows = v
}

// GetBlockedDates returns the BlockedDates field value
func (o *ApiContactFlow) GetBlockedDates() []ApiBlockedDate {
	if o == nil {
		var ret []ApiBlockedDate
		return ret
	}

	return o.BlockedDates
}

// GetBlockedDatesOk returns a tuple with the BlockedDates field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetBlockedDatesOk() ([]ApiBlockedDate, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockedDates, true
}

// SetBlockedDates sets field value
func (o *ApiContactFlow) SetBlockedDates(v []ApiBlockedDate) {
	o.BlockedDates = v
}

// GetCustomProperties returns the CustomProperties field value
func (o *ApiContactFlow) GetCustomProperties() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetCustomPropertiesOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomProperties, true
}

// SetCustomProperties sets field value
func (o *ApiContactFlow) SetCustomProperties(v map[string]string) {
	o.CustomProperties = v
}

// GetDataSources returns the DataSources field value
func (o *ApiContactFlow) GetDataSources() []ApiContactFlowAllOfDataSources {
	if o == nil {
		var ret []ApiContactFlowAllOfDataSources
		return ret
	}

	return o.DataSources
}

// GetDataSourcesOk returns a tuple with the DataSources field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetDataSourcesOk() ([]ApiContactFlowAllOfDataSources, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataSources, true
}

// SetDataSources sets field value
func (o *ApiContactFlow) SetDataSources(v []ApiContactFlowAllOfDataSources) {
	o.DataSources = v
}

// GetCrmObjectCreationStatus returns the CrmObjectCreationStatus field value
func (o *ApiContactFlow) GetCrmObjectCreationStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CrmObjectCreationStatus
}

// GetCrmObjectCreationStatusOk returns a tuple with the CrmObjectCreationStatus field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetCrmObjectCreationStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CrmObjectCreationStatus, true
}

// SetCrmObjectCreationStatus sets field value
func (o *ApiContactFlow) SetCrmObjectCreationStatus(v string) {
	o.CrmObjectCreationStatus = v
}

// GetSuppressionListIds returns the SuppressionListIds field value
func (o *ApiContactFlow) GetSuppressionListIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.SuppressionListIds
}

// GetSuppressionListIdsOk returns a tuple with the SuppressionListIds field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetSuppressionListIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuppressionListIds, true
}

// SetSuppressionListIds sets field value
func (o *ApiContactFlow) SetSuppressionListIds(v []int32) {
	o.SuppressionListIds = v
}

// GetGoalFilterBranch returns the GoalFilterBranch field value if set, zero value otherwise.
func (o *ApiContactFlow) GetGoalFilterBranch() ApiContactFlowAllOfGoalFilterBranch {
	if o == nil || IsNil(o.GoalFilterBranch) {
		var ret ApiContactFlowAllOfGoalFilterBranch
		return ret
	}
	return *o.GoalFilterBranch
}

// GetGoalFilterBranchOk returns a tuple with the GoalFilterBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetGoalFilterBranchOk() (*ApiContactFlowAllOfGoalFilterBranch, bool) {
	if o == nil || IsNil(o.GoalFilterBranch) {
		return nil, false
	}
	return o.GoalFilterBranch, true
}

// HasGoalFilterBranch returns a boolean if a field has been set.
func (o *ApiContactFlow) HasGoalFilterBranch() bool {
	if o != nil && !IsNil(o.GoalFilterBranch) {
		return true
	}

	return false
}

// SetGoalFilterBranch gets a reference to the given ApiContactFlowAllOfGoalFilterBranch and assigns it to the GoalFilterBranch field.
func (o *ApiContactFlow) SetGoalFilterBranch(v ApiContactFlowAllOfGoalFilterBranch) {
	o.GoalFilterBranch = &v
}

// GetCanEnrollFromSalesforce returns the CanEnrollFromSalesforce field value
func (o *ApiContactFlow) GetCanEnrollFromSalesforce() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanEnrollFromSalesforce
}

// GetCanEnrollFromSalesforceOk returns a tuple with the CanEnrollFromSalesforce field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetCanEnrollFromSalesforceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanEnrollFromSalesforce, true
}

// SetCanEnrollFromSalesforce sets field value
func (o *ApiContactFlow) SetCanEnrollFromSalesforce(v bool) {
	o.CanEnrollFromSalesforce = v
}

// GetEventAnchor returns the EventAnchor field value if set, zero value otherwise.
func (o *ApiContactFlow) GetEventAnchor() ApiContactFlowAllOfEventAnchor {
	if o == nil || IsNil(o.EventAnchor) {
		var ret ApiContactFlowAllOfEventAnchor
		return ret
	}
	return *o.EventAnchor
}

// GetEventAnchorOk returns a tuple with the EventAnchor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetEventAnchorOk() (*ApiContactFlowAllOfEventAnchor, bool) {
	if o == nil || IsNil(o.EventAnchor) {
		return nil, false
	}
	return o.EventAnchor, true
}

// HasEventAnchor returns a boolean if a field has been set.
func (o *ApiContactFlow) HasEventAnchor() bool {
	if o != nil && !IsNil(o.EventAnchor) {
		return true
	}

	return false
}

// SetEventAnchor gets a reference to the given ApiContactFlowAllOfEventAnchor and assigns it to the EventAnchor field.
func (o *ApiContactFlow) SetEventAnchor(v ApiContactFlowAllOfEventAnchor) {
	o.EventAnchor = &v
}

// GetUnEnrollmentSetting returns the UnEnrollmentSetting field value if set, zero value otherwise.
func (o *ApiContactFlow) GetUnEnrollmentSetting() ApiUnEnrollmentSetting {
	if o == nil || IsNil(o.UnEnrollmentSetting) {
		var ret ApiUnEnrollmentSetting
		return ret
	}
	return *o.UnEnrollmentSetting
}

// GetUnEnrollmentSettingOk returns a tuple with the UnEnrollmentSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetUnEnrollmentSettingOk() (*ApiUnEnrollmentSetting, bool) {
	if o == nil || IsNil(o.UnEnrollmentSetting) {
		return nil, false
	}
	return o.UnEnrollmentSetting, true
}

// HasUnEnrollmentSetting returns a boolean if a field has been set.
func (o *ApiContactFlow) HasUnEnrollmentSetting() bool {
	if o != nil && !IsNil(o.UnEnrollmentSetting) {
		return true
	}

	return false
}

// SetUnEnrollmentSetting gets a reference to the given ApiUnEnrollmentSetting and assigns it to the UnEnrollmentSetting field.
func (o *ApiContactFlow) SetUnEnrollmentSetting(v ApiUnEnrollmentSetting) {
	o.UnEnrollmentSetting = &v
}

// GetObjectTypeId returns the ObjectTypeId field value
func (o *ApiContactFlow) GetObjectTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectTypeId
}

// GetObjectTypeIdOk returns a tuple with the ObjectTypeId field value
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetObjectTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectTypeId, true
}

// SetObjectTypeId sets field value
func (o *ApiContactFlow) SetObjectTypeId(v string) {
	o.ObjectTypeId = v
}

// GetSuppressionFilterBranch returns the SuppressionFilterBranch field value if set, zero value otherwise.
func (o *ApiContactFlow) GetSuppressionFilterBranch() ApiPlatformFlowAllOfSuppressionFilterBranch {
	if o == nil || IsNil(o.SuppressionFilterBranch) {
		var ret ApiPlatformFlowAllOfSuppressionFilterBranch
		return ret
	}
	return *o.SuppressionFilterBranch
}

// GetSuppressionFilterBranchOk returns a tuple with the SuppressionFilterBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiContactFlow) GetSuppressionFilterBranchOk() (*ApiPlatformFlowAllOfSuppressionFilterBranch, bool) {
	if o == nil || IsNil(o.SuppressionFilterBranch) {
		return nil, false
	}
	return o.SuppressionFilterBranch, true
}

// HasSuppressionFilterBranch returns a boolean if a field has been set.
func (o *ApiContactFlow) HasSuppressionFilterBranch() bool {
	if o != nil && !IsNil(o.SuppressionFilterBranch) {
		return true
	}

	return false
}

// SetSuppressionFilterBranch gets a reference to the given ApiPlatformFlowAllOfSuppressionFilterBranch and assigns it to the SuppressionFilterBranch field.
func (o *ApiContactFlow) SetSuppressionFilterBranch(v ApiPlatformFlowAllOfSuppressionFilterBranch) {
	o.SuppressionFilterBranch = &v
}

func (o ApiContactFlow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiContactFlow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["id"] = o.Id
	toSerialize["isEnabled"] = o.IsEnabled
	toSerialize["flowType"] = o.FlowType
	toSerialize["revisionId"] = o.RevisionId
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	if !IsNil(o.StartActionId) {
		toSerialize["startActionId"] = o.StartActionId
	}
	toSerialize["nextAvailableActionId"] = o.NextAvailableActionId
	toSerialize["actions"] = o.Actions
	if !IsNil(o.EnrollmentCriteria) {
		toSerialize["enrollmentCriteria"] = o.EnrollmentCriteria
	}
	if !IsNil(o.EnrollmentSchedule) {
		toSerialize["enrollmentSchedule"] = o.EnrollmentSchedule
	}
	toSerialize["timeWindows"] = o.TimeWindows
	toSerialize["blockedDates"] = o.BlockedDates
	toSerialize["customProperties"] = o.CustomProperties
	toSerialize["dataSources"] = o.DataSources
	toSerialize["crmObjectCreationStatus"] = o.CrmObjectCreationStatus
	toSerialize["suppressionListIds"] = o.SuppressionListIds
	if !IsNil(o.GoalFilterBranch) {
		toSerialize["goalFilterBranch"] = o.GoalFilterBranch
	}
	toSerialize["canEnrollFromSalesforce"] = o.CanEnrollFromSalesforce
	if !IsNil(o.EventAnchor) {
		toSerialize["eventAnchor"] = o.EventAnchor
	}
	if !IsNil(o.UnEnrollmentSetting) {
		toSerialize["unEnrollmentSetting"] = o.UnEnrollmentSetting
	}
	toSerialize["objectTypeId"] = o.ObjectTypeId
	if !IsNil(o.SuppressionFilterBranch) {
		toSerialize["suppressionFilterBranch"] = o.SuppressionFilterBranch
	}
	return toSerialize, nil
}

func (o *ApiContactFlow) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"id",
		"isEnabled",
		"flowType",
		"revisionId",
		"createdAt",
		"updatedAt",
		"nextAvailableActionId",
		"actions",
		"timeWindows",
		"blockedDates",
		"customProperties",
		"dataSources",
		"crmObjectCreationStatus",
		"suppressionListIds",
		"canEnrollFromSalesforce",
		"objectTypeId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiContactFlow := _ApiContactFlow{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiContactFlow)

	if err != nil {
		return err
	}

	*o = ApiContactFlow(varApiContactFlow)

	return err
}

type NullableApiContactFlow struct {
	value *ApiContactFlow
	isSet bool
}

func (v NullableApiContactFlow) Get() *ApiContactFlow {
	return v.value
}

func (v *NullableApiContactFlow) Set(val *ApiContactFlow) {
	v.value = val
	v.isSet = true
}

func (v NullableApiContactFlow) IsSet() bool {
	return v.isSet
}

func (v *NullableApiContactFlow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiContactFlow(val *ApiContactFlow) *NullableApiContactFlow {
	return &NullableApiContactFlow{value: val, isSet: true}
}

func (v NullableApiContactFlow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiContactFlow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


