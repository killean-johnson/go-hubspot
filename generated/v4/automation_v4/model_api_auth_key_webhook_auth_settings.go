/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiAuthKeyWebhookAuthSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAuthKeyWebhookAuthSettings{}

// ApiAuthKeyWebhookAuthSettings struct for ApiAuthKeyWebhookAuthSettings
type ApiAuthKeyWebhookAuthSettings struct {
	// The secret to pass through in this auth key.
	SecretName string `json:"secretName"`
	// The name to use for this auth key.
	Name string `json:"name"`
	// Where in the request this auth key should be located: \"HEADER\" or \"QUERY_PARAM\"
	Location string `json:"location"`
	// The type of webhook auth settings this is, can be: \"AUTH_KEY\" or \"SIGNATURE\"
	Type string `json:"type"`
}

type _ApiAuthKeyWebhookAuthSettings ApiAuthKeyWebhookAuthSettings

// NewApiAuthKeyWebhookAuthSettings instantiates a new ApiAuthKeyWebhookAuthSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAuthKeyWebhookAuthSettings(secretName string, name string, location string, type_ string) *ApiAuthKeyWebhookAuthSettings {
	this := ApiAuthKeyWebhookAuthSettings{}
	this.SecretName = secretName
	this.Name = name
	this.Location = location
	this.Type = type_
	return &this
}

// NewApiAuthKeyWebhookAuthSettingsWithDefaults instantiates a new ApiAuthKeyWebhookAuthSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAuthKeyWebhookAuthSettingsWithDefaults() *ApiAuthKeyWebhookAuthSettings {
	this := ApiAuthKeyWebhookAuthSettings{}
	var type_ string = "AUTH_KEY"
	this.Type = type_
	return &this
}

// GetSecretName returns the SecretName field value
func (o *ApiAuthKeyWebhookAuthSettings) GetSecretName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretName
}

// GetSecretNameOk returns a tuple with the SecretName field value
// and a boolean to check if the value has been set.
func (o *ApiAuthKeyWebhookAuthSettings) GetSecretNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretName, true
}

// SetSecretName sets field value
func (o *ApiAuthKeyWebhookAuthSettings) SetSecretName(v string) {
	o.SecretName = v
}

// GetName returns the Name field value
func (o *ApiAuthKeyWebhookAuthSettings) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiAuthKeyWebhookAuthSettings) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiAuthKeyWebhookAuthSettings) SetName(v string) {
	o.Name = v
}

// GetLocation returns the Location field value
func (o *ApiAuthKeyWebhookAuthSettings) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *ApiAuthKeyWebhookAuthSettings) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *ApiAuthKeyWebhookAuthSettings) SetLocation(v string) {
	o.Location = v
}

// GetType returns the Type field value
func (o *ApiAuthKeyWebhookAuthSettings) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiAuthKeyWebhookAuthSettings) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiAuthKeyWebhookAuthSettings) SetType(v string) {
	o.Type = v
}

func (o ApiAuthKeyWebhookAuthSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAuthKeyWebhookAuthSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["secretName"] = o.SecretName
	toSerialize["name"] = o.Name
	toSerialize["location"] = o.Location
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *ApiAuthKeyWebhookAuthSettings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"secretName",
		"name",
		"location",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiAuthKeyWebhookAuthSettings := _ApiAuthKeyWebhookAuthSettings{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiAuthKeyWebhookAuthSettings)

	if err != nil {
		return err
	}

	*o = ApiAuthKeyWebhookAuthSettings(varApiAuthKeyWebhookAuthSettings)

	return err
}

type NullableApiAuthKeyWebhookAuthSettings struct {
	value *ApiAuthKeyWebhookAuthSettings
	isSet bool
}

func (v NullableApiAuthKeyWebhookAuthSettings) Get() *ApiAuthKeyWebhookAuthSettings {
	return v.value
}

func (v *NullableApiAuthKeyWebhookAuthSettings) Set(val *ApiAuthKeyWebhookAuthSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAuthKeyWebhookAuthSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAuthKeyWebhookAuthSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAuthKeyWebhookAuthSettings(val *ApiAuthKeyWebhookAuthSettings) *NullableApiAuthKeyWebhookAuthSettings {
	return &NullableApiAuthKeyWebhookAuthSettings{value: val, isSet: true}
}

func (v NullableApiAuthKeyWebhookAuthSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAuthKeyWebhookAuthSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


