/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiWebhookAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiWebhookAction{}

// ApiWebhookAction struct for ApiWebhookAction
type ApiWebhookAction struct {
	// The HTTP method to use when calling the webhook URL
	Method string `json:"method"`
	QueryParams []ApiInputVariable `json:"queryParams"`
	// The ID for this action.
	ActionId string `json:"actionId"`
	Connection *ApiConnection `json:"connection,omitempty"`
	// The type of action this is, can be: \"STATIC_BRANCH\", \"LIST_BRANCH\", \"AB_TEST_BRANCH\", \"CUSTOM_CODE\", \"WEBHOOK\", or \"SINGLE_CONNECTION\"
	Type string `json:"type"`
	AuthSettings *ApiWebhookActionAuthSettings `json:"authSettings,omitempty"`
	// The URL to call each time this action is executed.
	WebhookUrl string `json:"webhookUrl"`
}

type _ApiWebhookAction ApiWebhookAction

// NewApiWebhookAction instantiates a new ApiWebhookAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiWebhookAction(method string, queryParams []ApiInputVariable, actionId string, type_ string, webhookUrl string) *ApiWebhookAction {
	this := ApiWebhookAction{}
	this.Method = method
	this.QueryParams = queryParams
	this.ActionId = actionId
	this.Type = type_
	this.WebhookUrl = webhookUrl
	return &this
}

// NewApiWebhookActionWithDefaults instantiates a new ApiWebhookAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiWebhookActionWithDefaults() *ApiWebhookAction {
	this := ApiWebhookAction{}
	var type_ string = "WEBHOOK"
	this.Type = type_
	return &this
}

// GetMethod returns the Method field value
func (o *ApiWebhookAction) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *ApiWebhookAction) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *ApiWebhookAction) SetMethod(v string) {
	o.Method = v
}

// GetQueryParams returns the QueryParams field value
func (o *ApiWebhookAction) GetQueryParams() []ApiInputVariable {
	if o == nil {
		var ret []ApiInputVariable
		return ret
	}

	return o.QueryParams
}

// GetQueryParamsOk returns a tuple with the QueryParams field value
// and a boolean to check if the value has been set.
func (o *ApiWebhookAction) GetQueryParamsOk() ([]ApiInputVariable, bool) {
	if o == nil {
		return nil, false
	}
	return o.QueryParams, true
}

// SetQueryParams sets field value
func (o *ApiWebhookAction) SetQueryParams(v []ApiInputVariable) {
	o.QueryParams = v
}

// GetActionId returns the ActionId field value
func (o *ApiWebhookAction) GetActionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionId
}

// GetActionIdOk returns a tuple with the ActionId field value
// and a boolean to check if the value has been set.
func (o *ApiWebhookAction) GetActionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionId, true
}

// SetActionId sets field value
func (o *ApiWebhookAction) SetActionId(v string) {
	o.ActionId = v
}

// GetConnection returns the Connection field value if set, zero value otherwise.
func (o *ApiWebhookAction) GetConnection() ApiConnection {
	if o == nil || IsNil(o.Connection) {
		var ret ApiConnection
		return ret
	}
	return *o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWebhookAction) GetConnectionOk() (*ApiConnection, bool) {
	if o == nil || IsNil(o.Connection) {
		return nil, false
	}
	return o.Connection, true
}

// HasConnection returns a boolean if a field has been set.
func (o *ApiWebhookAction) HasConnection() bool {
	if o != nil && !IsNil(o.Connection) {
		return true
	}

	return false
}

// SetConnection gets a reference to the given ApiConnection and assigns it to the Connection field.
func (o *ApiWebhookAction) SetConnection(v ApiConnection) {
	o.Connection = &v
}

// GetType returns the Type field value
func (o *ApiWebhookAction) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiWebhookAction) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiWebhookAction) SetType(v string) {
	o.Type = v
}

// GetAuthSettings returns the AuthSettings field value if set, zero value otherwise.
func (o *ApiWebhookAction) GetAuthSettings() ApiWebhookActionAuthSettings {
	if o == nil || IsNil(o.AuthSettings) {
		var ret ApiWebhookActionAuthSettings
		return ret
	}
	return *o.AuthSettings
}

// GetAuthSettingsOk returns a tuple with the AuthSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWebhookAction) GetAuthSettingsOk() (*ApiWebhookActionAuthSettings, bool) {
	if o == nil || IsNil(o.AuthSettings) {
		return nil, false
	}
	return o.AuthSettings, true
}

// HasAuthSettings returns a boolean if a field has been set.
func (o *ApiWebhookAction) HasAuthSettings() bool {
	if o != nil && !IsNil(o.AuthSettings) {
		return true
	}

	return false
}

// SetAuthSettings gets a reference to the given ApiWebhookActionAuthSettings and assigns it to the AuthSettings field.
func (o *ApiWebhookAction) SetAuthSettings(v ApiWebhookActionAuthSettings) {
	o.AuthSettings = &v
}

// GetWebhookUrl returns the WebhookUrl field value
func (o *ApiWebhookAction) GetWebhookUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookUrl
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value
// and a boolean to check if the value has been set.
func (o *ApiWebhookAction) GetWebhookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookUrl, true
}

// SetWebhookUrl sets field value
func (o *ApiWebhookAction) SetWebhookUrl(v string) {
	o.WebhookUrl = v
}

func (o ApiWebhookAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiWebhookAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["method"] = o.Method
	toSerialize["queryParams"] = o.QueryParams
	toSerialize["actionId"] = o.ActionId
	if !IsNil(o.Connection) {
		toSerialize["connection"] = o.Connection
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.AuthSettings) {
		toSerialize["authSettings"] = o.AuthSettings
	}
	toSerialize["webhookUrl"] = o.WebhookUrl
	return toSerialize, nil
}

func (o *ApiWebhookAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"method",
		"queryParams",
		"actionId",
		"type",
		"webhookUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiWebhookAction := _ApiWebhookAction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiWebhookAction)

	if err != nil {
		return err
	}

	*o = ApiWebhookAction(varApiWebhookAction)

	return err
}

type NullableApiWebhookAction struct {
	value *ApiWebhookAction
	isSet bool
}

func (v NullableApiWebhookAction) Get() *ApiWebhookAction {
	return v.value
}

func (v *NullableApiWebhookAction) Set(val *ApiWebhookAction) {
	v.value = val
	v.isSet = true
}

func (v NullableApiWebhookAction) IsSet() bool {
	return v.isSet
}

func (v *NullableApiWebhookAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiWebhookAction(val *ApiWebhookAction) *NullableApiWebhookAction {
	return &NullableApiWebhookAction{value: val, isSet: true}
}

func (v NullableApiWebhookAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiWebhookAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


