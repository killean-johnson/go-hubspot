/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApiContactFlowCreateRequestAllOfEnrollmentSchedule - struct for ApiContactFlowCreateRequestAllOfEnrollmentSchedule
type ApiContactFlowCreateRequestAllOfEnrollmentSchedule struct {
	ApiDailyEnrollmentSchedule *ApiDailyEnrollmentSchedule
	ApiMonthlyRelativeDaysEnrollmentSchedule *ApiMonthlyRelativeDaysEnrollmentSchedule
	ApiMonthlySpecificDaysEnrollmentSchedule *ApiMonthlySpecificDaysEnrollmentSchedule
	ApiPropertyBasedEnrollmentSchedule *ApiPropertyBasedEnrollmentSchedule
	ApiWeeklyEnrollmentSchedule *ApiWeeklyEnrollmentSchedule
	ApiYearlyEnrollmentSchedule *ApiYearlyEnrollmentSchedule
}

// ApiDailyEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule is a convenience function that returns ApiDailyEnrollmentSchedule wrapped in ApiContactFlowCreateRequestAllOfEnrollmentSchedule
func ApiDailyEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule(v *ApiDailyEnrollmentSchedule) ApiContactFlowCreateRequestAllOfEnrollmentSchedule {
	return ApiContactFlowCreateRequestAllOfEnrollmentSchedule{
		ApiDailyEnrollmentSchedule: v,
	}
}

// ApiMonthlyRelativeDaysEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule is a convenience function that returns ApiMonthlyRelativeDaysEnrollmentSchedule wrapped in ApiContactFlowCreateRequestAllOfEnrollmentSchedule
func ApiMonthlyRelativeDaysEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule(v *ApiMonthlyRelativeDaysEnrollmentSchedule) ApiContactFlowCreateRequestAllOfEnrollmentSchedule {
	return ApiContactFlowCreateRequestAllOfEnrollmentSchedule{
		ApiMonthlyRelativeDaysEnrollmentSchedule: v,
	}
}

// ApiMonthlySpecificDaysEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule is a convenience function that returns ApiMonthlySpecificDaysEnrollmentSchedule wrapped in ApiContactFlowCreateRequestAllOfEnrollmentSchedule
func ApiMonthlySpecificDaysEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule(v *ApiMonthlySpecificDaysEnrollmentSchedule) ApiContactFlowCreateRequestAllOfEnrollmentSchedule {
	return ApiContactFlowCreateRequestAllOfEnrollmentSchedule{
		ApiMonthlySpecificDaysEnrollmentSchedule: v,
	}
}

// ApiPropertyBasedEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule is a convenience function that returns ApiPropertyBasedEnrollmentSchedule wrapped in ApiContactFlowCreateRequestAllOfEnrollmentSchedule
func ApiPropertyBasedEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule(v *ApiPropertyBasedEnrollmentSchedule) ApiContactFlowCreateRequestAllOfEnrollmentSchedule {
	return ApiContactFlowCreateRequestAllOfEnrollmentSchedule{
		ApiPropertyBasedEnrollmentSchedule: v,
	}
}

// ApiWeeklyEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule is a convenience function that returns ApiWeeklyEnrollmentSchedule wrapped in ApiContactFlowCreateRequestAllOfEnrollmentSchedule
func ApiWeeklyEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule(v *ApiWeeklyEnrollmentSchedule) ApiContactFlowCreateRequestAllOfEnrollmentSchedule {
	return ApiContactFlowCreateRequestAllOfEnrollmentSchedule{
		ApiWeeklyEnrollmentSchedule: v,
	}
}

// ApiYearlyEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule is a convenience function that returns ApiYearlyEnrollmentSchedule wrapped in ApiContactFlowCreateRequestAllOfEnrollmentSchedule
func ApiYearlyEnrollmentScheduleAsApiContactFlowCreateRequestAllOfEnrollmentSchedule(v *ApiYearlyEnrollmentSchedule) ApiContactFlowCreateRequestAllOfEnrollmentSchedule {
	return ApiContactFlowCreateRequestAllOfEnrollmentSchedule{
		ApiYearlyEnrollmentSchedule: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApiContactFlowCreateRequestAllOfEnrollmentSchedule) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApiDailyEnrollmentSchedule
	err = newStrictDecoder(data).Decode(&dst.ApiDailyEnrollmentSchedule)
	if err == nil {
		jsonApiDailyEnrollmentSchedule, _ := json.Marshal(dst.ApiDailyEnrollmentSchedule)
		if string(jsonApiDailyEnrollmentSchedule) == "{}" { // empty struct
			dst.ApiDailyEnrollmentSchedule = nil
		} else {
			if err = validator.Validate(dst.ApiDailyEnrollmentSchedule); err != nil {
				dst.ApiDailyEnrollmentSchedule = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiDailyEnrollmentSchedule = nil
	}

	// try to unmarshal data into ApiMonthlyRelativeDaysEnrollmentSchedule
	err = newStrictDecoder(data).Decode(&dst.ApiMonthlyRelativeDaysEnrollmentSchedule)
	if err == nil {
		jsonApiMonthlyRelativeDaysEnrollmentSchedule, _ := json.Marshal(dst.ApiMonthlyRelativeDaysEnrollmentSchedule)
		if string(jsonApiMonthlyRelativeDaysEnrollmentSchedule) == "{}" { // empty struct
			dst.ApiMonthlyRelativeDaysEnrollmentSchedule = nil
		} else {
			if err = validator.Validate(dst.ApiMonthlyRelativeDaysEnrollmentSchedule); err != nil {
				dst.ApiMonthlyRelativeDaysEnrollmentSchedule = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiMonthlyRelativeDaysEnrollmentSchedule = nil
	}

	// try to unmarshal data into ApiMonthlySpecificDaysEnrollmentSchedule
	err = newStrictDecoder(data).Decode(&dst.ApiMonthlySpecificDaysEnrollmentSchedule)
	if err == nil {
		jsonApiMonthlySpecificDaysEnrollmentSchedule, _ := json.Marshal(dst.ApiMonthlySpecificDaysEnrollmentSchedule)
		if string(jsonApiMonthlySpecificDaysEnrollmentSchedule) == "{}" { // empty struct
			dst.ApiMonthlySpecificDaysEnrollmentSchedule = nil
		} else {
			if err = validator.Validate(dst.ApiMonthlySpecificDaysEnrollmentSchedule); err != nil {
				dst.ApiMonthlySpecificDaysEnrollmentSchedule = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiMonthlySpecificDaysEnrollmentSchedule = nil
	}

	// try to unmarshal data into ApiPropertyBasedEnrollmentSchedule
	err = newStrictDecoder(data).Decode(&dst.ApiPropertyBasedEnrollmentSchedule)
	if err == nil {
		jsonApiPropertyBasedEnrollmentSchedule, _ := json.Marshal(dst.ApiPropertyBasedEnrollmentSchedule)
		if string(jsonApiPropertyBasedEnrollmentSchedule) == "{}" { // empty struct
			dst.ApiPropertyBasedEnrollmentSchedule = nil
		} else {
			if err = validator.Validate(dst.ApiPropertyBasedEnrollmentSchedule); err != nil {
				dst.ApiPropertyBasedEnrollmentSchedule = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiPropertyBasedEnrollmentSchedule = nil
	}

	// try to unmarshal data into ApiWeeklyEnrollmentSchedule
	err = newStrictDecoder(data).Decode(&dst.ApiWeeklyEnrollmentSchedule)
	if err == nil {
		jsonApiWeeklyEnrollmentSchedule, _ := json.Marshal(dst.ApiWeeklyEnrollmentSchedule)
		if string(jsonApiWeeklyEnrollmentSchedule) == "{}" { // empty struct
			dst.ApiWeeklyEnrollmentSchedule = nil
		} else {
			if err = validator.Validate(dst.ApiWeeklyEnrollmentSchedule); err != nil {
				dst.ApiWeeklyEnrollmentSchedule = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiWeeklyEnrollmentSchedule = nil
	}

	// try to unmarshal data into ApiYearlyEnrollmentSchedule
	err = newStrictDecoder(data).Decode(&dst.ApiYearlyEnrollmentSchedule)
	if err == nil {
		jsonApiYearlyEnrollmentSchedule, _ := json.Marshal(dst.ApiYearlyEnrollmentSchedule)
		if string(jsonApiYearlyEnrollmentSchedule) == "{}" { // empty struct
			dst.ApiYearlyEnrollmentSchedule = nil
		} else {
			if err = validator.Validate(dst.ApiYearlyEnrollmentSchedule); err != nil {
				dst.ApiYearlyEnrollmentSchedule = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApiYearlyEnrollmentSchedule = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApiDailyEnrollmentSchedule = nil
		dst.ApiMonthlyRelativeDaysEnrollmentSchedule = nil
		dst.ApiMonthlySpecificDaysEnrollmentSchedule = nil
		dst.ApiPropertyBasedEnrollmentSchedule = nil
		dst.ApiWeeklyEnrollmentSchedule = nil
		dst.ApiYearlyEnrollmentSchedule = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApiContactFlowCreateRequestAllOfEnrollmentSchedule)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApiContactFlowCreateRequestAllOfEnrollmentSchedule)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApiContactFlowCreateRequestAllOfEnrollmentSchedule) MarshalJSON() ([]byte, error) {
	if src.ApiDailyEnrollmentSchedule != nil {
		return json.Marshal(&src.ApiDailyEnrollmentSchedule)
	}

	if src.ApiMonthlyRelativeDaysEnrollmentSchedule != nil {
		return json.Marshal(&src.ApiMonthlyRelativeDaysEnrollmentSchedule)
	}

	if src.ApiMonthlySpecificDaysEnrollmentSchedule != nil {
		return json.Marshal(&src.ApiMonthlySpecificDaysEnrollmentSchedule)
	}

	if src.ApiPropertyBasedEnrollmentSchedule != nil {
		return json.Marshal(&src.ApiPropertyBasedEnrollmentSchedule)
	}

	if src.ApiWeeklyEnrollmentSchedule != nil {
		return json.Marshal(&src.ApiWeeklyEnrollmentSchedule)
	}

	if src.ApiYearlyEnrollmentSchedule != nil {
		return json.Marshal(&src.ApiYearlyEnrollmentSchedule)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApiContactFlowCreateRequestAllOfEnrollmentSchedule) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApiDailyEnrollmentSchedule != nil {
		return obj.ApiDailyEnrollmentSchedule
	}

	if obj.ApiMonthlyRelativeDaysEnrollmentSchedule != nil {
		return obj.ApiMonthlyRelativeDaysEnrollmentSchedule
	}

	if obj.ApiMonthlySpecificDaysEnrollmentSchedule != nil {
		return obj.ApiMonthlySpecificDaysEnrollmentSchedule
	}

	if obj.ApiPropertyBasedEnrollmentSchedule != nil {
		return obj.ApiPropertyBasedEnrollmentSchedule
	}

	if obj.ApiWeeklyEnrollmentSchedule != nil {
		return obj.ApiWeeklyEnrollmentSchedule
	}

	if obj.ApiYearlyEnrollmentSchedule != nil {
		return obj.ApiYearlyEnrollmentSchedule
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApiContactFlowCreateRequestAllOfEnrollmentSchedule) GetActualInstanceValue() (interface{}) {
	if obj.ApiDailyEnrollmentSchedule != nil {
		return *obj.ApiDailyEnrollmentSchedule
	}

	if obj.ApiMonthlyRelativeDaysEnrollmentSchedule != nil {
		return *obj.ApiMonthlyRelativeDaysEnrollmentSchedule
	}

	if obj.ApiMonthlySpecificDaysEnrollmentSchedule != nil {
		return *obj.ApiMonthlySpecificDaysEnrollmentSchedule
	}

	if obj.ApiPropertyBasedEnrollmentSchedule != nil {
		return *obj.ApiPropertyBasedEnrollmentSchedule
	}

	if obj.ApiWeeklyEnrollmentSchedule != nil {
		return *obj.ApiWeeklyEnrollmentSchedule
	}

	if obj.ApiYearlyEnrollmentSchedule != nil {
		return *obj.ApiYearlyEnrollmentSchedule
	}

	// all schemas are nil
	return nil
}

type NullableApiContactFlowCreateRequestAllOfEnrollmentSchedule struct {
	value *ApiContactFlowCreateRequestAllOfEnrollmentSchedule
	isSet bool
}

func (v NullableApiContactFlowCreateRequestAllOfEnrollmentSchedule) Get() *ApiContactFlowCreateRequestAllOfEnrollmentSchedule {
	return v.value
}

func (v *NullableApiContactFlowCreateRequestAllOfEnrollmentSchedule) Set(val *ApiContactFlowCreateRequestAllOfEnrollmentSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableApiContactFlowCreateRequestAllOfEnrollmentSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableApiContactFlowCreateRequestAllOfEnrollmentSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiContactFlowCreateRequestAllOfEnrollmentSchedule(val *ApiContactFlowCreateRequestAllOfEnrollmentSchedule) *NullableApiContactFlowCreateRequestAllOfEnrollmentSchedule {
	return &NullableApiContactFlowCreateRequestAllOfEnrollmentSchedule{value: val, isSet: true}
}

func (v NullableApiContactFlowCreateRequestAllOfEnrollmentSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiContactFlowCreateRequestAllOfEnrollmentSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


