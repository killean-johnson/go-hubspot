/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ApiFlowListing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiFlowListing{}

// ApiFlowListing struct for ApiFlowListing
type ApiFlowListing struct {
	// Deprecated. Will be removed.
	RevisionId string `json:"revisionId"`
	// The timestamp this flow was created.
	CreatedAt time.Time `json:"createdAt"`
	// The CRM object type for objects that can be enrolled into this flow.
	ObjectTypeId string `json:"objectTypeId"`
	// This controls whether or not the flow is \"enabled\" if it's actively listening for enrollment triggers and executing actions. If this is `false` the flow is not accepting any enrollments or executing any actions.
	IsEnabled bool `json:"isEnabled"`
	// The user-provided name for this flow. Names get auto-created for workflows that are created without a name.
	Name *string `json:"name,omitempty"`
	// The unique ID for this flow. This is auto-generated when creating the flow.
	Id string `json:"id"`
	// An optional unique key for this flow. This is only unique per-portal.
	Uuid *string `json:"uuid,omitempty"`
	// Deprecated. Will be removed.
	FlowType string `json:"flowType"`
	// The timestamp this flow was last updated.
	UpdatedAt time.Time `json:"updatedAt"`
}

type _ApiFlowListing ApiFlowListing

// NewApiFlowListing instantiates a new ApiFlowListing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiFlowListing(revisionId string, createdAt time.Time, objectTypeId string, isEnabled bool, id string, flowType string, updatedAt time.Time) *ApiFlowListing {
	this := ApiFlowListing{}
	this.RevisionId = revisionId
	this.CreatedAt = createdAt
	this.ObjectTypeId = objectTypeId
	this.IsEnabled = isEnabled
	this.Id = id
	this.FlowType = flowType
	this.UpdatedAt = updatedAt
	return &this
}

// NewApiFlowListingWithDefaults instantiates a new ApiFlowListing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiFlowListingWithDefaults() *ApiFlowListing {
	this := ApiFlowListing{}
	return &this
}

// GetRevisionId returns the RevisionId field value
func (o *ApiFlowListing) GetRevisionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value
// and a boolean to check if the value has been set.
func (o *ApiFlowListing) GetRevisionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionId, true
}

// SetRevisionId sets field value
func (o *ApiFlowListing) SetRevisionId(v string) {
	o.RevisionId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ApiFlowListing) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ApiFlowListing) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ApiFlowListing) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetObjectTypeId returns the ObjectTypeId field value
func (o *ApiFlowListing) GetObjectTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectTypeId
}

// GetObjectTypeIdOk returns a tuple with the ObjectTypeId field value
// and a boolean to check if the value has been set.
func (o *ApiFlowListing) GetObjectTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectTypeId, true
}

// SetObjectTypeId sets field value
func (o *ApiFlowListing) SetObjectTypeId(v string) {
	o.ObjectTypeId = v
}

// GetIsEnabled returns the IsEnabled field value
func (o *ApiFlowListing) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *ApiFlowListing) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *ApiFlowListing) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiFlowListing) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiFlowListing) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiFlowListing) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiFlowListing) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value
func (o *ApiFlowListing) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApiFlowListing) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApiFlowListing) SetId(v string) {
	o.Id = v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ApiFlowListing) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiFlowListing) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ApiFlowListing) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ApiFlowListing) SetUuid(v string) {
	o.Uuid = &v
}

// GetFlowType returns the FlowType field value
func (o *ApiFlowListing) GetFlowType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FlowType
}

// GetFlowTypeOk returns a tuple with the FlowType field value
// and a boolean to check if the value has been set.
func (o *ApiFlowListing) GetFlowTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowType, true
}

// SetFlowType sets field value
func (o *ApiFlowListing) SetFlowType(v string) {
	o.FlowType = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ApiFlowListing) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ApiFlowListing) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ApiFlowListing) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o ApiFlowListing) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiFlowListing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["revisionId"] = o.RevisionId
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["objectTypeId"] = o.ObjectTypeId
	toSerialize["isEnabled"] = o.IsEnabled
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	toSerialize["flowType"] = o.FlowType
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *ApiFlowListing) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"revisionId",
		"createdAt",
		"objectTypeId",
		"isEnabled",
		"id",
		"flowType",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiFlowListing := _ApiFlowListing{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiFlowListing)

	if err != nil {
		return err
	}

	*o = ApiFlowListing(varApiFlowListing)

	return err
}

type NullableApiFlowListing struct {
	value *ApiFlowListing
	isSet bool
}

func (v NullableApiFlowListing) Get() *ApiFlowListing {
	return v.value
}

func (v *NullableApiFlowListing) Set(val *ApiFlowListing) {
	v.value = val
	v.isSet = true
}

func (v NullableApiFlowListing) IsSet() bool {
	return v.isSet
}

func (v *NullableApiFlowListing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiFlowListing(val *ApiFlowListing) *NullableApiFlowListing {
	return &NullableApiFlowListing{value: val, isSet: true}
}

func (v NullableApiFlowListing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiFlowListing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


