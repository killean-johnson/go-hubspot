/*
Automation V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation_v4

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiPropertyBasedEnrollmentSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiPropertyBasedEnrollmentSchedule{}

// ApiPropertyBasedEnrollmentSchedule struct for ApiPropertyBasedEnrollmentSchedule
type ApiPropertyBasedEnrollmentSchedule struct {
	DateProperty string `json:"dateProperty"`
	DaysDelta int32 `json:"daysDelta"`
	Type string `json:"type"`
	Yearly bool `json:"yearly"`
	TimeOfDay ApiTimeOfDay `json:"timeOfDay"`
}

type _ApiPropertyBasedEnrollmentSchedule ApiPropertyBasedEnrollmentSchedule

// NewApiPropertyBasedEnrollmentSchedule instantiates a new ApiPropertyBasedEnrollmentSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPropertyBasedEnrollmentSchedule(dateProperty string, daysDelta int32, type_ string, yearly bool, timeOfDay ApiTimeOfDay) *ApiPropertyBasedEnrollmentSchedule {
	this := ApiPropertyBasedEnrollmentSchedule{}
	this.DateProperty = dateProperty
	this.DaysDelta = daysDelta
	this.Type = type_
	this.Yearly = yearly
	this.TimeOfDay = timeOfDay
	return &this
}

// NewApiPropertyBasedEnrollmentScheduleWithDefaults instantiates a new ApiPropertyBasedEnrollmentSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPropertyBasedEnrollmentScheduleWithDefaults() *ApiPropertyBasedEnrollmentSchedule {
	this := ApiPropertyBasedEnrollmentSchedule{}
	var type_ string = "PROPERTY_BASED"
	this.Type = type_
	return &this
}

// GetDateProperty returns the DateProperty field value
func (o *ApiPropertyBasedEnrollmentSchedule) GetDateProperty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateProperty
}

// GetDatePropertyOk returns a tuple with the DateProperty field value
// and a boolean to check if the value has been set.
func (o *ApiPropertyBasedEnrollmentSchedule) GetDatePropertyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateProperty, true
}

// SetDateProperty sets field value
func (o *ApiPropertyBasedEnrollmentSchedule) SetDateProperty(v string) {
	o.DateProperty = v
}

// GetDaysDelta returns the DaysDelta field value
func (o *ApiPropertyBasedEnrollmentSchedule) GetDaysDelta() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DaysDelta
}

// GetDaysDeltaOk returns a tuple with the DaysDelta field value
// and a boolean to check if the value has been set.
func (o *ApiPropertyBasedEnrollmentSchedule) GetDaysDeltaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DaysDelta, true
}

// SetDaysDelta sets field value
func (o *ApiPropertyBasedEnrollmentSchedule) SetDaysDelta(v int32) {
	o.DaysDelta = v
}

// GetType returns the Type field value
func (o *ApiPropertyBasedEnrollmentSchedule) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiPropertyBasedEnrollmentSchedule) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiPropertyBasedEnrollmentSchedule) SetType(v string) {
	o.Type = v
}

// GetYearly returns the Yearly field value
func (o *ApiPropertyBasedEnrollmentSchedule) GetYearly() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Yearly
}

// GetYearlyOk returns a tuple with the Yearly field value
// and a boolean to check if the value has been set.
func (o *ApiPropertyBasedEnrollmentSchedule) GetYearlyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Yearly, true
}

// SetYearly sets field value
func (o *ApiPropertyBasedEnrollmentSchedule) SetYearly(v bool) {
	o.Yearly = v
}

// GetTimeOfDay returns the TimeOfDay field value
func (o *ApiPropertyBasedEnrollmentSchedule) GetTimeOfDay() ApiTimeOfDay {
	if o == nil {
		var ret ApiTimeOfDay
		return ret
	}

	return o.TimeOfDay
}

// GetTimeOfDayOk returns a tuple with the TimeOfDay field value
// and a boolean to check if the value has been set.
func (o *ApiPropertyBasedEnrollmentSchedule) GetTimeOfDayOk() (*ApiTimeOfDay, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeOfDay, true
}

// SetTimeOfDay sets field value
func (o *ApiPropertyBasedEnrollmentSchedule) SetTimeOfDay(v ApiTimeOfDay) {
	o.TimeOfDay = v
}

func (o ApiPropertyBasedEnrollmentSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiPropertyBasedEnrollmentSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dateProperty"] = o.DateProperty
	toSerialize["daysDelta"] = o.DaysDelta
	toSerialize["type"] = o.Type
	toSerialize["yearly"] = o.Yearly
	toSerialize["timeOfDay"] = o.TimeOfDay
	return toSerialize, nil
}

func (o *ApiPropertyBasedEnrollmentSchedule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dateProperty",
		"daysDelta",
		"type",
		"yearly",
		"timeOfDay",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiPropertyBasedEnrollmentSchedule := _ApiPropertyBasedEnrollmentSchedule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiPropertyBasedEnrollmentSchedule)

	if err != nil {
		return err
	}

	*o = ApiPropertyBasedEnrollmentSchedule(varApiPropertyBasedEnrollmentSchedule)

	return err
}

type NullableApiPropertyBasedEnrollmentSchedule struct {
	value *ApiPropertyBasedEnrollmentSchedule
	isSet bool
}

func (v NullableApiPropertyBasedEnrollmentSchedule) Get() *ApiPropertyBasedEnrollmentSchedule {
	return v.value
}

func (v *NullableApiPropertyBasedEnrollmentSchedule) Set(val *ApiPropertyBasedEnrollmentSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPropertyBasedEnrollmentSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPropertyBasedEnrollmentSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPropertyBasedEnrollmentSchedule(val *ApiPropertyBasedEnrollmentSchedule) *NullableApiPropertyBasedEnrollmentSchedule {
	return &NullableApiPropertyBasedEnrollmentSchedule{value: val, isSet: true}
}

func (v NullableApiPropertyBasedEnrollmentSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPropertyBasedEnrollmentSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


