/*
Automation Sequences

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sequences

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PublicSequenceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicSequenceResponse{}

// PublicSequenceResponse struct for PublicSequenceResponse
type PublicSequenceResponse struct {
	CreatedAt time.Time `json:"createdAt"`
	Settings *PublicSequenceSettingsResponse `json:"settings,omitempty"`
	Name string `json:"name"`
	Id string `json:"id"`
	UserId string `json:"userId"`
	Steps []PublicSequenceStepResponse `json:"steps"`
	FolderId *string `json:"folderId,omitempty"`
	UpdatedAt time.Time `json:"updatedAt"`
	Dependencies []PublicSequenceStepDependencyResponse `json:"dependencies"`
}

type _PublicSequenceResponse PublicSequenceResponse

// NewPublicSequenceResponse instantiates a new PublicSequenceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicSequenceResponse(createdAt time.Time, name string, id string, userId string, steps []PublicSequenceStepResponse, updatedAt time.Time, dependencies []PublicSequenceStepDependencyResponse) *PublicSequenceResponse {
	this := PublicSequenceResponse{}
	this.CreatedAt = createdAt
	this.Name = name
	this.Id = id
	this.UserId = userId
	this.Steps = steps
	this.UpdatedAt = updatedAt
	this.Dependencies = dependencies
	return &this
}

// NewPublicSequenceResponseWithDefaults instantiates a new PublicSequenceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicSequenceResponseWithDefaults() *PublicSequenceResponse {
	this := PublicSequenceResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *PublicSequenceResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PublicSequenceResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *PublicSequenceResponse) GetSettings() PublicSequenceSettingsResponse {
	if o == nil || IsNil(o.Settings) {
		var ret PublicSequenceSettingsResponse
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSequenceResponse) GetSettingsOk() (*PublicSequenceSettingsResponse, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *PublicSequenceResponse) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given PublicSequenceSettingsResponse and assigns it to the Settings field.
func (o *PublicSequenceResponse) SetSettings(v PublicSequenceSettingsResponse) {
	o.Settings = &v
}

// GetName returns the Name field value
func (o *PublicSequenceResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PublicSequenceResponse) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *PublicSequenceResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PublicSequenceResponse) SetId(v string) {
	o.Id = v
}

// GetUserId returns the UserId field value
func (o *PublicSequenceResponse) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceResponse) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *PublicSequenceResponse) SetUserId(v string) {
	o.UserId = v
}

// GetSteps returns the Steps field value
func (o *PublicSequenceResponse) GetSteps() []PublicSequenceStepResponse {
	if o == nil {
		var ret []PublicSequenceStepResponse
		return ret
	}

	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceResponse) GetStepsOk() ([]PublicSequenceStepResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Steps, true
}

// SetSteps sets field value
func (o *PublicSequenceResponse) SetSteps(v []PublicSequenceStepResponse) {
	o.Steps = v
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *PublicSequenceResponse) GetFolderId() string {
	if o == nil || IsNil(o.FolderId) {
		var ret string
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSequenceResponse) GetFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.FolderId) {
		return nil, false
	}
	return o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *PublicSequenceResponse) HasFolderId() bool {
	if o != nil && !IsNil(o.FolderId) {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *PublicSequenceResponse) SetFolderId(v string) {
	o.FolderId = &v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PublicSequenceResponse) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PublicSequenceResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetDependencies returns the Dependencies field value
func (o *PublicSequenceResponse) GetDependencies() []PublicSequenceStepDependencyResponse {
	if o == nil {
		var ret []PublicSequenceStepDependencyResponse
		return ret
	}

	return o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceResponse) GetDependenciesOk() ([]PublicSequenceStepDependencyResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dependencies, true
}

// SetDependencies sets field value
func (o *PublicSequenceResponse) SetDependencies(v []PublicSequenceStepDependencyResponse) {
	o.Dependencies = v
}

func (o PublicSequenceResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicSequenceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	toSerialize["name"] = o.Name
	toSerialize["id"] = o.Id
	toSerialize["userId"] = o.UserId
	toSerialize["steps"] = o.Steps
	if !IsNil(o.FolderId) {
		toSerialize["folderId"] = o.FolderId
	}
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["dependencies"] = o.Dependencies
	return toSerialize, nil
}

func (o *PublicSequenceResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"name",
		"id",
		"userId",
		"steps",
		"updatedAt",
		"dependencies",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicSequenceResponse := _PublicSequenceResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicSequenceResponse)

	if err != nil {
		return err
	}

	*o = PublicSequenceResponse(varPublicSequenceResponse)

	return err
}

type NullablePublicSequenceResponse struct {
	value *PublicSequenceResponse
	isSet bool
}

func (v NullablePublicSequenceResponse) Get() *PublicSequenceResponse {
	return v.value
}

func (v *NullablePublicSequenceResponse) Set(val *PublicSequenceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicSequenceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicSequenceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicSequenceResponse(val *PublicSequenceResponse) *NullablePublicSequenceResponse {
	return &NullablePublicSequenceResponse{value: val, isSet: true}
}

func (v NullablePublicSequenceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicSequenceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


