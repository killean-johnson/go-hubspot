/*
Automation Sequences

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sequences

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicSequenceEnrollmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicSequenceEnrollmentRequest{}

// PublicSequenceEnrollmentRequest struct for PublicSequenceEnrollmentRequest
type PublicSequenceEnrollmentRequest struct {
	ContactId string `json:"contactId"`
	SenderEmail string `json:"senderEmail"`
	SequenceId string `json:"sequenceId"`
}

type _PublicSequenceEnrollmentRequest PublicSequenceEnrollmentRequest

// NewPublicSequenceEnrollmentRequest instantiates a new PublicSequenceEnrollmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicSequenceEnrollmentRequest(contactId string, senderEmail string, sequenceId string) *PublicSequenceEnrollmentRequest {
	this := PublicSequenceEnrollmentRequest{}
	this.ContactId = contactId
	this.SenderEmail = senderEmail
	this.SequenceId = sequenceId
	return &this
}

// NewPublicSequenceEnrollmentRequestWithDefaults instantiates a new PublicSequenceEnrollmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicSequenceEnrollmentRequestWithDefaults() *PublicSequenceEnrollmentRequest {
	this := PublicSequenceEnrollmentRequest{}
	return &this
}

// GetContactId returns the ContactId field value
func (o *PublicSequenceEnrollmentRequest) GetContactId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContactId
}

// GetContactIdOk returns a tuple with the ContactId field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceEnrollmentRequest) GetContactIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContactId, true
}

// SetContactId sets field value
func (o *PublicSequenceEnrollmentRequest) SetContactId(v string) {
	o.ContactId = v
}

// GetSenderEmail returns the SenderEmail field value
func (o *PublicSequenceEnrollmentRequest) GetSenderEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SenderEmail
}

// GetSenderEmailOk returns a tuple with the SenderEmail field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceEnrollmentRequest) GetSenderEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SenderEmail, true
}

// SetSenderEmail sets field value
func (o *PublicSequenceEnrollmentRequest) SetSenderEmail(v string) {
	o.SenderEmail = v
}

// GetSequenceId returns the SequenceId field value
func (o *PublicSequenceEnrollmentRequest) GetSequenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SequenceId
}

// GetSequenceIdOk returns a tuple with the SequenceId field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceEnrollmentRequest) GetSequenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SequenceId, true
}

// SetSequenceId sets field value
func (o *PublicSequenceEnrollmentRequest) SetSequenceId(v string) {
	o.SequenceId = v
}

func (o PublicSequenceEnrollmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicSequenceEnrollmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contactId"] = o.ContactId
	toSerialize["senderEmail"] = o.SenderEmail
	toSerialize["sequenceId"] = o.SequenceId
	return toSerialize, nil
}

func (o *PublicSequenceEnrollmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contactId",
		"senderEmail",
		"sequenceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicSequenceEnrollmentRequest := _PublicSequenceEnrollmentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicSequenceEnrollmentRequest)

	if err != nil {
		return err
	}

	*o = PublicSequenceEnrollmentRequest(varPublicSequenceEnrollmentRequest)

	return err
}

type NullablePublicSequenceEnrollmentRequest struct {
	value *PublicSequenceEnrollmentRequest
	isSet bool
}

func (v NullablePublicSequenceEnrollmentRequest) Get() *PublicSequenceEnrollmentRequest {
	return v.value
}

func (v *NullablePublicSequenceEnrollmentRequest) Set(val *PublicSequenceEnrollmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicSequenceEnrollmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicSequenceEnrollmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicSequenceEnrollmentRequest(val *PublicSequenceEnrollmentRequest) *NullablePublicSequenceEnrollmentRequest {
	return &NullablePublicSequenceEnrollmentRequest{value: val, isSet: true}
}

func (v NullablePublicSequenceEnrollmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicSequenceEnrollmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


