/*
Automation Sequences

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sequences

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PublicSequenceLiteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicSequenceLiteResponse{}

// PublicSequenceLiteResponse struct for PublicSequenceLiteResponse
type PublicSequenceLiteResponse struct {
	CreatedAt time.Time `json:"createdAt"`
	Name string `json:"name"`
	Id string `json:"id"`
	UserId string `json:"userId"`
	FolderId *string `json:"folderId,omitempty"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type _PublicSequenceLiteResponse PublicSequenceLiteResponse

// NewPublicSequenceLiteResponse instantiates a new PublicSequenceLiteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicSequenceLiteResponse(createdAt time.Time, name string, id string, userId string, updatedAt time.Time) *PublicSequenceLiteResponse {
	this := PublicSequenceLiteResponse{}
	this.CreatedAt = createdAt
	this.Name = name
	this.Id = id
	this.UserId = userId
	this.UpdatedAt = updatedAt
	return &this
}

// NewPublicSequenceLiteResponseWithDefaults instantiates a new PublicSequenceLiteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicSequenceLiteResponseWithDefaults() *PublicSequenceLiteResponse {
	this := PublicSequenceLiteResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *PublicSequenceLiteResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceLiteResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PublicSequenceLiteResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetName returns the Name field value
func (o *PublicSequenceLiteResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceLiteResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PublicSequenceLiteResponse) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *PublicSequenceLiteResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceLiteResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PublicSequenceLiteResponse) SetId(v string) {
	o.Id = v
}

// GetUserId returns the UserId field value
func (o *PublicSequenceLiteResponse) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceLiteResponse) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *PublicSequenceLiteResponse) SetUserId(v string) {
	o.UserId = v
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *PublicSequenceLiteResponse) GetFolderId() string {
	if o == nil || IsNil(o.FolderId) {
		var ret string
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSequenceLiteResponse) GetFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.FolderId) {
		return nil, false
	}
	return o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *PublicSequenceLiteResponse) HasFolderId() bool {
	if o != nil && !IsNil(o.FolderId) {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *PublicSequenceLiteResponse) SetFolderId(v string) {
	o.FolderId = &v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PublicSequenceLiteResponse) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PublicSequenceLiteResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PublicSequenceLiteResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o PublicSequenceLiteResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicSequenceLiteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["name"] = o.Name
	toSerialize["id"] = o.Id
	toSerialize["userId"] = o.UserId
	if !IsNil(o.FolderId) {
		toSerialize["folderId"] = o.FolderId
	}
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *PublicSequenceLiteResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"name",
		"id",
		"userId",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicSequenceLiteResponse := _PublicSequenceLiteResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicSequenceLiteResponse)

	if err != nil {
		return err
	}

	*o = PublicSequenceLiteResponse(varPublicSequenceLiteResponse)

	return err
}

type NullablePublicSequenceLiteResponse struct {
	value *PublicSequenceLiteResponse
	isSet bool
}

func (v NullablePublicSequenceLiteResponse) Get() *PublicSequenceLiteResponse {
	return v.value
}

func (v *NullablePublicSequenceLiteResponse) Set(val *PublicSequenceLiteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicSequenceLiteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicSequenceLiteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicSequenceLiteResponse(val *PublicSequenceLiteResponse) *NullablePublicSequenceLiteResponse {
	return &NullablePublicSequenceLiteResponse{value: val, isSet: true}
}

func (v NullablePublicSequenceLiteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicSequenceLiteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


